{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"themes/kratos-rebirth/source/css/kr-color-dark.min.css","path":"css/kr-color-dark.min.css","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/css/kratosr.min.css","path":"css/kratosr.min.css","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/css/prismjs.min.css","path":"css/prismjs.min.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/images/404.webp","path":"images/404.webp","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/images/about.webp","path":"images/about.webp","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/images/alipay.webp","path":"images/alipay.webp","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/images/avatar.webp","path":"images/avatar.webp","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/images/banner.webp","path":"images/banner.webp","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/images/banner_dark.webp","path":"images/banner_dark.webp","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/images/bg.webp","path":"images/bg.webp","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/images/bg_dark.webp","path":"images/bg_dark.webp","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/images/comment.webp","path":"images/comment.webp","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/images/comment_dark.webp","path":"images/comment_dark.webp","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/images/failure.ico","path":"images/failure.ico","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/images/psr.webp","path":"images/psr.webp","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/images/wechat.webp","path":"images/wechat.webp","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/js/candy.min.js","path":"js/candy.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/js/kr-dark.min.js","path":"js/kr-dark.min.js","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/js/kratosr.min.js","path":"js/kratosr.min.js","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/js/local-search.min.js","path":"js/local-search.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/js/pjax.min.js","path":"js/pjax.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/js/snow.min.js","path":"js/snow.min.js","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/maps/candy.min.js.map","path":"maps/candy.min.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/maps/kr-color-dark.min.css.map","path":"maps/kr-color-dark.min.css.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/maps/kr-dark.min.js.map","path":"maps/kr-dark.min.js.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/maps/kratosr.min.css.map","path":"maps/kratosr.min.css.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/maps/kratosr.min.js.map","path":"maps/kratosr.min.js.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/maps/light.min.css.map","path":"maps/light.min.css.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/maps/local-search.min.js.map","path":"maps/local-search.min.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/maps/night-blue.min.css.map","path":"maps/night-blue.min.css.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/maps/night-bright.min.css.map","path":"maps/night-bright.min.css.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/maps/night-eighties.min.css.map","path":"maps/night-eighties.min.css.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/maps/night.min.css.map","path":"maps/night.min.css.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/maps/pjax.min.js.map","path":"maps/pjax.min.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/maps/prismjs.min.css.map","path":"maps/prismjs.min.css.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/maps/snow.min.js.map","path":"maps/snow.min.js.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/css/highlight/light.min.css","path":"css/highlight/light.min.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/css/highlight/night-blue.min.css","path":"css/highlight/night-blue.min.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/css/highlight/night-bright.min.css","path":"css/highlight/night-bright.min.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/css/highlight/night-eighties.min.css","path":"css/highlight/night-eighties.min.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/css/highlight/night.min.css","path":"css/highlight/night.min.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/images/thumb/bg_1.webp","path":"images/thumb/bg_1.webp","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/HELP-US-OUT.txt","path":"vendors/font-awesome@4.7.0/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/README.md","path":"vendors/font-awesome@4.7.0/README.md","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/package.json","path":"vendors/font-awesome@4.7.0/package.json","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/History.md","path":"vendors/nprogress@0.2.0/History.md","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/License.md","path":"vendors/nprogress@0.2.0/License.md","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/Notes.md","path":"vendors/nprogress@0.2.0/Notes.md","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/Readme.md","path":"vendors/nprogress@0.2.0/Readme.md","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/bower.json","path":"vendors/nprogress@0.2.0/bower.json","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/component.json","path":"vendors/nprogress@0.2.0/component.json","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/nprogress.css","path":"vendors/nprogress@0.2.0/nprogress.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/nprogress.js","path":"vendors/nprogress@0.2.0/nprogress.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/package.json","path":"vendors/nprogress@0.2.0/package.json","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/LICENSE","path":"vendors/qrcode_js@1.0.0/LICENSE","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/README.md","path":"vendors/qrcode_js@1.0.0/README.md","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/bower.json","path":"vendors/qrcode_js@1.0.0/bower.json","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/index-svg.html","path":"vendors/qrcode_js@1.0.0/index-svg.html","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/index.html","path":"vendors/qrcode_js@1.0.0/index.html","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/index.svg","path":"vendors/qrcode_js@1.0.0/index.svg","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/jquery.min.js","path":"vendors/qrcode_js@1.0.0/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/package.json","path":"vendors/qrcode_js@1.0.0/package.json","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/qrcode.js","path":"vendors/qrcode_js@1.0.0/qrcode.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/qrcode.min.js","path":"vendors/qrcode_js@1.0.0/qrcode.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/aplayer@1.10.1/dist/APlayer.min.css","path":"vendors/aplayer@1.10.1/dist/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/aplayer@1.10.1/dist/APlayer.min.css.map","path":"vendors/aplayer@1.10.1/dist/APlayer.min.css.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/aplayer@1.10.1/dist/APlayer.min.js","path":"vendors/aplayer@1.10.1/dist/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/aplayer@1.10.1/dist/APlayer.min.js.map","path":"vendors/aplayer@1.10.1/dist/APlayer.min.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/css/font-awesome.css","path":"vendors/font-awesome@4.7.0/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/css/font-awesome.css.map","path":"vendors/font-awesome@4.7.0/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/css/font-awesome.min.css","path":"vendors/font-awesome@4.7.0/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/fonts/FontAwesome.otf","path":"vendors/font-awesome@4.7.0/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/animated.less","path":"vendors/font-awesome@4.7.0/less/animated.less","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/bordered-pulled.less","path":"vendors/font-awesome@4.7.0/less/bordered-pulled.less","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/core.less","path":"vendors/font-awesome@4.7.0/less/core.less","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/fixed-width.less","path":"vendors/font-awesome@4.7.0/less/fixed-width.less","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/font-awesome.less","path":"vendors/font-awesome@4.7.0/less/font-awesome.less","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/icons.less","path":"vendors/font-awesome@4.7.0/less/icons.less","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/larger.less","path":"vendors/font-awesome@4.7.0/less/larger.less","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/list.less","path":"vendors/font-awesome@4.7.0/less/list.less","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/mixins.less","path":"vendors/font-awesome@4.7.0/less/mixins.less","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/path.less","path":"vendors/font-awesome@4.7.0/less/path.less","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/rotated-flipped.less","path":"vendors/font-awesome@4.7.0/less/rotated-flipped.less","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/screen-reader.less","path":"vendors/font-awesome@4.7.0/less/screen-reader.less","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/stacked.less","path":"vendors/font-awesome@4.7.0/less/stacked.less","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/variables.less","path":"vendors/font-awesome@4.7.0/less/variables.less","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/scss/font-awesome.scss","path":"vendors/font-awesome@4.7.0/scss/font-awesome.scss","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitalk@1.7.2/dist/gitalk-component.js","path":"vendors/gitalk@1.7.2/dist/gitalk-component.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitalk@1.7.2/dist/gitalk-component.js.map","path":"vendors/gitalk@1.7.2/dist/gitalk-component.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitalk@1.7.2/dist/gitalk.css","path":"vendors/gitalk@1.7.2/dist/gitalk.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitalk@1.7.2/dist/gitalk.css.map","path":"vendors/gitalk@1.7.2/dist/gitalk.css.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitalk@1.7.2/dist/gitalk.js","path":"vendors/gitalk@1.7.2/dist/gitalk.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitalk@1.7.2/dist/gitalk.js.map","path":"vendors/gitalk@1.7.2/dist/gitalk.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitalk@1.7.2/dist/gitalk.min.js","path":"vendors/gitalk@1.7.2/dist/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitalk@1.7.2/dist/gitalk.min.js.map","path":"vendors/gitalk@1.7.2/dist/gitalk.min.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/constants.js","path":"vendors/gitment@0.0.3/dist/constants.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/constants.js.map","path":"vendors/gitment@0.0.3/dist/constants.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/gitment.browser.js","path":"vendors/gitment@0.0.3/dist/gitment.browser.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/gitment.browser.js.map","path":"vendors/gitment@0.0.3/dist/gitment.browser.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/gitment.js","path":"vendors/gitment@0.0.3/dist/gitment.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/gitment.js.map","path":"vendors/gitment@0.0.3/dist/gitment.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/icons.js","path":"vendors/gitment@0.0.3/dist/icons.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/icons.js.map","path":"vendors/gitment@0.0.3/dist/icons.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/utils.js","path":"vendors/gitment@0.0.3/dist/utils.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/utils.js.map","path":"vendors/gitment@0.0.3/dist/utils.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/jquery@3.6.0/dist/jquery.js","path":"vendors/jquery@3.6.0/dist/jquery.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/jquery@3.6.0/dist/jquery.min.js","path":"vendors/jquery@3.6.0/dist/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/jquery@3.6.0/dist/jquery.min.map","path":"vendors/jquery@3.6.0/dist/jquery.min.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/jquery@3.6.0/dist/jquery.slim.js","path":"vendors/jquery@3.6.0/dist/jquery.slim.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/jquery@3.6.0/dist/jquery.slim.min.map","path":"vendors/jquery@3.6.0/dist/jquery.slim.min.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/jquery@3.6.0/dist/jquery.slim.min.js","path":"vendors/jquery@3.6.0/dist/jquery.slim.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/disqusjs@1.3.0/dist/disqus.js","path":"vendors/disqusjs@1.3.0/dist/disqus.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/disqusjs@1.3.0/dist/disqusjs.css","path":"vendors/disqusjs@1.3.0/dist/disqusjs.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.core.js","path":"vendors/mermaid@9.1.1/dist/mermaid.core.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.core.js.map","path":"vendors/mermaid@9.1.1/dist/mermaid.core.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.esm.min.mjs","path":"vendors/mermaid@9.1.1/dist/mermaid.esm.min.mjs","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.esm.min.mjs.LICENSE.txt","path":"vendors/mermaid@9.1.1/dist/mermaid.esm.min.mjs.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.esm.min.mjs.map","path":"vendors/mermaid@9.1.1/dist/mermaid.esm.min.mjs.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.js","path":"vendors/mermaid@9.1.1/dist/mermaid.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.js.map","path":"vendors/mermaid@9.1.1/dist/mermaid.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.min.js","path":"vendors/mermaid@9.1.1/dist/mermaid.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.min.js.LICENSE.txt","path":"vendors/mermaid@9.1.1/dist/mermaid.min.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.min.js.map","path":"vendors/mermaid@9.1.1/dist/mermaid.min.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/layui.all.js","path":"vendors/layui-src@2.5.5/dist/layui.all.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/layui.js","path":"vendors/layui-src@2.5.5/dist/layui.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/meting@2.0.1/dist/Meting.min.js","path":"vendors/meting@2.0.1/dist/Meting.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/test/component.html","path":"vendors/nprogress@0.2.0/test/component.html","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/test/test.js","path":"vendors/nprogress@0.2.0/test/test.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/twikoo@1.5.11/dist/twikoo.all.min.js","path":"vendors/twikoo@1.5.11/dist/twikoo.all.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/twikoo@1.5.11/dist/twikoo.all.min.js.LICENSE.txt","path":"vendors/twikoo@1.5.11/dist/twikoo.all.min.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/twikoo@1.5.11/dist/twikoo.min.js","path":"vendors/twikoo@1.5.11/dist/twikoo.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/twikoo@1.5.11/dist/twikoo.min.js.LICENSE.txt","path":"vendors/twikoo@1.5.11/dist/twikoo.min.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/Valine.Pure.min.js","path":"vendors/valine@1.4.18/dist/Valine.Pure.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/Valine.Pure.min.js.map","path":"vendors/valine@1.4.18/dist/Valine.Pure.min.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/Valine.min.js","path":"vendors/valine@1.4.18/dist/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/Valine.min.js.map","path":"vendors/valine@1.4.18/dist/Valine.min.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/Valine.min.umd.js","path":"vendors/valine@1.4.18/dist/Valine.min.umd.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/Valine.min.umd.js.map","path":"vendors/valine@1.4.18/dist/Valine.min.umd.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/detect.min.js","path":"vendors/valine@1.4.18/dist/detect.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/escape.min.js","path":"vendors/valine@1.4.18/dist/escape.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.css","path":"vendors/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.js","path":"vendors/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.css","path":"vendors/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.js","path":"vendors/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/theme/default.js","path":"vendors/gitment@0.0.3/dist/theme/default.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/theme/default.js.map","path":"vendors/gitment@0.0.3/dist/theme/default.js.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/css/bootstrap-theme.css","path":"vendors/bootstrap@3.3.4/dist/css/bootstrap-theme.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/css/bootstrap-theme.css.map","path":"vendors/bootstrap@3.3.4/dist/css/bootstrap-theme.css.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/css/bootstrap-theme.min.css","path":"vendors/bootstrap@3.3.4/dist/css/bootstrap-theme.min.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/css/bootstrap.css","path":"vendors/bootstrap@3.3.4/dist/css/bootstrap.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/css/bootstrap.css.map","path":"vendors/bootstrap@3.3.4/dist/css/bootstrap.css.map","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/css/bootstrap.min.css","path":"vendors/bootstrap@3.3.4/dist/css/bootstrap.min.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.eot","path":"vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.eot","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.svg","path":"vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.svg","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.ttf","path":"vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.ttf","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.woff","path":"vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.woff","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.woff2","path":"vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.woff2","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/js/bootstrap.js","path":"vendors/bootstrap@3.3.4/dist/js/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/js/bootstrap.min.js","path":"vendors/bootstrap@3.3.4/dist/js/bootstrap.min.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/js/npm.js","path":"vendors/bootstrap@3.3.4/dist/js/npm.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/layui.css","path":"vendors/layui-src@2.5.5/dist/css/layui.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/layui.mobile.css","path":"vendors/layui-src@2.5.5/dist/css/layui.mobile.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/font/iconfont.eot","path":"vendors/layui-src@2.5.5/dist/font/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/font/iconfont.svg","path":"vendors/layui-src@2.5.5/dist/font/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/font/iconfont.ttf","path":"vendors/layui-src@2.5.5/dist/font/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/font/iconfont.woff","path":"vendors/layui-src@2.5.5/dist/font/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/font/iconfont.woff2","path":"vendors/layui-src@2.5.5/dist/font/iconfont.woff2","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/0.gif","path":"vendors/layui-src@2.5.5/dist/images/face/0.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/1.gif","path":"vendors/layui-src@2.5.5/dist/images/face/1.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/10.gif","path":"vendors/layui-src@2.5.5/dist/images/face/10.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/11.gif","path":"vendors/layui-src@2.5.5/dist/images/face/11.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/12.gif","path":"vendors/layui-src@2.5.5/dist/images/face/12.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/13.gif","path":"vendors/layui-src@2.5.5/dist/images/face/13.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/14.gif","path":"vendors/layui-src@2.5.5/dist/images/face/14.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/code.css","path":"vendors/layui-src@2.5.5/dist/css/modules/code.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/16.gif","path":"vendors/layui-src@2.5.5/dist/images/face/16.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/15.gif","path":"vendors/layui-src@2.5.5/dist/images/face/15.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/17.gif","path":"vendors/layui-src@2.5.5/dist/images/face/17.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/18.gif","path":"vendors/layui-src@2.5.5/dist/images/face/18.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/19.gif","path":"vendors/layui-src@2.5.5/dist/images/face/19.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/2.gif","path":"vendors/layui-src@2.5.5/dist/images/face/2.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/20.gif","path":"vendors/layui-src@2.5.5/dist/images/face/20.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/21.gif","path":"vendors/layui-src@2.5.5/dist/images/face/21.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/22.gif","path":"vendors/layui-src@2.5.5/dist/images/face/22.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/23.gif","path":"vendors/layui-src@2.5.5/dist/images/face/23.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/24.gif","path":"vendors/layui-src@2.5.5/dist/images/face/24.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/25.gif","path":"vendors/layui-src@2.5.5/dist/images/face/25.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/26.gif","path":"vendors/layui-src@2.5.5/dist/images/face/26.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/27.gif","path":"vendors/layui-src@2.5.5/dist/images/face/27.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/28.gif","path":"vendors/layui-src@2.5.5/dist/images/face/28.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/3.gif","path":"vendors/layui-src@2.5.5/dist/images/face/3.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/30.gif","path":"vendors/layui-src@2.5.5/dist/images/face/30.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/32.gif","path":"vendors/layui-src@2.5.5/dist/images/face/32.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/33.gif","path":"vendors/layui-src@2.5.5/dist/images/face/33.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/34.gif","path":"vendors/layui-src@2.5.5/dist/images/face/34.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/31.gif","path":"vendors/layui-src@2.5.5/dist/images/face/31.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/29.gif","path":"vendors/layui-src@2.5.5/dist/images/face/29.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/35.gif","path":"vendors/layui-src@2.5.5/dist/images/face/35.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/36.gif","path":"vendors/layui-src@2.5.5/dist/images/face/36.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/37.gif","path":"vendors/layui-src@2.5.5/dist/images/face/37.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/38.gif","path":"vendors/layui-src@2.5.5/dist/images/face/38.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/39.gif","path":"vendors/layui-src@2.5.5/dist/images/face/39.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/4.gif","path":"vendors/layui-src@2.5.5/dist/images/face/4.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/40.gif","path":"vendors/layui-src@2.5.5/dist/images/face/40.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/41.gif","path":"vendors/layui-src@2.5.5/dist/images/face/41.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/42.gif","path":"vendors/layui-src@2.5.5/dist/images/face/42.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/43.gif","path":"vendors/layui-src@2.5.5/dist/images/face/43.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/44.gif","path":"vendors/layui-src@2.5.5/dist/images/face/44.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/45.gif","path":"vendors/layui-src@2.5.5/dist/images/face/45.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/46.gif","path":"vendors/layui-src@2.5.5/dist/images/face/46.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/48.gif","path":"vendors/layui-src@2.5.5/dist/images/face/48.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/49.gif","path":"vendors/layui-src@2.5.5/dist/images/face/49.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/5.gif","path":"vendors/layui-src@2.5.5/dist/images/face/5.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/50.gif","path":"vendors/layui-src@2.5.5/dist/images/face/50.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/47.gif","path":"vendors/layui-src@2.5.5/dist/images/face/47.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/52.gif","path":"vendors/layui-src@2.5.5/dist/images/face/52.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/53.gif","path":"vendors/layui-src@2.5.5/dist/images/face/53.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/51.gif","path":"vendors/layui-src@2.5.5/dist/images/face/51.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/54.gif","path":"vendors/layui-src@2.5.5/dist/images/face/54.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/55.gif","path":"vendors/layui-src@2.5.5/dist/images/face/55.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/57.gif","path":"vendors/layui-src@2.5.5/dist/images/face/57.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/56.gif","path":"vendors/layui-src@2.5.5/dist/images/face/56.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/58.gif","path":"vendors/layui-src@2.5.5/dist/images/face/58.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/59.gif","path":"vendors/layui-src@2.5.5/dist/images/face/59.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/6.gif","path":"vendors/layui-src@2.5.5/dist/images/face/6.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/60.gif","path":"vendors/layui-src@2.5.5/dist/images/face/60.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/61.gif","path":"vendors/layui-src@2.5.5/dist/images/face/61.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/62.gif","path":"vendors/layui-src@2.5.5/dist/images/face/62.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/64.gif","path":"vendors/layui-src@2.5.5/dist/images/face/64.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/65.gif","path":"vendors/layui-src@2.5.5/dist/images/face/65.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/63.gif","path":"vendors/layui-src@2.5.5/dist/images/face/63.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/66.gif","path":"vendors/layui-src@2.5.5/dist/images/face/66.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/68.gif","path":"vendors/layui-src@2.5.5/dist/images/face/68.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/67.gif","path":"vendors/layui-src@2.5.5/dist/images/face/67.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/7.gif","path":"vendors/layui-src@2.5.5/dist/images/face/7.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/71.gif","path":"vendors/layui-src@2.5.5/dist/images/face/71.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/8.gif","path":"vendors/layui-src@2.5.5/dist/images/face/8.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/69.gif","path":"vendors/layui-src@2.5.5/dist/images/face/69.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/70.gif","path":"vendors/layui-src@2.5.5/dist/images/face/70.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/9.gif","path":"vendors/layui-src@2.5.5/dist/images/face/9.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/carousel.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/carousel.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/code.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/code.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/colorpicker.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/colorpicker.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/flow.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/flow.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/element.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/element.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/form.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/form.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/jquery.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/jquery.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/laydate.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/laydate.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/layedit.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/layedit.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/layer.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/layer.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/layim.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/layim.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/rate.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/rate.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/slider.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/slider.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/mobile.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/mobile.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/laytpl.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/laytpl.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/table.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/table.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/laypage.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/laypage.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/tree.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/tree.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/transfer.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/transfer.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/upload.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/upload.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/util.js","path":"vendors/layui-src@2.5.5/dist/lay/modules/util.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/plugins/emojis/index.js","path":"vendors/valine@1.4.18/dist/plugins/emojis/index.js","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/plugins/emojis/light.json","path":"vendors/valine@1.4.18/dist/plugins/emojis/light.json","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/layim.css","path":"vendors/layui-src@2.5.5/dist/css/modules/layim/layim.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/laydate/default/laydate.css","path":"vendors/layui-src@2.5.5/dist/css/modules/laydate/default/laydate.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layer/default/icon-ext.png","path":"vendors/layui-src@2.5.5/dist/css/modules/layer/default/icon-ext.png","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layer/default/icon.png","path":"vendors/layui-src@2.5.5/dist/css/modules/layer/default/icon.png","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layer/default/layer.css","path":"vendors/layui-src@2.5.5/dist/css/modules/layer/default/layer.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layer/default/loading-0.gif","path":"vendors/layui-src@2.5.5/dist/css/modules/layer/default/loading-0.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layer/default/loading-1.gif","path":"vendors/layui-src@2.5.5/dist/css/modules/layer/default/loading-1.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layer/default/loading-2.gif","path":"vendors/layui-src@2.5.5/dist/css/modules/layer/default/loading-2.gif","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/html/chatlog.html","path":"vendors/layui-src@2.5.5/dist/css/modules/layim/html/chatlog.html","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/html/find.html","path":"vendors/layui-src@2.5.5/dist/css/modules/layim/html/find.html","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/html/getmsg.json","path":"vendors/layui-src@2.5.5/dist/css/modules/layim/html/getmsg.json","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/html/msgbox.html","path":"vendors/layui-src@2.5.5/dist/css/modules/layim/html/msgbox.html","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/mobile/layim.css","path":"vendors/layui-src@2.5.5/dist/css/modules/layim/mobile/layim.css","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/1.jpg","path":"vendors/layui-src@2.5.5/dist/css/modules/layim/skin/1.jpg","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/2.jpg","path":"vendors/layui-src@2.5.5/dist/css/modules/layim/skin/2.jpg","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/3.jpg","path":"vendors/layui-src@2.5.5/dist/css/modules/layim/skin/3.jpg","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/4.jpg","path":"vendors/layui-src@2.5.5/dist/css/modules/layim/skin/4.jpg","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/5.jpg","path":"vendors/layui-src@2.5.5/dist/css/modules/layim/skin/5.jpg","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/logo.jpg","path":"vendors/layui-src@2.5.5/dist/css/modules/layim/skin/logo.jpg","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/voice/default.mp3","path":"vendors/layui-src@2.5.5/dist/css/modules/layim/voice/default.mp3","modified":0,"renderable":1},{"_id":"themes/kratos-rebirth/source/js/md5.min.js","path":"js/md5.min.js","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/maps/md5.min.js.map","path":"maps/md5.min.js.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/api.cjs","path":"vendors/@waline/client@2.14.1/dist/api.cjs","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/api.cjs.map","path":"vendors/@waline/client@2.14.1/dist/api.cjs.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/api.d.cts","path":"vendors/@waline/client@2.14.1/dist/api.d.cts","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/api.d.mts","path":"vendors/@waline/client@2.14.1/dist/api.d.mts","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/api.d.ts","path":"vendors/@waline/client@2.14.1/dist/api.d.ts","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/api.mjs","path":"vendors/@waline/client@2.14.1/dist/api.mjs","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/api.mjs.map","path":"vendors/@waline/client@2.14.1/dist/api.mjs.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.cjs","path":"vendors/@waline/client@2.14.1/dist/comment.cjs","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.cjs.map","path":"vendors/@waline/client@2.14.1/dist/comment.cjs.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.d.cts","path":"vendors/@waline/client@2.14.1/dist/comment.d.cts","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.d.mts","path":"vendors/@waline/client@2.14.1/dist/comment.d.mts","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.d.ts","path":"vendors/@waline/client@2.14.1/dist/comment.d.ts","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.js","path":"vendors/@waline/client@2.14.1/dist/comment.js","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.js.map","path":"vendors/@waline/client@2.14.1/dist/comment.js.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.mjs","path":"vendors/@waline/client@2.14.1/dist/comment.mjs","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.mjs.map","path":"vendors/@waline/client@2.14.1/dist/comment.mjs.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/component.mjs","path":"vendors/@waline/client@2.14.1/dist/component.mjs","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/component.mjs.map","path":"vendors/@waline/client@2.14.1/dist/component.mjs.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/legacy.umd.d.ts","path":"vendors/@waline/client@2.14.1/dist/legacy.umd.d.ts","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/legacy.umd.js","path":"vendors/@waline/client@2.14.1/dist/legacy.umd.js","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/legacy.umd.js.map","path":"vendors/@waline/client@2.14.1/dist/legacy.umd.js.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.cjs","path":"vendors/@waline/client@2.14.1/dist/pageview.cjs","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.cjs.map","path":"vendors/@waline/client@2.14.1/dist/pageview.cjs.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.d.cts","path":"vendors/@waline/client@2.14.1/dist/pageview.d.cts","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.d.mts","path":"vendors/@waline/client@2.14.1/dist/pageview.d.mts","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.d.ts","path":"vendors/@waline/client@2.14.1/dist/pageview.d.ts","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.js","path":"vendors/@waline/client@2.14.1/dist/pageview.js","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.js.map","path":"vendors/@waline/client@2.14.1/dist/pageview.js.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.mjs","path":"vendors/@waline/client@2.14.1/dist/pageview.mjs","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.mjs.map","path":"vendors/@waline/client@2.14.1/dist/pageview.mjs.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/shim.cjs","path":"vendors/@waline/client@2.14.1/dist/shim.cjs","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/shim.cjs.map","path":"vendors/@waline/client@2.14.1/dist/shim.cjs.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/shim.d.cts","path":"vendors/@waline/client@2.14.1/dist/shim.d.cts","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/shim.d.mts","path":"vendors/@waline/client@2.14.1/dist/shim.d.mts","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/shim.mjs","path":"vendors/@waline/client@2.14.1/dist/shim.mjs","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/shim.mjs.map","path":"vendors/@waline/client@2.14.1/dist/shim.mjs.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline-meta.css","path":"vendors/@waline/client@2.14.1/dist/waline-meta.css","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline-meta.css.map","path":"vendors/@waline/client@2.14.1/dist/waline-meta.css.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.cjs","path":"vendors/@waline/client@2.14.1/dist/waline.cjs","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.cjs.map","path":"vendors/@waline/client@2.14.1/dist/waline.cjs.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.css","path":"vendors/@waline/client@2.14.1/dist/waline.css","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.css.map","path":"vendors/@waline/client@2.14.1/dist/waline.css.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.d.cts","path":"vendors/@waline/client@2.14.1/dist/waline.d.cts","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.d.mts","path":"vendors/@waline/client@2.14.1/dist/waline.d.mts","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.d.ts","path":"vendors/@waline/client@2.14.1/dist/waline.d.ts","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.js","path":"vendors/@waline/client@2.14.1/dist/waline.js","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.js.map","path":"vendors/@waline/client@2.14.1/dist/waline.js.map","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.mjs","path":"vendors/@waline/client@2.14.1/dist/waline.mjs","modified":1,"renderable":1},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.mjs.map","path":"vendors/@waline/client@2.14.1/dist/waline.mjs.map","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/.git","hash":"bb130f26548d4bfae2a47b7b2bfb3ea35c45d076","modified":1662432455044},{"_id":"source/robots.txt","hash":"635946c8503c75058d9ebdcf10c1100106fe34e5","modified":1662432362830},{"_id":"source/CNAME","hash":"f4ece8c85250341682f5b25d921c49c9829c575b","modified":1662432362830},{"_id":"source/_posts/spock初探.md","hash":"ab30f96acab79f0bf20913dc3d20422133ae253d","modified":1662432464508},{"_id":"source/_posts/SpringBoot-LocalDateTime-后端接收参数最佳实践.md","hash":"4480eef6fc8aa5db9acc155b2a126e7313431bf1","modified":1677668838109},{"_id":"source/_posts/博客终于搭好了.md","hash":"95acab6a2242cad020912d4c85c91431c7ac3f0b","modified":1662432464508},{"_id":"source/_posts/记录一次startUML破解.md","hash":"3b53e4135f15781f81139ba01f287a014b78f531","modified":1662432464508},{"_id":"themes/kratos-rebirth/Kratos-Rebirth-Manual.md","hash":"e400244898a10821e1421d948fbd6e386a2b537b","modified":1678705993489},{"_id":"themes/kratos-rebirth/.npmignore","hash":"c33752bc1711668ead4e649355c51d6410dff608","modified":1662432464556},{"_id":"themes/kratos-rebirth/.gitignore","hash":"d96c3560f238c202cd22a61dfd057e6cd3ff1b88","modified":1662432464556},{"_id":"themes/kratos-rebirth/LICENSE","hash":"31a3d460bb3c7d98845187c716a30db81c44b615","modified":1662432464557},{"_id":"themes/kratos-rebirth/ReadMe.md","hash":"226fe826a596132a9a288f19f7df5f6d093de1ac","modified":1671101784093},{"_id":"themes/kratos-rebirth/.github/dependabot.yml","hash":"89c16d0b45677ff20b86b655e3bfc7f1e675b2d4","modified":1662432464556},{"_id":"themes/kratos-rebirth/_config.yml","hash":"bf2461baf3f5fa18ade1d81d38d9cf6cdfd4caed","modified":1678705993489},{"_id":"themes/kratos-rebirth/gulpfile.js","hash":"ee5ebfd16459eda0bf9f82f5760b49cdf8cbb41c","modified":1662432464557},{"_id":"themes/kratos-rebirth/.demo/_config.kratos-rebirth.yml","hash":"42d1339dc7553285793834d5f098c2014375a8a9","modified":1678705993489},{"_id":"themes/kratos-rebirth/.github/FUNDING.yml","hash":"034eaa235c5cc18532e09e24106120d711af0320","modified":1662432464556},{"_id":"themes/kratos-rebirth/languages/zh-CN.yml","hash":"f253d94bc5171ef6e00d0511c3f4db26d3441781","modified":1662432464557},{"_id":"themes/kratos-rebirth/package.json","hash":"3bb066cdc1b1545ce4b807019fb77676626a6a5d","modified":1678705993489},{"_id":"themes/kratos-rebirth/layout/category.ejs","hash":"5677b70953e6a33038a0e03eaa06e45c10ec7d73","modified":1662432464559},{"_id":"themes/kratos-rebirth/layout/archive.ejs","hash":"6dec1243c2d76a415d2fa5766ab184652c90c18c","modified":1662432464559},{"_id":"themes/kratos-rebirth/scripts/additional-pages.js","hash":"b99cdd8fa23d0519403abefc595f031ebaace59a","modified":1662432464559},{"_id":"themes/kratos-rebirth/layout/layout.ejs","hash":"ea86e5b8f64957145ff52f5e2660e62ff92e0b05","modified":1662432464559},{"_id":"themes/kratos-rebirth/scripts/cdn-optimize-helpers.js","hash":"b0865dc553d3b757757b5a0471d5bcef6fd5be41","modified":1662432464559},{"_id":"themes/kratos-rebirth/layout/page.ejs","hash":"4593e0a73b36b34dce40e3fbfe4c8056a7c9eb8f","modified":1662432464559},{"_id":"themes/kratos-rebirth/scripts/check-update.js","hash":"fcadb1499a85d427d5b80fc6c64eab61ca999925","modified":1662432464559},{"_id":"themes/kratos-rebirth/scripts/friends.js","hash":"4c7dfca9d47c508934d7d27a56f8037a761da7ff","modified":1662432464559},{"_id":"themes/kratos-rebirth/layout/index.ejs","hash":"e989df9a8aac897515b9f3ea8e3cb8f9e14f0be5","modified":1678705993489},{"_id":"themes/kratos-rebirth/scripts/genconfig.js","hash":"41e8da155a1cc418e05f3f9312568f0b3b9bd128","modified":1662432464559},{"_id":"themes/kratos-rebirth/scripts/search.js","hash":"fb892991e53a272db74ec5f3d3ab26e728c8ee06","modified":1662432464560},{"_id":"themes/kratos-rebirth/layout/tag.ejs","hash":"5677b70953e6a33038a0e03eaa06e45c10ec7d73","modified":1662432464559},{"_id":"themes/kratos-rebirth/scripts/tag-widgets.js","hash":"78d14c05c6205762f73ad3df420d9c6e78b9cd4e","modified":1662432464560},{"_id":"themes/kratos-rebirth/.github/ISSUE_TEMPLATE/feature_request.md","hash":"40e561f1af41b0b88d146ec1ea62d7eabda3e890","modified":1662432464556},{"_id":"themes/kratos-rebirth/.github/workflows/auto-release.yml","hash":"bb8f12db86ed191d831ef4036afeb047a41dce85","modified":1662432464556},{"_id":"themes/kratos-rebirth/.github/ISSUE_TEMPLATE/bug_report.md","hash":"410f2b7b788f86585451c7f351245e4d51a87f91","modified":1662432464556},{"_id":"themes/kratos-rebirth/.github/workflows/build-demo.yml","hash":"a9db5770d0840e4d3072c1de70505be07339b7f5","modified":1662432464556},{"_id":"themes/kratos-rebirth/.github/workflows/build-test.yml","hash":"47e843a2c76a84720e059665cce259a8d40453f0","modified":1662432464556},{"_id":"themes/kratos-rebirth/layout/_comments/disqusjs.ejs","hash":"703b125ce33489c9be62a2c6ccfc913af9d0ca05","modified":1662432464557},{"_id":"themes/kratos-rebirth/layout/_comments/disqus.ejs","hash":"38a80a494e861be233b145675696ad9699aeeba0","modified":1662432464557},{"_id":"themes/kratos-rebirth/layout/_comments/gitalk.ejs","hash":"00a6c24a3951153ffe19a08d71632118552afba0","modified":1678705993489},{"_id":"themes/kratos-rebirth/layout/post.ejs","hash":"7c85a4ea26164b949ac38e39ad2e16514b90cd04","modified":1678705993489},{"_id":"themes/kratos-rebirth/layout/_comments/livere.ejs","hash":"21dc5bc91d73b54b06ac36669eefd5258b07e83e","modified":1662432464557},{"_id":"themes/kratos-rebirth/layout/_comments/twikoo.ejs","hash":"7d0ac9d25737c75ab1236dd54c22d0a8c61f288e","modified":1662432464557},{"_id":"themes/kratos-rebirth/layout/_comments/valine.ejs","hash":"209c463bc047bac75b9ebe45e8cf87f6255a6368","modified":1662432464557},{"_id":"themes/kratos-rebirth/layout/_pages/categories.ejs","hash":"39a1c79de03dbc8295c9da59cebec15ae30dd632","modified":1662432464558},{"_id":"themes/kratos-rebirth/layout/_comments/waline.ejs","hash":"58223eb81e7a43c565f05c6364dbafb500c9341a","modified":1678705993489},{"_id":"themes/kratos-rebirth/layout/_pages/404.ejs","hash":"b29697cfdbbf641c8efdff7d0273a4883e678f42","modified":1662432464558},{"_id":"themes/kratos-rebirth/layout/_pages/search-page.ejs","hash":"3dc81379363c8ad0bedf8489a3e6200841ff2c79","modified":1662432464558},{"_id":"themes/kratos-rebirth/layout/_comments/gitment.ejs","hash":"7366111beed060f528e6ab6a1e907444d61519f5","modified":1662432464557},{"_id":"themes/kratos-rebirth/layout/_pages/tags.ejs","hash":"70b9ce41a0e149e60788ac6d16864fea5b3311e3","modified":1662432464558},{"_id":"themes/kratos-rebirth/layout/_partial/after-footer.ejs","hash":"715a0446c9aa0264d0e627e864ef59d884d48f19","modified":1678705993489},{"_id":"themes/kratos-rebirth/layout/_partial/footer.ejs","hash":"7046d79248a9287ddcc0752a7b1fb3c164bc99c1","modified":1678705993489},{"_id":"themes/kratos-rebirth/layout/_partial/sidebar.ejs","hash":"46b53d4131e1fce463054b5c4399cbd6ddd2f0fd","modified":1662432464558},{"_id":"themes/kratos-rebirth/layout/_partial/header.ejs","hash":"5a0c9e8d4e20bc0cc3cd397843ab4315ed9845c5","modified":1662432464558},{"_id":"themes/kratos-rebirth/layout/_partial/head.ejs","hash":"bb4e80d152284db4ab6225922c56ee078c71b219","modified":1678705993489},{"_id":"themes/kratos-rebirth/layout/_widget/about.ejs","hash":"25cde6dff270c41ff9bb37242e3e6aa6b85761a4","modified":1662432464558},{"_id":"themes/kratos-rebirth/layout/_plugins/mermaid.ejs","hash":"827cdcbfa44205a2a4114b1bdb0644bedc3efade","modified":1662432464558},{"_id":"themes/kratos-rebirth/layout/_tools/player.ejs","hash":"af36d7c6cb593af243f5342028bb337364e9afaf","modified":1662432464558},{"_id":"themes/kratos-rebirth/layout/_widget/tagcloud.ejs","hash":"223730bfe007f26d5279cb66f1da9222c7d64c62","modified":1662432464559},{"_id":"themes/kratos-rebirth/layout/_widget/posts.ejs","hash":"43461f2e3cb32b9092dcd9a977098ff8be6a3f68","modified":1662432464558},{"_id":"themes/kratos-rebirth/scripts/lib/cdn.js","hash":"4d408c31df9605ac9d45a3cea53fcd1ab70178df","modified":1662432464559},{"_id":"themes/kratos-rebirth/layout/_widget/toc.ejs","hash":"a2c8f900369ada4dfa9793ac496a5eafc38502a9","modified":1662432464559},{"_id":"themes/kratos-rebirth/layout/_tools/share.ejs","hash":"3f7369fc6344965f12315e5214aa9eee3fe8b5f1","modified":1662432464558},{"_id":"themes/kratos-rebirth/source/css/prismjs.min.css","hash":"6f2def0d76387c908324f38f845516c7f2d559d7","modified":1662432464560},{"_id":"themes/kratos-rebirth/source/css/kratosr.min.css","hash":"2117a2c9ed00192c3f7c45a2b125d6ea53bbf89f","modified":1678705993489},{"_id":"themes/kratos-rebirth/source/css/kr-color-dark.min.css","hash":"a3a06c23d5ac02170c64580e63b29b438fa82c0f","modified":1678705993489},{"_id":"themes/kratos-rebirth/layout/_widget/category.ejs","hash":"1f24ccfd175fabc83c7ea81f3412e78e65b8f3ab","modified":1662432464558},{"_id":"themes/kratos-rebirth/source/images/404.webp","hash":"d2e2bd5cc2627a2b04d5e449a67949a2605ae13e","modified":1662432464560},{"_id":"themes/kratos-rebirth/source/images/alipay.webp","hash":"01fa6151d2122f0470ee6f38ac8e4ced6c81912e","modified":1662432464560},{"_id":"themes/kratos-rebirth/source/images/banner.webp","hash":"7c5093243bfd581a633ba8a905e2d379cfa78c00","modified":1662432464561},{"_id":"themes/kratos-rebirth/source/images/about.webp","hash":"ca0fb739ab4426e7895742c1d8d52df1e14468e8","modified":1662432464560},{"_id":"themes/kratos-rebirth/source/images/avatar.webp","hash":"3ed6e4e1e08e9c2700aa149d1f9e068fb02947cd","modified":1662432464561},{"_id":"themes/kratos-rebirth/source/images/bg_dark.webp","hash":"b38d139d38ec675ba15e26318d1976a38cf4c5a0","modified":1678705993493},{"_id":"themes/kratos-rebirth/source/images/bg.webp","hash":"b38d139d38ec675ba15e26318d1976a38cf4c5a0","modified":1678705993493},{"_id":"themes/kratos-rebirth/source/images/failure.ico","hash":"5eec5c163400d8ece74286da49130da1ead3f6f6","modified":1662432464562},{"_id":"themes/kratos-rebirth/source/images/comment_dark.webp","hash":"7756b5a69f2a85a2d1c4251e3055bfa0218aa385","modified":1662432464561},{"_id":"themes/kratos-rebirth/source/images/comment.webp","hash":"7756b5a69f2a85a2d1c4251e3055bfa0218aa385","modified":1662432464561},{"_id":"themes/kratos-rebirth/source/images/banner_dark.webp","hash":"5589986444825e2b75c369d419ff736d3a396bac","modified":1662432464561},{"_id":"themes/kratos-rebirth/source/js/candy.min.js","hash":"598f7f5c4efb85c6f7c55183418b070a441b56ee","modified":1662432464562},{"_id":"themes/kratos-rebirth/source/images/wechat.webp","hash":"06f3997bf554768c04cb588198c7b3d68c21b8e9","modified":1662432464562},{"_id":"themes/kratos-rebirth/source/images/psr.webp","hash":"bf457bf84bca767bac1bd2b960d91c53ba3fbdee","modified":1662432464562},{"_id":"themes/kratos-rebirth/source/js/local-search.min.js","hash":"8ed9ec22fa7a835c9f5f6e96b8368ae912e9afd0","modified":1662432464562},{"_id":"themes/kratos-rebirth/source/js/kratosr.min.js","hash":"bc5e952117fbd4e4dd6604ea6909b06c8f273e73","modified":1678705993493},{"_id":"themes/kratos-rebirth/source/js/pjax.min.js","hash":"84b037cb01dcb34ebc0a1de1aa2f773fe1c51e7a","modified":1662432464562},{"_id":"themes/kratos-rebirth/source/js/kr-dark.min.js","hash":"8ff673018b5688e47f89fe461e30bf30abb81c6e","modified":1678705993493},{"_id":"themes/kratos-rebirth/source/maps/candy.min.js.map","hash":"808e7e131fbd94534e4b66f08c7a05256320d278","modified":1662432464563},{"_id":"themes/kratos-rebirth/source/maps/kr-color-dark.min.css.map","hash":"cabc8e5ec7ef358548bcdb1d09baf573f3d9d541","modified":1678705993493},{"_id":"themes/kratos-rebirth/source/maps/kr-dark.min.js.map","hash":"ee5aa9d42fd014aafaf746bf7dcb47066e013d08","modified":1678705993493},{"_id":"themes/kratos-rebirth/source/js/snow.min.js","hash":"6cc50c7bb171b57b9149a3aa9b9e939ab36fd847","modified":1678705993493},{"_id":"themes/kratos-rebirth/source/maps/local-search.min.js.map","hash":"532c2b78ea7a3b8107789b048e1c8a0ec93f5555","modified":1662432464564},{"_id":"themes/kratos-rebirth/source/maps/kratosr.min.js.map","hash":"a370cf5ce606a2ca4bd6546e64c24b274e500412","modified":1678705993493},{"_id":"themes/kratos-rebirth/source/maps/light.min.css.map","hash":"e3710e0da980ad6194de0f44beba70da88c04777","modified":1671101784099},{"_id":"themes/kratos-rebirth/source/maps/night-eighties.min.css.map","hash":"2b1e04a4cc361c634760da29efb88b91f8629840","modified":1671101784100},{"_id":"themes/kratos-rebirth/source/maps/night-bright.min.css.map","hash":"237954262d68dde9f7ab3d2a8b2eba58dd74903d","modified":1671101784100},{"_id":"themes/kratos-rebirth/source/maps/night.min.css.map","hash":"92f2de31eca4dbf06fcff69ffe8a43f378b29869","modified":1671101784100},{"_id":"themes/kratos-rebirth/source/maps/pjax.min.js.map","hash":"7527c8cc3d16b4623c5a1f710c02bde0bc59fda1","modified":1662432464564},{"_id":"themes/kratos-rebirth/source/maps/night-blue.min.css.map","hash":"f062853e1ef9a7b20f0e8ff2094fe7706b4b992b","modified":1671101784099},{"_id":"themes/kratos-rebirth/source/maps/prismjs.min.css.map","hash":"3c7bf5a131ccfa521c4d277fdbcdeb88258ccc87","modified":1662432464564},{"_id":"themes/kratos-rebirth/source/maps/snow.min.js.map","hash":"55349ccb81c5fad1634191cb658db1291f3fa1b6","modified":1678705993493},{"_id":"themes/kratos-rebirth/src/js/candy.js","hash":"95b61e65d186b3a8571198557b150420c337be4b","modified":1662432464690},{"_id":"themes/kratos-rebirth/src/js/local-search.js","hash":"fe79206f66b0f1bd5279e7356127bdbe31f3540a","modified":1662432464690},{"_id":"themes/kratos-rebirth/src/js/kratosr.js","hash":"3599d62423959cd49bad3b054ed8c47cf780ef4a","modified":1678705993717},{"_id":"themes/kratos-rebirth/src/js/pjax.js","hash":"c7697968054b8b91492ac345e7013f4dca342d30","modified":1662432464690},{"_id":"themes/kratos-rebirth/src/js/snow.js","hash":"293a7690f41f83ac367ec019c728efdb1330e598","modified":1678705993717},{"_id":"themes/kratos-rebirth/src/scss/prismjs.scss","hash":"c39d3b96730528cacc816f9e7860b19dea6ab902","modified":1662432464691},{"_id":"themes/kratos-rebirth/src/scss/kr-color-dark.scss","hash":"6b130f08449f044aef0838fa3e955431b3c5bc05","modified":1671101784101},{"_id":"themes/kratos-rebirth/src/scss/kratosr.scss","hash":"496c0d3bcbdd9a5eb5942b91aeb6ce940dca7697","modified":1678705993717},{"_id":"themes/kratos-rebirth/source/css/highlight/light.min.css","hash":"0c2ee23e4f7a443f90b65905e72f1fca3a89137d","modified":1671101784095},{"_id":"themes/kratos-rebirth/src/js/kr-dark.js","hash":"ae92359b7c023f78707c8065e337f478fa8f7c9a","modified":1678705993717},{"_id":"themes/kratos-rebirth/source/css/highlight/night-blue.min.css","hash":"5f298f7125dcf08fed56d393a65b027c447a4c67","modified":1671101784095},{"_id":"themes/kratos-rebirth/source/css/highlight/night-bright.min.css","hash":"a2bbbb95cb63124d0f5bc9c351bcf31455b8ecf8","modified":1671101784095},{"_id":"themes/kratos-rebirth/source/css/highlight/night.min.css","hash":"379e2f99b3b92a710a241f5770ca43237a74238e","modified":1671101784096},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/README.md","hash":"3880a58a50ef7514317c4f47b5707d4fd0106c9c","modified":1662432464577},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/History.md","hash":"38f837f30c75bed4b8990b36fdf540fe3c63ccd3","modified":1662432464681},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1662432464577},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/License.md","hash":"bc3e61d337e51c177534c644c20f190148d7905e","modified":1662432464681},{"_id":"themes/kratos-rebirth/source/css/highlight/night-eighties.min.css","hash":"eafd77c47ada4f8120d683a66cf486426b260205","modified":1671101784095},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/package.json","hash":"1f2b1a268fb702727f33f348e043ffd7d0b86ec5","modified":1662432464583},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/Notes.md","hash":"e7b5de6240b6918cbdccc708a06e4b20555966c1","modified":1662432464681},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/Readme.md","hash":"63959b38ef0747eadd6f731b48d7aded7edc227b","modified":1662432464681},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/bower.json","hash":"55980d38b6f24ec91f44579bcd38c667986368c5","modified":1662432464681},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/nprogress.css","hash":"17ca817a091da9dcf5fe0f2f1e1f2eea60a33149","modified":1662432464681},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/nprogress.js","hash":"a7e1146d2021c42e68b599dc8bcc69d44fc31df3","modified":1662432464681},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/package.json","hash":"574122118ffc8d4705e58806a13612553bc41588","modified":1662432464681},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/LICENSE","hash":"7041717dd3a7d35354f94321b666e11977c7610e","modified":1662432464681},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/README.md","hash":"1a8e6fb255a22f8233dff9815ab8790bada84b3d","modified":1662432464681},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/bower.json","hash":"99449e46555b0ba514eca8246f1621048db97aa5","modified":1662432464681},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/index-svg.html","hash":"3c856315a2467efcd00b278c570fbc7897021d98","modified":1662432464681},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/index.html","hash":"7314a123d8a9acbd51321d4f538ba4b36b0673b5","modified":1662432464682},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/index.svg","hash":"15730a03273bba608180e8b182453ae393b3c3e0","modified":1662432464682},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/component.json","hash":"ecbc4792d8583f73050dd4d918fea8073a7ded60","modified":1662432464681},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/package.json","hash":"b77af52b956e89bd76c6bf75cc33f0eca47c0bf4","modified":1662432464682},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/qrcode.js","hash":"8fa3048613aab15c7f7edc3ac74a84e90375126d","modified":1662432464682},{"_id":"themes/kratos-rebirth/src/scss/kr-color/base.scss","hash":"859c8fb6a947965ba79c390443d6e98c010db06b","modified":1678705993717},{"_id":"themes/kratos-rebirth/src/scss/highlight/style.scss","hash":"aca64b080abf33dceb24920bca56cca2dc42949e","modified":1671101784101},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/qrcode.min.js","hash":"2d06c1f823f34c19981c6ae0b0eb0f5861c5e14b","modified":1662432464682},{"_id":"themes/kratos-rebirth/src/scss/kr-color/default.scss","hash":"9b0a0f51058bf4ffedb36439ecb6f56f743c50d2","modified":1662432464691},{"_id":"themes/kratos-rebirth/source/vendors/aplayer@1.10.1/dist/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1662432464572},{"_id":"themes/kratos-rebirth/source/vendors/aplayer@1.10.1/dist/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1662432464572},{"_id":"themes/kratos-rebirth/source/vendors/aplayer@1.10.1/dist/APlayer.min.css.map","hash":"c59d2bc9472922cf6ef9a99e052dbee6cc7e6b36","modified":1662432464572},{"_id":"themes/kratos-rebirth/source/vendors/aplayer@1.10.1/dist/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1662432464573},{"_id":"themes/kratos-rebirth/source/vendors/clipboard@2.0.6/dist/clipboard.min.js","hash":"6371ec0a8e242395c7d4d008d2b98e472c9dcc52","modified":1662432464577},{"_id":"themes/kratos-rebirth/source/vendors/clipboard@2.0.6/dist/clipboard.js","hash":"8d661d3b6e11cb117361a6ff54cf54054b5d8668","modified":1662432464577},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1662432464577},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1662432464577},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1662432464578},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/bordered-pulled.less","hash":"a2c292137b17406183ad0fdbf4880fd648b9a5ca","modified":1662432464582},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/animated.less","hash":"421f2c4e10191f148c13b8a34e5ff3f484d4c393","modified":1662432464582},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/core.less","hash":"1a37352286619b789d151a06eb4b7551e4c1aaa2","modified":1662432464582},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/fixed-width.less","hash":"ec0c24b97184dab86177660f486b8d08cd636c42","modified":1662432464582},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/font-awesome.less","hash":"9ffe7422dc235450a21f019f410ed359ed151f4b","modified":1662432464582},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/larger.less","hash":"e7119e82dc50540dbc3472bba7d74282815a7ecc","modified":1662432464582},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/icons.less","hash":"0285a999eb1adad868366678c2d9365b77186a45","modified":1662432464582},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/list.less","hash":"f53bc20884a1410d950b4a36a330c5181a8b55ab","modified":1662432464582},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/path.less","hash":"1afb4a849059631f76ed2a519d7fb1bd0af14802","modified":1662432464582},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/rotated-flipped.less","hash":"95de5de9009714692430b04f9cd4388be8fba8f3","modified":1662432464582},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/mixins.less","hash":"3c5b36b0069372b525ed8bbbcf6b3d4d2bed4e78","modified":1662432464582},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/screen-reader.less","hash":"71139132f170ebe7712836210f4d2c4905151899","modified":1662432464582},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/stacked.less","hash":"f044077bc8be1a989c245254e81eb084d52d29a7","modified":1662432464583},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/scss/_fixed-width.scss","hash":"224417ca266c657849afb2bbcb6dc455894ff387","modified":1662432464583},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/less/variables.less","hash":"8a5c800747705df16117cc598c1b9f512e873bfe","modified":1662432464583},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/scss/_bordered-pulled.scss","hash":"164b6a0a2b307cd293f4a914ab0fcdf643950374","modified":1662432464583},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/scss/_core.scss","hash":"55a14a34267edc401b82e5ee41d8bd84fbb5da3f","modified":1662432464583},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/scss/_larger.scss","hash":"940e1c5ebc690283bfaee92560cf15fabedbf6a9","modified":1662432464583},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/scss/_icons.scss","hash":"830e0183337d16c07b1c63838f7593a33ee87b15","modified":1662432464583},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/scss/_list.scss","hash":"4b53ee01513df8b9ce76442b2d8f1851613a435c","modified":1662432464583},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/scss/_mixins.scss","hash":"4f3881034a4c11cae8cc915f288477b498a357a2","modified":1662432464583},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/scss/_rotated-flipped.scss","hash":"ca08a0af3da63c2f2a7d3c27a8747637744cc785","modified":1662432464583},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/scss/_path.scss","hash":"080158aeb1bf6df59ec98b2bbed44da61d9c9ca3","modified":1662432464583},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/scss/_animated.scss","hash":"8daf189b2f8a404495b8424b6fd1ba630dd1c2dc","modified":1662432464583},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/scss/_screen-reader.scss","hash":"2d8563c488f68e75a28d540dd89301ee4ee08c97","modified":1662432464584},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/scss/_stacked.scss","hash":"cf6752ee609af36eb293a7197c88d31ecacbbc74","modified":1662432464584},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/scss/_variables.scss","hash":"0d6d70535104b42e60d7f44ae6ccf9de023a7b8b","modified":1662432464584},{"_id":"themes/kratos-rebirth/source/vendors/gitalk@1.7.2/dist/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1662432464592},{"_id":"themes/kratos-rebirth/source/vendors/gitalk@1.7.2/dist/gitalk.css.map","hash":"9dda04c29af8da6ac13a507beefea6fce4d7032e","modified":1662432464592},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/scss/font-awesome.scss","hash":"dd83648ea5bc832f87c3c1bf956c54dec065a9bd","modified":1662432464584},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/constants.js","hash":"08f6c79bf52239cbdd457bc0a94df395f578ee07","modified":1662432464609},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/gitment.js","hash":"df37d9fe8c1a0a1fb2883e5bcb93f880bb2bbf2e","modified":1662432464611},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/gitment.js.map","hash":"2cb4d20d09b110268e0ea8c199f72501aa2d66e8","modified":1662432464611},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/constants.js.map","hash":"6b7b473ef4bba09ea572b3baaac73c122372439e","modified":1662432464610},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/icons.js","hash":"d303f91799600aa8c7f5f5bb18c652fafac4359d","modified":1662432464611},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/icons.js.map","hash":"5604e4382d787a9a1976359d92bb9827f11c2c2b","modified":1662432464611},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/utils.js","hash":"df76ada59b1cf94a7ea1d44c56a6624d248b4228","modified":1662432464611},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/utils.js.map","hash":"6f99a8c2269c938d4422f3a244a8086f89800890","modified":1662432464611},{"_id":"themes/kratos-rebirth/source/vendors/disqusjs@1.3.0/dist/disqusjs.css","hash":"0d8ae5946142b17f9a75683c7649cf73d6fdbe17","modified":1662432464577},{"_id":"themes/kratos-rebirth/source/vendors/disqusjs@1.3.0/dist/disqus.js","hash":"b79249dfb619836cfd1251cb3c3d5c603bc55e61","modified":1662432464577},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.min.js.LICENSE.txt","hash":"38165332beeccd3551309f85addb2354f2d18676","modified":1662432464678},{"_id":"themes/kratos-rebirth/source/vendors/meting@2.0.1/dist/Meting.min.js","hash":"f2b3d20b8bd64ccd031c64628f2b1323078ae324","modified":1662432464680},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/layui.js","hash":"be7bcdcb4eb932f3e700e63584661f19b4139739","modified":1662432464627},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.esm.min.mjs.LICENSE.txt","hash":"38165332beeccd3551309f85addb2354f2d18676","modified":1662432464644},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/test/component.html","hash":"5965cc7f9bb812ada1ffcd6abec39124c20a4ef8","modified":1662432464681},{"_id":"themes/kratos-rebirth/source/vendors/nprogress@0.2.0/test/test.js","hash":"5c795debb89ec7d35ba1ec1e8ccbab0a7a353d78","modified":1662432464681},{"_id":"themes/kratos-rebirth/source/vendors/twikoo@1.5.11/dist/twikoo.min.js.LICENSE.txt","hash":"c00fe261d987618ec25243062c089a6982d4480c","modified":1662432464685},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/detect.min.js","hash":"596d6dcbe379f78a2ec655188d7bfa7182848e03","modified":1662432464689},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/escape.min.js","hash":"4f91bb0e3a71ce6421b303c6c32bb3fb3e751192","modified":1662432464690},{"_id":"themes/kratos-rebirth/src/scss/highlight/theme/light.scss","hash":"d7262b8d0d66734102e4276811dcc10b2c0ae02a","modified":1662432464690},{"_id":"themes/kratos-rebirth/src/scss/highlight/theme/night-blue.scss","hash":"e174fc14362d931c12032d41eecc39e8ab7eb452","modified":1662432464690},{"_id":"themes/kratos-rebirth/src/scss/highlight/theme/night-eighties.scss","hash":"891f792df1e7a82cd60a2436cc65e7030e9492e8","modified":1662432464691},{"_id":"themes/kratos-rebirth/source/vendors/twikoo@1.5.11/dist/twikoo.all.min.js.LICENSE.txt","hash":"c00fe261d987618ec25243062c089a6982d4480c","modified":1662432464684},{"_id":"themes/kratos-rebirth/src/scss/highlight/theme/night.scss","hash":"dbbd50f45908214efc2bfb820b92756e07838a50","modified":1662432464691},{"_id":"themes/kratos-rebirth/source/vendors/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.css","hash":"e43435fb9eaa918f5b8e35c9e110124b8bd13751","modified":1662432464564},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@1.6.0/dist/Waline.min.d.ts","hash":"e8ff14efdfb197dec848f18bbdc337c18cf00956","modified":1662432464565},{"_id":"themes/kratos-rebirth/source/vendors/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1662432464565},{"_id":"themes/kratos-rebirth/src/scss/highlight/theme/night-bright.scss","hash":"22b764e26356b43dc5e04dac923f62349f7ac0b5","modified":1662432464691},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@1.6.0/dist/Waline.noStyle.d.ts","hash":"e8ff14efdfb197dec848f18bbdc337c18cf00956","modified":1662432464568},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/theme/default.js","hash":"449e59ac4b6b9c66384ee123e1523b5392d684a5","modified":1662432464611},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/theme/default.js.map","hash":"0b7317800be0ea17fa142c7bb26f7e8158b54447","modified":1662432464611},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/css/bootstrap-theme.css","hash":"a22e254bf086bf442a09344afe0e6cf188f5a1d5","modified":1662432464573},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/css/bootstrap-theme.css.map","hash":"ccb7ff3435bb5cff1fe9643fc0ac8cdde2dcd177","modified":1662432464574},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@1.6.0/dist/index.html","hash":"c720f2027fb93454bbc7eb14ae4eb274a47e8642","modified":1662432464572},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/css/bootstrap-theme.min.css","hash":"fc6b4268fbd57ad95d2b41a1d4d6866f222fbdb2","modified":1662432464574},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1662432464575},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1662432464576},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/js/npm.js","hash":"e2b7590d6ec1fdac66b01fdf66ae0879f53b1262","modified":1662432464576},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1662432464576},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/layui.mobile.css","hash":"f15da6c149002dd57ea25b8346534c8161c86e3c","modified":1662432464615},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/js/bootstrap.min.js","hash":"27947c0c0fa837da9bdfdfc36f649c25f54bd1c0","modified":1662432464576},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1662432464576},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/font/iconfont.eot","hash":"de1bec30d0ef87af6ab83ab6a269c3c59bc83124","modified":1662432464618},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/font/iconfont.woff","hash":"6133b92b4e5c3866675b2656ceae14606fa01eb0","modified":1662432464619},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/font/iconfont.woff2","hash":"c9b04ae5b10f88f8bc7c48840164f468ee7b10b0","modified":1662432464619},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/0.gif","hash":"87db440c06299666a8a1f407a6008c5bf6d70817","modified":1662432464619},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/10.gif","hash":"04fe5b26b7e2c980d12ad7157a4ce908c2a74f14","modified":1662432464619},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/11.gif","hash":"170c2e16dd383e26d9d68406eb217dbf191ea14e","modified":1662432464619},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/1.gif","hash":"e6da9a45ecb8c766a8f7c2362ccf2976d20d17a9","modified":1662432464619},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/14.gif","hash":"1af45520e97328498b1a281b6955df5029fc9679","modified":1662432464620},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/13.gif","hash":"0afcb6c47cb53fa4a8467d7d7bf00ec464df2f8e","modified":1662432464620},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/12.gif","hash":"f5da3f33448e67537e3df8ff63b010247b06841c","modified":1662432464619},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/16.gif","hash":"54db2506b93b76c58174177245dcc6ef3fd0591f","modified":1662432464620},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/font/iconfont.ttf","hash":"5d2b8777c623bb6e96577cee675489d0299ffa1f","modified":1662432464619},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/17.gif","hash":"0b88c01b477d4ca98eb99a665c0ab8738551aeec","modified":1662432464620},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/code.css","hash":"d7adeb3ada7c3c069aa6d098f953e0a87cfb49ef","modified":1662432464615},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/18.gif","hash":"eeee84a351d6e84d291b0c27e5d70014a3a2748d","modified":1662432464620},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/19.gif","hash":"620b2afa4c36cbfdd09c57807d8a662a5267ea51","modified":1662432464620},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/2.gif","hash":"43b3ca892341431f697e1326aa693c1f252922be","modified":1662432464620},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/20.gif","hash":"7f1cefe1db5c5ee6a9b0eea4d9618cba4b1ac790","modified":1662432464620},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/21.gif","hash":"86d3d5273ffd13841d246698eb648d85e178c4dc","modified":1662432464620},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/15.gif","hash":"a0f216d0aaaeec369109e4b581eacd4e83e5ccb6","modified":1662432464620},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/22.gif","hash":"dcad257d86505e921618f7d85b60bf6ac2ce319d","modified":1662432464620},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/24.gif","hash":"02a263028625496740eea9a50141a4ad98d826a1","modified":1662432464620},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/26.gif","hash":"153c5f602881b04bed23d5c7d21a977563075ee2","modified":1662432464620},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/23.gif","hash":"43295056d287f3da526dfb77915edc3de7551e3e","modified":1662432464620},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/27.gif","hash":"814bad015177103646b0216367fa9707361998d3","modified":1662432464621},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/3.gif","hash":"339482962bc4995e16e99ac9de9fc067636fd79e","modified":1662432464621},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/30.gif","hash":"886222551781040325cfd3307fbfba2a1d434a9e","modified":1662432464621},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/28.gif","hash":"5830d72546907c962b6c9003fa923798a67b0406","modified":1662432464621},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/32.gif","hash":"9af01aea73b614e5820a00bcc890840493f9dd70","modified":1662432464621},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/33.gif","hash":"5f02bc5ec8d6220a872f1ca1fa2abaa92d46c361","modified":1662432464621},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/25.gif","hash":"05eeb7a9c42a2cd3876417944143078ce514a8b9","modified":1662432464620},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/31.gif","hash":"29043ca9d16adf6574d4d7efde1af7a615689931","modified":1662432464621},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/34.gif","hash":"e0e500feecd8274490a3bdbf64d2555c16a86261","modified":1662432464621},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/29.gif","hash":"ef1d583626e7447f546995a5b296f34eb3364902","modified":1662432464621},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/35.gif","hash":"141ae180796db9800770dc9dbb8c9beda6f170e8","modified":1662432464621},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/36.gif","hash":"55abcc242354c9c1c73538db5d8c7b984de5ca52","modified":1662432464621},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/38.gif","hash":"336cb3cbe0fd6cac96cd7cd5ca847c6a01f95b50","modified":1662432464621},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/39.gif","hash":"6380eb13d87fc4242d2c6eec57f482ac8ca1ad1f","modified":1662432464621},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/40.gif","hash":"c1b0fef186697125b66c1b4617fa3f9abc4d92eb","modified":1662432464621},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/41.gif","hash":"c37fb5c43ea499a005d88075a392ed2e09c331df","modified":1662432464622},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/42.gif","hash":"86f11fca6a9c42d3678ec8af35c077a9790ce777","modified":1662432464622},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/4.gif","hash":"878c3da67e6aec79c9b8dba6f34368586f4bd097","modified":1662432464621},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/37.gif","hash":"850b9425421c3072a4898154d41776c02a4d64f7","modified":1662432464621},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/43.gif","hash":"6a16279bea1179b3fd3a45736ecffd983a42272d","modified":1662432464622},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/44.gif","hash":"32a9fa973626a3a06646095aeeecb919923f7d16","modified":1662432464622},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/45.gif","hash":"864dfc9b99f5641f6d5a0081dc14d84872c1b3c6","modified":1662432464622},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/48.gif","hash":"8a8483cd4e3b4b6ac0567eab41c5655ace4b3a81","modified":1662432464622},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/49.gif","hash":"dbf616c5537074ace036340bdddf7948c138c3d7","modified":1662432464622},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/50.gif","hash":"94a521d4f9a69c4eb59f5bbe673c8803246bdf5e","modified":1662432464622},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/5.gif","hash":"cf43cfcf14bbc7f8e430b74a97eb3b260f16b08c","modified":1662432464622},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/47.gif","hash":"653e07693ee719cafbce662bb5e410646fe4695a","modified":1662432464622},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/51.gif","hash":"1ef1419f1ba2fd28e7de676ae5c388074646be53","modified":1662432464622},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/46.gif","hash":"b6c74edb2dc383e0f3e28a0859fa87683fea18e2","modified":1662432464622},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/52.gif","hash":"b516f6bd28cee1fe34144d897b702989782be4ec","modified":1662432464622},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/53.gif","hash":"a03f9bbb0202d24d3313286f60ce08b214c013d2","modified":1662432464622},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/55.gif","hash":"c446b5eca2cce1faa7f2147a8b646cc774011de1","modified":1662432464622},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/54.gif","hash":"75c738c517217f6b09d51ca3036cf54a01891c4d","modified":1662432464622},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/57.gif","hash":"b797ac8509a8f8bc328b10153e0026449a6139ec","modified":1662432464623},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/56.gif","hash":"a71c1ef36706c4ddf7959c68d6c40920db3efe67","modified":1662432464622},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/6.gif","hash":"697d8f2262c535cd61808a564b21fc10ea93f0db","modified":1662432464623},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/59.gif","hash":"c50da42e6f2ec33112261f46c30e5ea5b4a0f889","modified":1662432464623},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/60.gif","hash":"bdb24b7ec836fbf6c60c4d7ad97d73f041a154a8","modified":1662432464623},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/64.gif","hash":"38a537e9ac930736e162be81c13c5f708ff948bd","modified":1662432464623},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/62.gif","hash":"a839a263600c034bb11411a7f762dfa917155d10","modified":1662432464623},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/65.gif","hash":"93cab4423539955a25d17c83da6aee277a6402aa","modified":1662432464623},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/58.gif","hash":"5c70cba8adb0b42c0da4d922498c265e5d8034d7","modified":1662432464623},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/61.gif","hash":"a5db56b975970ebe7048a5c824604d64559392b9","modified":1662432464623},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/63.gif","hash":"28e9ec7a3882fec8c63dd731b06a9bbcc179aff7","modified":1662432464623},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/66.gif","hash":"6efe452b1f7a697db1c654130a9c2b872f528654","modified":1662432464623},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/68.gif","hash":"e779199003a7415a29d50ecf0bbfed04e031f1ab","modified":1662432464623},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/7.gif","hash":"ad4e2ea1864a85f5729a1347c2f8c49fdb3b2def","modified":1662432464623},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/71.gif","hash":"c6323d6d6d262011faed18e758e9e83e7b6812b8","modified":1662432464624},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/69.gif","hash":"76ac840c5bc5ad44302daa921e7217149576b89e","modified":1662432464623},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/8.gif","hash":"43baffc48b0fbe649ed920bad713e2ccab9b7344","modified":1662432464624},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/9.gif","hash":"8df9fc1055efeffdb72d499c064c05445adaa9be","modified":1662432464624},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/70.gif","hash":"7c2641bef26579d9f90bdc0b740357527dd6e484","modified":1662432464623},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/carousel.js","hash":"ff770a94f4e7edd26f4449909e3d72644de83149","modified":1662432464624},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/code.js","hash":"31972b8e26aac0f3b1233ad76c45187a39f4d977","modified":1662432464624},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/element.js","hash":"1900e7f8bca28958e0a495731c7b3957ea0157c6","modified":1662432464624},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/images/face/67.gif","hash":"50e2ed8f7773e60ae7d40b612db98554b8277b6e","modified":1662432464623},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/colorpicker.js","hash":"0234f7a6eba2238583fe4644c0a247dacd67f73b","modified":1662432464624},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/flow.js","hash":"b6b4ffe415022a6788767906b837e2894057371b","modified":1662432464624},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/layedit.js","hash":"ce8c049188c64ec3cd3d302f8e72d0094d85c462","modified":1662432464625},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/layer.js","hash":"448f76fa3ccfb66a5d86b02cf785f67adf0d8033","modified":1662432464626},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/laydate.js","hash":"53e871827a2c0bc04ec239e9461a5eb18a309075","modified":1662432464625},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/form.js","hash":"6ed3220f5b8cbee7f287ca851dd5d294790281ee","modified":1662432464624},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/layim.js","hash":"c79d7e577901f2ceab86f01f00cc4c26ff1b038e","modified":1662432464626},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/rate.js","hash":"c3a4b2dad9e829afb8cfae69203eef8ede02191b","modified":1662432464626},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/slider.js","hash":"c4e37a45ff9ae08f90492f894d86e7bec7542b26","modified":1662432464626},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/laytpl.js","hash":"b79191723a99f3e52b56e0afbd183d7338b9cfd4","modified":1662432464626},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/laypage.js","hash":"fec79457cffad05f261ab518e9d69bbebab548f0","modified":1662432464626},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/transfer.js","hash":"e85e366ff7ca8a49d195e149ec971cb6893b8409","modified":1662432464626},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/mobile.js","hash":"0f82e8ce6b6deb51afdc307f488fb24c6dd02dbc","modified":1662432464626},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/upload.js","hash":"8eef1ed175c49a7f09f6ce472a7d12138ed8f8ed","modified":1662432464627},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/tree.js","hash":"5a0c3d9b31a49d8e30e13ef187894d9d07bec69e","modified":1662432464626},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/util.js","hash":"e5e39048df40763ddfff8ec271a6f8070fcb4f4e","modified":1662432464627},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/table.js","hash":"3a18563a832e11ae642bf6c2a8634a18768f2dbb","modified":1662432464626},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/plugins/emojis/light.json","hash":"3ac2cd3cc07efff7c30ece9857b0527c5fc534d3","modified":1662432464690},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/plugins/emojis/index.js","hash":"452e66f0b900282eab6f98743592793361ccbc65","modified":1662432464690},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/laydate/default/laydate.css","hash":"bc0f2f7396ca62c86bc07c2db1b73ca83de3cbdb","modified":1662432464616},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layer/default/icon-ext.png","hash":"ddf2a30ad34bac4e9a1250f29c46ac0823d62a12","modified":1662432464616},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layer/default/icon.png","hash":"fe47ec617507e9ce5f6ce7ac9b179a3c9231882b","modified":1662432464616},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layer/default/layer.css","hash":"ed6fefb1501b3bcd720919f9ce55bb322b5d7ec5","modified":1662432464616},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layer/default/loading-0.gif","hash":"ba81388bbac5bc223f94489b97a95a13f3c78e47","modified":1662432464616},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layer/default/loading-1.gif","hash":"49e54acbf5674212195e581848ec0d490282448f","modified":1662432464616},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layer/default/loading-2.gif","hash":"c641615e851254111e268da42d72ae684b3ce967","modified":1662432464616},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/layim.css","hash":"a669bd1141c1df237631738d41f9d0032f4ba0a3","modified":1662432464616},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/html/find.html","hash":"ed8e6a3564bb52fc7adc8f19c7be34f25fe97222","modified":1662432464616},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/html/chatlog.html","hash":"64591e08bb5af1d22e976ba3b3175075c7e6cd12","modified":1662432464616},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/html/getmsg.json","hash":"3a83d94b0d8bdb96459e36ea042a72768ea3b348","modified":1662432464616},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/mobile/layim.css","hash":"0af51b5e2280a03cefcde3e4cf6662d274cc64c6","modified":1662432464617},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/2.jpg","hash":"ee9e802e6a46b5b698a4d0c36249c0085b192c68","modified":1662432464617},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/1.jpg","hash":"f0ba9086fa730c9c80b89f25ff440b740a4b06df","modified":1662432464617},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/3.jpg","hash":"56cd08ca560acd37d377626b1b67cc4947bfe314","modified":1662432464617},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/5.jpg","hash":"a7c37d5401127afeb1ddd930c9ad9f0e3fab3d31","modified":1662432464617},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/4.jpg","hash":"e018753c3fbd420f8987e53f8a9fc62428ecc18d","modified":1662432464617},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/html/msgbox.html","hash":"521979a7d5b54e6c00dedaa897ae547065da9b2c","modified":1662432464616},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/voice/default.mp3","hash":"18ac4168a61de5cd4a35f814e97365945de94ab0","modified":1662432464617},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/logo.jpg","hash":"3014e3081d5d4164143936fcf61e7080e81faf38","modified":1662432464617},{"_id":"themes/kratos-rebirth/source/images/thumb/bg_1.webp","hash":"b38d139d38ec675ba15e26318d1976a38cf4c5a0","modified":1662432464562},{"_id":"themes/kratos-rebirth/source/vendors/qrcode_js@1.0.0/jquery.min.js","hash":"a8c8a5caf9765b4ccb90d708045518e219a9af5d","modified":1662432464682},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1662432464582},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1662432464581},{"_id":"themes/kratos-rebirth/source/vendors/jquery@3.6.0/dist/jquery.slim.min.js","hash":"d1c6704e94efe2d465fc161b6381e127d35acd81","modified":1662432464614},{"_id":"themes/kratos-rebirth/source/vendors/jquery@3.6.0/dist/jquery.slim.min.map","hash":"17a9498757f0b358580ffce586bbc97ae897e8d8","modified":1662432464615},{"_id":"themes/kratos-rebirth/source/vendors/jquery@3.6.0/dist/jquery.min.js","hash":"b82d238d4e31fdf618bae8ac11a6c812c03dd0d4","modified":1662432464613},{"_id":"themes/kratos-rebirth/source/vendors/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1662432464565},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/css/bootstrap.min.css","hash":"ed29315e0ffb3f14382431f2724235bf67f44eb3","modified":1662432464575},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/js/bootstrap.js","hash":"542cfd539f0cad650342c8cab8baf1cdbcd5fea6","modified":1662432464576},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/css/layui.css","hash":"e15327d5c8f4c82909edc97977b277207e01364d","modified":1662432464615},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1662432464576},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/lay/modules/jquery.js","hash":"36456de559419079e1096890c7e9a97ae1bbf1be","modified":1662432464625},{"_id":"themes/kratos-rebirth/source/maps/kratosr.min.css.map","hash":"64968861cda99e0778a3d41d4390feee3c337f3e","modified":1678705993493},{"_id":"themes/kratos-rebirth/source/vendors/aplayer@1.10.1/dist/APlayer.min.js.map","hash":"31a19da0f0cb6b00ec212eafa847f31af86788df","modified":1662432464573},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1662432464578},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1662432464579},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1662432464581},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/gitment.browser.js","hash":"376446d9c5930576016f97dd63e5e6616c94d8d4","modified":1662432464610},{"_id":"themes/kratos-rebirth/source/vendors/jquery@3.6.0/dist/jquery.min.map","hash":"c98b6a5cb27af645c8bfb525fcad3569f3917d5b","modified":1662432464613},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/Valine.Pure.min.js","hash":"227fb19caf17f4330ac24cb952af466eeaae5c43","modified":1662432464685},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/Valine.min.js","hash":"d081a412c63411a75a3a880ddece65335d1c3ee8","modified":1662432464687},{"_id":"themes/kratos-rebirth/source/vendors/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.js","hash":"27f034e5db8c32e268e2959b9a7c1258d36e4510","modified":1662432464565},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@1.6.0/dist/Waline.noStyle.js","hash":"888cb555c5e9749cfe5a5a6cad2a8f56167b9dc4","modified":1662432464569},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@1.6.0/dist/Waline.min.js","hash":"d9494e4919cbc017d7b0d70bb70dbcd97c35fcb1","modified":1662432464566},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/css/bootstrap.css","hash":"f2183455571b19311a235bd5aa204e694ade8e94","modified":1662432464575},{"_id":"themes/kratos-rebirth/source/vendors/jquery@3.6.0/dist/jquery.slim.js","hash":"77ec5d7bdb33634ff7d76837e36f0a7240c21e86","modified":1662432464614},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/Valine.min.umd.js","hash":"90de88757741f89ad68c8d3765174437454e2303","modified":1662432464688},{"_id":"themes/kratos-rebirth/source/vendors/gitment@0.0.3/dist/gitment.browser.js.map","hash":"72dc603fb7be8b623d1a402419b42c36723367bb","modified":1662432464611},{"_id":"themes/kratos-rebirth/source/vendors/jquery@3.6.0/dist/jquery.js","hash":"af32f706407ab08f800c5e697cce92466e735847","modified":1662432464612},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/layui.all.js","hash":"4fbff21286558e3cb817072d76ae326db4378c6e","modified":1662432464627},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/Valine.Pure.min.js.map","hash":"40e15912aae8beff90cbb8ae235cd6fcd36f87dc","modified":1662432464686},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/Valine.min.umd.js.map","hash":"6fe9ac91ca5074bcbc696f887802e8304e31aaea","modified":1662432464689},{"_id":"themes/kratos-rebirth/source/vendors/layui-src@2.5.5/dist/font/iconfont.svg","hash":"d484cee6f2461c9194b28878a1d1a677ffdbb78c","modified":1662432464619},{"_id":"themes/kratos-rebirth/source/vendors/twikoo@1.5.11/dist/twikoo.min.js","hash":"e547de978c573d0e7beda7ad74829ce6fef6b058","modified":1662432464685},{"_id":"themes/kratos-rebirth/source/vendors/valine@1.4.18/dist/Valine.min.js.map","hash":"fb6f3071e92d08b0c66808ff9cfd190a0341d93d","modified":1662432464688},{"_id":"themes/kratos-rebirth/source/vendors/bootstrap@3.3.4/dist/css/bootstrap.css.map","hash":"2e1d08a9694cd5a694eabca746cfad95fb99653e","modified":1662432464575},{"_id":"themes/kratos-rebirth/source/vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1662432464580},{"_id":"themes/kratos-rebirth/source/vendors/twikoo@1.5.11/dist/twikoo.all.min.js","hash":"31c6669a90a33ee5af66ceaf47996ad8fd8b962e","modified":1662432464684},{"_id":"themes/kratos-rebirth/source/vendors/gitalk@1.7.2/dist/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1662432464607},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@1.6.0/dist/Waline.noStyle.js.map","hash":"6a31b3aabb3bb6e0e2b7640feec5500617d01950","modified":1662432464572},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@1.6.0/dist/Waline.min.js.map","hash":"42ce7c8e816ffa115df320a5eb75975291b86731","modified":1662432464568},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.esm.min.mjs","hash":"c01a600693e204abd02d0bf056a98a49e8a78d6e","modified":1662432464644},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.min.js","hash":"6bee48c26c32b90f50519f125890fcbb04779da6","modified":1662432464678},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.core.js","hash":"7952663a721317158468875349956182465b0701","modified":1662432464630},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.core.js.map","hash":"1d19d75bea55a0c0062661bb0fe5ad4135f68d8a","modified":1662432464641},{"_id":"themes/kratos-rebirth/source/vendors/gitalk@1.7.2/dist/gitalk-component.js","hash":"fe4c44fa48522e9b2675f3a652d83d8aaec11ad8","modified":1662432464587},{"_id":"themes/kratos-rebirth/source/vendors/gitalk@1.7.2/dist/gitalk.js","hash":"540a80bafeba53826127d556487541332ecd6ed1","modified":1662432464596},{"_id":"themes/kratos-rebirth/source/vendors/gitalk@1.7.2/dist/gitalk-component.js.map","hash":"6f118aa575a5da5449d0c171f1c85fa5e43f80ff","modified":1662432464592},{"_id":"themes/kratos-rebirth/source/vendors/gitalk@1.7.2/dist/gitalk.js.map","hash":"b5d129e59c5a1ca46395fbf7466432983178ebba","modified":1662432464605},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.min.js.map","hash":"bd1138557833d1ec29ce678d2f994e053f180423","modified":1662432464680},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.esm.min.mjs.map","hash":"0ad921fcf8f5f79cf5fdf5deb5b4ffc21e501ff0","modified":1662432464654},{"_id":"themes/kratos-rebirth/source/vendors/gitalk@1.7.2/dist/gitalk.min.js.map","hash":"6a9f6d47092f2557b346c0eabbd5907a1b12a9e7","modified":1662432464609},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.js.map","hash":"199ed9c41ad0bec69a69514beb6f39f7b3a78ae5","modified":1662432464675},{"_id":"themes/kratos-rebirth/source/vendors/mermaid@9.1.1/dist/mermaid.js","hash":"e1f5d58724700b9cd810bb4e295ac93b6724578d","modified":1662432464664},{"_id":"public/config/main.json","hash":"b35650f9bc6c6d371c471ecf4862b18262607ad2","modified":1678706016006},{"_id":"public/search.json","hash":"6f1194d9e78c6725fd83a12d64d390efc390dff5","modified":1678706016006},{"_id":"public/tags/index.html","hash":"6b90c24bdd88e89ce47198965abc6ee120c9621e","modified":1678706016006},{"_id":"public/categories/index.html","hash":"15615421be3fa2baba14208040687ac0a87e4732","modified":1678706016006},{"_id":"public/404.html","hash":"2edcd6708e4b340517d7893e1eef0a7fb8fea5e2","modified":1678706016006},{"_id":"public/2021/12/29/spock-spring2-study-note1/index.html","hash":"a2849f8e811965341e923d1dcaea2e24223520ae","modified":1678706016006},{"_id":"public/2019/12/02/startuml3.1.1-crack/index.html","hash":"c8f7783e60adc893ad36956012e78a588f1feacc","modified":1678706016006},{"_id":"public/2019/11/05/springboot-backend-receive-localdatetime/index.html","hash":"0b6651ae7e46f524feef93e71577ed9b37b5bf11","modified":1678706016006},{"_id":"public/2019/10/31/blog-create/index.html","hash":"948fd9c5937ecf9234f2f17e0b42c9eea09df1e3","modified":1678706016006},{"_id":"public/archives/index.html","hash":"b631dc26a94371715332eef54bf017cb86d132d5","modified":1678706016006},{"_id":"public/archives/2019/index.html","hash":"f3d9896087ab2d424dece940fcbdccdc6325c882","modified":1678706016006},{"_id":"public/archives/2019/10/index.html","hash":"cb2d92ab284e80e560f49093190741f8a44992a9","modified":1678706016006},{"_id":"public/archives/2019/11/index.html","hash":"c103a3bcd0c9cafb38be8572428078d855074af9","modified":1678706016006},{"_id":"public/archives/2019/12/index.html","hash":"136f83bd851ce5c71e7e3821034e92d5e2221a28","modified":1678706016006},{"_id":"public/archives/2021/index.html","hash":"e6b25e2ef27da5586ca02a2599b9abe92dd7854e","modified":1678706016006},{"_id":"public/archives/2021/12/index.html","hash":"af468d032630599e4f03f26547613ce8a5a44f6c","modified":1678706016006},{"_id":"public/index.html","hash":"bb8d5e36ec565a08a183ae028213b7054f8fd978","modified":1678706016006},{"_id":"public/categories/笔记/index.html","hash":"bef318917f1d8a742a6a566b79b3341291f7c4ef","modified":1678706016006},{"_id":"public/categories/摸鱼日常/index.html","hash":"6bcf1ab73071745521732ad6e3e84309a71fc75b","modified":1678706016006},{"_id":"public/tags/SpringBoot/index.html","hash":"e3348b775fec52a40bcd626b9f0a260c394aa70d","modified":1678706016006},{"_id":"public/tags/Java/index.html","hash":"d9b84d2f44257a6756600d71c1d84b06fdf50885","modified":1678706016006},{"_id":"public/tags/后端/index.html","hash":"a513c93f52ac1ce057643b2115fadff0e1e906f9","modified":1678706016006},{"_id":"public/tags/springboot/index.html","hash":"b36b04a424d514546e465c3f359121f18121250f","modified":1678706016006},{"_id":"public/tags/spock/index.html","hash":"80b22f83bae54852777c216223ebbc19b005d86f","modified":1678706016006},{"_id":"public/tags/测试/index.html","hash":"a40aed880bd1671eecac4d46398630d76de564e1","modified":1678706016006},{"_id":"public/tags/瞎说/index.html","hash":"03e811ca9933fe0f95ed674fc818315ac5f87f29","modified":1678706016006},{"_id":"public/tags/StartUML/index.html","hash":"f67263c2deea3c4e47684a27ff3e224e908f2000","modified":1678706016006},{"_id":"public/tags/破解/index.html","hash":"945981331a01d68d0dd7932c4488cdb9b0c8767b","modified":1678706016006},{"_id":"public/friends/index.html","hash":"0242b8539c7e02231ae7ef2b162db0f048e859b0","modified":1678706016006},{"_id":"public/search/index.html","hash":"fe5084af768612703ed8d79a4be202a71ac14b59","modified":1678706016006},{"_id":"public/CNAME","hash":"f4ece8c85250341682f5b25d921c49c9829c575b","modified":1678706016006},{"_id":"public/robots.txt","hash":"635946c8503c75058d9ebdcf10c1100106fe34e5","modified":1678706016006},{"_id":"public/images/alipay.webp","hash":"01fa6151d2122f0470ee6f38ac8e4ced6c81912e","modified":1678706016006},{"_id":"public/images/404.webp","hash":"d2e2bd5cc2627a2b04d5e449a67949a2605ae13e","modified":1678706016006},{"_id":"public/images/avatar.webp","hash":"3ed6e4e1e08e9c2700aa149d1f9e068fb02947cd","modified":1678706016006},{"_id":"public/images/banner.webp","hash":"7c5093243bfd581a633ba8a905e2d379cfa78c00","modified":1678706016006},{"_id":"public/images/banner_dark.webp","hash":"5589986444825e2b75c369d419ff736d3a396bac","modified":1678706016006},{"_id":"public/images/bg.webp","hash":"b38d139d38ec675ba15e26318d1976a38cf4c5a0","modified":1678706016006},{"_id":"public/images/bg_dark.webp","hash":"b38d139d38ec675ba15e26318d1976a38cf4c5a0","modified":1678706016006},{"_id":"public/images/failure.ico","hash":"5eec5c163400d8ece74286da49130da1ead3f6f6","modified":1678706016006},{"_id":"public/images/comment.webp","hash":"7756b5a69f2a85a2d1c4251e3055bfa0218aa385","modified":1678706016006},{"_id":"public/images/comment_dark.webp","hash":"7756b5a69f2a85a2d1c4251e3055bfa0218aa385","modified":1678706016006},{"_id":"public/images/wechat.webp","hash":"06f3997bf554768c04cb588198c7b3d68c21b8e9","modified":1678706016006},{"_id":"public/images/psr.webp","hash":"bf457bf84bca767bac1bd2b960d91c53ba3fbdee","modified":1678706016006},{"_id":"public/images/about.webp","hash":"ca0fb739ab4426e7895742c1d8d52df1e14468e8","modified":1678706016006},{"_id":"public/maps/kr-color-dark.min.css.map","hash":"cabc8e5ec7ef358548bcdb1d09baf573f3d9d541","modified":1678706016006},{"_id":"public/maps/kratosr.min.js.map","hash":"a370cf5ce606a2ca4bd6546e64c24b274e500412","modified":1678706016006},{"_id":"public/maps/light.min.css.map","hash":"e3710e0da980ad6194de0f44beba70da88c04777","modified":1678706016006},{"_id":"public/maps/candy.min.js.map","hash":"808e7e131fbd94534e4b66f08c7a05256320d278","modified":1678706016006},{"_id":"public/maps/kr-dark.min.js.map","hash":"ee5aa9d42fd014aafaf746bf7dcb47066e013d08","modified":1678706016006},{"_id":"public/maps/local-search.min.js.map","hash":"532c2b78ea7a3b8107789b048e1c8a0ec93f5555","modified":1678706016006},{"_id":"public/maps/night-eighties.min.css.map","hash":"2b1e04a4cc361c634760da29efb88b91f8629840","modified":1678706016006},{"_id":"public/maps/night-blue.min.css.map","hash":"f062853e1ef9a7b20f0e8ff2094fe7706b4b992b","modified":1678706016006},{"_id":"public/maps/night-bright.min.css.map","hash":"237954262d68dde9f7ab3d2a8b2eba58dd74903d","modified":1678706016006},{"_id":"public/maps/prismjs.min.css.map","hash":"3c7bf5a131ccfa521c4d277fdbcdeb88258ccc87","modified":1678706016006},{"_id":"public/maps/night.min.css.map","hash":"92f2de31eca4dbf06fcff69ffe8a43f378b29869","modified":1678706016006},{"_id":"public/maps/snow.min.js.map","hash":"55349ccb81c5fad1634191cb658db1291f3fa1b6","modified":1678706016006},{"_id":"public/maps/pjax.min.js.map","hash":"7527c8cc3d16b4623c5a1f710c02bde0bc59fda1","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1678706016006},{"_id":"public/vendors/qrcode_js@1.0.0/LICENSE","hash":"7041717dd3a7d35354f94321b666e11977c7610e","modified":1678706016006},{"_id":"public/vendors/qrcode_js@1.0.0/index.svg","hash":"15730a03273bba608180e8b182453ae393b3c3e0","modified":1678706016006},{"_id":"public/vendors/aplayer@1.10.1/dist/APlayer.min.css.map","hash":"c59d2bc9472922cf6ef9a99e052dbee6cc7e6b36","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/less/animated.less","hash":"421f2c4e10191f148c13b8a34e5ff3f484d4c393","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/less/bordered-pulled.less","hash":"a2c292137b17406183ad0fdbf4880fd648b9a5ca","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/less/core.less","hash":"1a37352286619b789d151a06eb4b7551e4c1aaa2","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/less/fixed-width.less","hash":"ec0c24b97184dab86177660f486b8d08cd636c42","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/less/font-awesome.less","hash":"9ffe7422dc235450a21f019f410ed359ed151f4b","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/less/larger.less","hash":"e7119e82dc50540dbc3472bba7d74282815a7ecc","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/less/icons.less","hash":"0285a999eb1adad868366678c2d9365b77186a45","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/less/list.less","hash":"f53bc20884a1410d950b4a36a330c5181a8b55ab","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/less/mixins.less","hash":"3c5b36b0069372b525ed8bbbcf6b3d4d2bed4e78","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/less/path.less","hash":"1afb4a849059631f76ed2a519d7fb1bd0af14802","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/less/rotated-flipped.less","hash":"95de5de9009714692430b04f9cd4388be8fba8f3","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/less/screen-reader.less","hash":"71139132f170ebe7712836210f4d2c4905151899","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/less/variables.less","hash":"8a5c800747705df16117cc598c1b9f512e873bfe","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/less/stacked.less","hash":"f044077bc8be1a989c245254e81eb084d52d29a7","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/scss/font-awesome.scss","hash":"dd83648ea5bc832f87c3c1bf956c54dec065a9bd","modified":1678706016006},{"_id":"public/vendors/gitalk@1.7.2/dist/gitalk.css.map","hash":"9dda04c29af8da6ac13a507beefea6fce4d7032e","modified":1678706016006},{"_id":"public/vendors/gitment@0.0.3/dist/constants.js.map","hash":"6b7b473ef4bba09ea572b3baaac73c122372439e","modified":1678706016006},{"_id":"public/vendors/gitment@0.0.3/dist/icons.js.map","hash":"5604e4382d787a9a1976359d92bb9827f11c2c2b","modified":1678706016006},{"_id":"public/vendors/gitment@0.0.3/dist/gitment.js.map","hash":"2cb4d20d09b110268e0ea8c199f72501aa2d66e8","modified":1678706016006},{"_id":"public/vendors/gitment@0.0.3/dist/utils.js.map","hash":"6f99a8c2269c938d4422f3a244a8086f89800890","modified":1678706016006},{"_id":"public/vendors/mermaid@9.1.1/dist/mermaid.esm.min.mjs.LICENSE.txt","hash":"38165332beeccd3551309f85addb2354f2d18676","modified":1678706016006},{"_id":"public/vendors/mermaid@9.1.1/dist/mermaid.min.js.LICENSE.txt","hash":"38165332beeccd3551309f85addb2354f2d18676","modified":1678706016006},{"_id":"public/vendors/twikoo@1.5.11/dist/twikoo.all.min.js.LICENSE.txt","hash":"c00fe261d987618ec25243062c089a6982d4480c","modified":1678706016006},{"_id":"public/vendors/twikoo@1.5.11/dist/twikoo.min.js.LICENSE.txt","hash":"c00fe261d987618ec25243062c089a6982d4480c","modified":1678706016006},{"_id":"public/vendors/@waline/client@1.6.0/dist/Waline.min.d.ts","hash":"e8ff14efdfb197dec848f18bbdc337c18cf00956","modified":1677668865494},{"_id":"public/vendors/gitment@0.0.3/dist/theme/default.js.map","hash":"0b7317800be0ea17fa142c7bb26f7e8158b54447","modified":1678706016006},{"_id":"public/vendors/@waline/client@1.6.0/dist/Waline.noStyle.d.ts","hash":"e8ff14efdfb197dec848f18bbdc337c18cf00956","modified":1677668865494},{"_id":"public/vendors/bootstrap@3.3.4/dist/css/bootstrap-theme.css.map","hash":"ccb7ff3435bb5cff1fe9643fc0ac8cdde2dcd177","modified":1678706016006},{"_id":"public/vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1678706016006},{"_id":"public/vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1678706016006},{"_id":"public/vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1678706016006},{"_id":"public/vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/font/iconfont.eot","hash":"de1bec30d0ef87af6ab83ab6a269c3c59bc83124","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/font/iconfont.woff","hash":"6133b92b4e5c3866675b2656ceae14606fa01eb0","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/font/iconfont.ttf","hash":"5d2b8777c623bb6e96577cee675489d0299ffa1f","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/font/iconfont.woff2","hash":"c9b04ae5b10f88f8bc7c48840164f468ee7b10b0","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/0.gif","hash":"87db440c06299666a8a1f407a6008c5bf6d70817","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/10.gif","hash":"04fe5b26b7e2c980d12ad7157a4ce908c2a74f14","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/1.gif","hash":"e6da9a45ecb8c766a8f7c2362ccf2976d20d17a9","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/11.gif","hash":"170c2e16dd383e26d9d68406eb217dbf191ea14e","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/12.gif","hash":"f5da3f33448e67537e3df8ff63b010247b06841c","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/13.gif","hash":"0afcb6c47cb53fa4a8467d7d7bf00ec464df2f8e","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/14.gif","hash":"1af45520e97328498b1a281b6955df5029fc9679","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/16.gif","hash":"54db2506b93b76c58174177245dcc6ef3fd0591f","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/15.gif","hash":"a0f216d0aaaeec369109e4b581eacd4e83e5ccb6","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/17.gif","hash":"0b88c01b477d4ca98eb99a665c0ab8738551aeec","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/18.gif","hash":"eeee84a351d6e84d291b0c27e5d70014a3a2748d","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/19.gif","hash":"620b2afa4c36cbfdd09c57807d8a662a5267ea51","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/20.gif","hash":"7f1cefe1db5c5ee6a9b0eea4d9618cba4b1ac790","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/21.gif","hash":"86d3d5273ffd13841d246698eb648d85e178c4dc","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/2.gif","hash":"43b3ca892341431f697e1326aa693c1f252922be","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/22.gif","hash":"dcad257d86505e921618f7d85b60bf6ac2ce319d","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/23.gif","hash":"43295056d287f3da526dfb77915edc3de7551e3e","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/24.gif","hash":"02a263028625496740eea9a50141a4ad98d826a1","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/25.gif","hash":"05eeb7a9c42a2cd3876417944143078ce514a8b9","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/27.gif","hash":"814bad015177103646b0216367fa9707361998d3","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/28.gif","hash":"5830d72546907c962b6c9003fa923798a67b0406","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/26.gif","hash":"153c5f602881b04bed23d5c7d21a977563075ee2","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/3.gif","hash":"339482962bc4995e16e99ac9de9fc067636fd79e","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/30.gif","hash":"886222551781040325cfd3307fbfba2a1d434a9e","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/32.gif","hash":"9af01aea73b614e5820a00bcc890840493f9dd70","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/33.gif","hash":"5f02bc5ec8d6220a872f1ca1fa2abaa92d46c361","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/31.gif","hash":"29043ca9d16adf6574d4d7efde1af7a615689931","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/29.gif","hash":"ef1d583626e7447f546995a5b296f34eb3364902","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/35.gif","hash":"141ae180796db9800770dc9dbb8c9beda6f170e8","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/36.gif","hash":"55abcc242354c9c1c73538db5d8c7b984de5ca52","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/34.gif","hash":"e0e500feecd8274490a3bdbf64d2555c16a86261","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/37.gif","hash":"850b9425421c3072a4898154d41776c02a4d64f7","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/38.gif","hash":"336cb3cbe0fd6cac96cd7cd5ca847c6a01f95b50","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/39.gif","hash":"6380eb13d87fc4242d2c6eec57f482ac8ca1ad1f","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/40.gif","hash":"c1b0fef186697125b66c1b4617fa3f9abc4d92eb","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/4.gif","hash":"878c3da67e6aec79c9b8dba6f34368586f4bd097","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/41.gif","hash":"c37fb5c43ea499a005d88075a392ed2e09c331df","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/42.gif","hash":"86f11fca6a9c42d3678ec8af35c077a9790ce777","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/44.gif","hash":"32a9fa973626a3a06646095aeeecb919923f7d16","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/45.gif","hash":"864dfc9b99f5641f6d5a0081dc14d84872c1b3c6","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/43.gif","hash":"6a16279bea1179b3fd3a45736ecffd983a42272d","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/46.gif","hash":"b6c74edb2dc383e0f3e28a0859fa87683fea18e2","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/48.gif","hash":"8a8483cd4e3b4b6ac0567eab41c5655ace4b3a81","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/49.gif","hash":"dbf616c5537074ace036340bdddf7948c138c3d7","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/5.gif","hash":"cf43cfcf14bbc7f8e430b74a97eb3b260f16b08c","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/50.gif","hash":"94a521d4f9a69c4eb59f5bbe673c8803246bdf5e","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/47.gif","hash":"653e07693ee719cafbce662bb5e410646fe4695a","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/51.gif","hash":"1ef1419f1ba2fd28e7de676ae5c388074646be53","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/52.gif","hash":"b516f6bd28cee1fe34144d897b702989782be4ec","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/54.gif","hash":"75c738c517217f6b09d51ca3036cf54a01891c4d","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/53.gif","hash":"a03f9bbb0202d24d3313286f60ce08b214c013d2","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/57.gif","hash":"b797ac8509a8f8bc328b10153e0026449a6139ec","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/56.gif","hash":"a71c1ef36706c4ddf7959c68d6c40920db3efe67","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/58.gif","hash":"5c70cba8adb0b42c0da4d922498c265e5d8034d7","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/55.gif","hash":"c446b5eca2cce1faa7f2147a8b646cc774011de1","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/59.gif","hash":"c50da42e6f2ec33112261f46c30e5ea5b4a0f889","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/6.gif","hash":"697d8f2262c535cd61808a564b21fc10ea93f0db","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/60.gif","hash":"bdb24b7ec836fbf6c60c4d7ad97d73f041a154a8","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/61.gif","hash":"a5db56b975970ebe7048a5c824604d64559392b9","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/64.gif","hash":"38a537e9ac930736e162be81c13c5f708ff948bd","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/65.gif","hash":"93cab4423539955a25d17c83da6aee277a6402aa","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/63.gif","hash":"28e9ec7a3882fec8c63dd731b06a9bbcc179aff7","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/66.gif","hash":"6efe452b1f7a697db1c654130a9c2b872f528654","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/68.gif","hash":"e779199003a7415a29d50ecf0bbfed04e031f1ab","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/7.gif","hash":"ad4e2ea1864a85f5729a1347c2f8c49fdb3b2def","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/71.gif","hash":"c6323d6d6d262011faed18e758e9e83e7b6812b8","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/69.gif","hash":"76ac840c5bc5ad44302daa921e7217149576b89e","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/8.gif","hash":"43baffc48b0fbe649ed920bad713e2ccab9b7344","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/62.gif","hash":"a839a263600c034bb11411a7f762dfa917155d10","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/70.gif","hash":"7c2641bef26579d9f90bdc0b740357527dd6e484","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/9.gif","hash":"8df9fc1055efeffdb72d499c064c05445adaa9be","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/images/face/67.gif","hash":"50e2ed8f7773e60ae7d40b612db98554b8277b6e","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layer/default/icon-ext.png","hash":"ddf2a30ad34bac4e9a1250f29c46ac0823d62a12","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layer/default/icon.png","hash":"fe47ec617507e9ce5f6ce7ac9b179a3c9231882b","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layer/default/loading-0.gif","hash":"ba81388bbac5bc223f94489b97a95a13f3c78e47","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layer/default/loading-1.gif","hash":"49e54acbf5674212195e581848ec0d490282448f","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layer/default/loading-2.gif","hash":"c641615e851254111e268da42d72ae684b3ce967","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/2.jpg","hash":"ee9e802e6a46b5b698a4d0c36249c0085b192c68","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/3.jpg","hash":"56cd08ca560acd37d377626b1b67cc4947bfe314","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/1.jpg","hash":"f0ba9086fa730c9c80b89f25ff440b740a4b06df","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/4.jpg","hash":"e018753c3fbd420f8987e53f8a9fc62428ecc18d","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/5.jpg","hash":"a7c37d5401127afeb1ddd930c9ad9f0e3fab3d31","modified":1678706016006},{"_id":"public/css/hbe.style.css","hash":"b0a0077cb588c0941823905fcc383aa7509ade73","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layim/voice/default.mp3","hash":"18ac4168a61de5cd4a35f814e97365945de94ab0","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layim/skin/logo.jpg","hash":"3014e3081d5d4164143936fcf61e7080e81faf38","modified":1678706016006},{"_id":"public/lib/hbe.js","hash":"136dba00826bdd086153bf0acb5473aea7183ad1","modified":1678706016006},{"_id":"public/images/thumb/bg_1.webp","hash":"b38d139d38ec675ba15e26318d1976a38cf4c5a0","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1678706016006},{"_id":"public/vendors/jquery@3.6.0/dist/jquery.slim.min.map","hash":"17a9498757f0b358580ffce586bbc97ae897e8d8","modified":1678706016006},{"_id":"public/vendors/bootstrap@3.3.4/dist/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1678706016006},{"_id":"public/js/candy.min.js","hash":"598f7f5c4efb85c6f7c55183418b070a441b56ee","modified":1678706016006},{"_id":"public/js/pjax.min.js","hash":"84b037cb01dcb34ebc0a1de1aa2f773fe1c51e7a","modified":1678706016006},{"_id":"public/css/prismjs.min.css","hash":"6f2def0d76387c908324f38f845516c7f2d559d7","modified":1678706016006},{"_id":"public/js/local-search.min.js","hash":"8ed9ec22fa7a835c9f5f6e96b8368ae912e9afd0","modified":1678706016006},{"_id":"public/css/kr-color-dark.min.css","hash":"a3a06c23d5ac02170c64580e63b29b438fa82c0f","modified":1678706016006},{"_id":"public/js/kr-dark.min.js","hash":"8ff673018b5688e47f89fe461e30bf30abb81c6e","modified":1678706016006},{"_id":"public/js/snow.min.js","hash":"6cc50c7bb171b57b9149a3aa9b9e939ab36fd847","modified":1678706016006},{"_id":"public/css/highlight/light.min.css","hash":"0c2ee23e4f7a443f90b65905e72f1fca3a89137d","modified":1678706016006},{"_id":"public/css/highlight/night-blue.min.css","hash":"5f298f7125dcf08fed56d393a65b027c447a4c67","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/package.json","hash":"166a52895a194d9bacec7fbca5140c0fea5ce9d6","modified":1678706016006},{"_id":"public/css/highlight/night-bright.min.css","hash":"a2bbbb95cb63124d0f5bc9c351bcf31455b8ecf8","modified":1678706016006},{"_id":"public/css/highlight/night-eighties.min.css","hash":"eafd77c47ada4f8120d683a66cf486426b260205","modified":1678706016006},{"_id":"public/css/highlight/night.min.css","hash":"379e2f99b3b92a710a241f5770ca43237a74238e","modified":1678706016006},{"_id":"public/vendors/nprogress@0.2.0/History.html","hash":"576033eb7d1287eeaf5490b6eb3b67bf10a5c660","modified":1678706016006},{"_id":"public/vendors/nprogress@0.2.0/License.html","hash":"3c0164de84ebc7a78d5ec706f718917f38e3d51e","modified":1678706016006},{"_id":"public/vendors/nprogress@0.2.0/Notes.html","hash":"b9e3e7915863568cff48a5c4dc9dbddfc88d692d","modified":1678706016006},{"_id":"public/vendors/nprogress@0.2.0/Readme.html","hash":"448a4e51ef0b14d32b094d68057628703f0e5848","modified":1678706016006},{"_id":"public/vendors/nprogress@0.2.0/bower.json","hash":"1877b30670d27ff643245d681b3d9abf6651ddb2","modified":1678706016006},{"_id":"public/vendors/nprogress@0.2.0/component.json","hash":"d4264f50a37fedfe55d6d2aef7c99ab08614be80","modified":1678706016006},{"_id":"public/vendors/nprogress@0.2.0/nprogress.css","hash":"17ca817a091da9dcf5fe0f2f1e1f2eea60a33149","modified":1678706016006},{"_id":"public/vendors/nprogress@0.2.0/nprogress.js","hash":"a7e1146d2021c42e68b599dc8bcc69d44fc31df3","modified":1678706016006},{"_id":"public/vendors/nprogress@0.2.0/package.json","hash":"3818c6a9823f00b3f62c365077764b2567bc9be0","modified":1678706016006},{"_id":"public/vendors/qrcode_js@1.0.0/README.html","hash":"067c801ff5318365b2caddcf66b7afa873e504eb","modified":1678706016006},{"_id":"public/vendors/qrcode_js@1.0.0/index.html","hash":"7314a123d8a9acbd51321d4f538ba4b36b0673b5","modified":1678706016006},{"_id":"public/vendors/qrcode_js@1.0.0/index-svg.html","hash":"3c856315a2467efcd00b278c570fbc7897021d98","modified":1678706016006},{"_id":"public/vendors/qrcode_js@1.0.0/bower.json","hash":"bfceae0aa93856efb11b7b42982f6eb47827cbc5","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/README.html","hash":"622ba825bcd7dc401b7d443edfd1c258d36da1bb","modified":1678706016006},{"_id":"public/vendors/aplayer@1.10.1/dist/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1678706016006},{"_id":"public/vendors/qrcode_js@1.0.0/package.json","hash":"6acacb64a9f64d33725a45caedccd5ebbc09204b","modified":1678706016006},{"_id":"public/vendors/clipboard@2.0.6/dist/clipboard.min.js","hash":"6371ec0a8e242395c7d4d008d2b98e472c9dcc52","modified":1677668865494},{"_id":"public/vendors/gitment@0.0.3/dist/constants.js","hash":"08f6c79bf52239cbdd457bc0a94df395f578ee07","modified":1678706016006},{"_id":"public/vendors/gitment@0.0.3/dist/icons.js","hash":"d303f91799600aa8c7f5f5bb18c652fafac4359d","modified":1678706016006},{"_id":"public/vendors/gitment@0.0.3/dist/utils.js","hash":"df76ada59b1cf94a7ea1d44c56a6624d248b4228","modified":1678706016006},{"_id":"public/vendors/gitment@0.0.3/dist/gitment.js","hash":"df37d9fe8c1a0a1fb2883e5bcb93f880bb2bbf2e","modified":1678706016006},{"_id":"public/vendors/disqusjs@1.3.0/dist/disqusjs.css","hash":"0d8ae5946142b17f9a75683c7649cf73d6fdbe17","modified":1678706016006},{"_id":"public/vendors/disqusjs@1.3.0/dist/disqus.js","hash":"b79249dfb619836cfd1251cb3c3d5c603bc55e61","modified":1678706016006},{"_id":"public/vendors/meting@2.0.1/dist/Meting.min.js","hash":"f2b3d20b8bd64ccd031c64628f2b1323078ae324","modified":1678706016006},{"_id":"public/vendors/nprogress@0.2.0/test/component.html","hash":"5965cc7f9bb812ada1ffcd6abec39124c20a4ef8","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/layui.js","hash":"be7bcdcb4eb932f3e700e63584661f19b4139739","modified":1678706016006},{"_id":"public/vendors/nprogress@0.2.0/test/test.js","hash":"5c795debb89ec7d35ba1ec1e8ccbab0a7a353d78","modified":1678706016006},{"_id":"public/vendors/valine@1.4.18/dist/escape.min.js","hash":"4f91bb0e3a71ce6421b303c6c32bb3fb3e751192","modified":1678706016006},{"_id":"public/vendors/valine@1.4.18/dist/detect.min.js","hash":"596d6dcbe379f78a2ec655188d7bfa7182848e03","modified":1678706016006},{"_id":"public/vendors/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1678706016006},{"_id":"public/vendors/@waline/client@1.6.0/dist/index.html","hash":"c720f2027fb93454bbc7eb14ae4eb274a47e8642","modified":1677668865494},{"_id":"public/vendors/gitment@0.0.3/dist/theme/default.js","hash":"449e59ac4b6b9c66384ee123e1523b5392d684a5","modified":1678706016006},{"_id":"public/vendors/bootstrap@3.3.4/dist/js/npm.js","hash":"e2b7590d6ec1fdac66b01fdf66ae0879f53b1262","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/layui.mobile.css","hash":"f15da6c149002dd57ea25b8346534c8161c86e3c","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/code.css","hash":"d7adeb3ada7c3c069aa6d098f953e0a87cfb49ef","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/code.js","hash":"31972b8e26aac0f3b1233ad76c45187a39f4d977","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/colorpicker.js","hash":"0234f7a6eba2238583fe4644c0a247dacd67f73b","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/flow.js","hash":"b6b4ffe415022a6788767906b837e2894057371b","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/element.js","hash":"1900e7f8bca28958e0a495731c7b3957ea0157c6","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/carousel.js","hash":"ff770a94f4e7edd26f4449909e3d72644de83149","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/layedit.js","hash":"ce8c049188c64ec3cd3d302f8e72d0094d85c462","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/rate.js","hash":"c3a4b2dad9e829afb8cfae69203eef8ede02191b","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/slider.js","hash":"c4e37a45ff9ae08f90492f894d86e7bec7542b26","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/laytpl.js","hash":"b79191723a99f3e52b56e0afbd183d7338b9cfd4","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/laypage.js","hash":"fec79457cffad05f261ab518e9d69bbebab548f0","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/transfer.js","hash":"e85e366ff7ca8a49d195e149ec971cb6893b8409","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/tree.js","hash":"5a0c3d9b31a49d8e30e13ef187894d9d07bec69e","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/upload.js","hash":"8eef1ed175c49a7f09f6ce472a7d12138ed8f8ed","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/util.js","hash":"e5e39048df40763ddfff8ec271a6f8070fcb4f4e","modified":1678706016006},{"_id":"public/vendors/valine@1.4.18/dist/plugins/emojis/index.js","hash":"452e66f0b900282eab6f98743592793361ccbc65","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layim/layim.css","hash":"a669bd1141c1df237631738d41f9d0032f4ba0a3","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/form.js","hash":"6ed3220f5b8cbee7f287ca851dd5d294790281ee","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/laydate/default/laydate.css","hash":"bc0f2f7396ca62c86bc07c2db1b73ca83de3cbdb","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layer/default/layer.css","hash":"ed6fefb1501b3bcd720919f9ce55bb322b5d7ec5","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layim/html/find.html","hash":"ed8e6a3564bb52fc7adc8f19c7be34f25fe97222","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layim/html/chatlog.html","hash":"64591e08bb5af1d22e976ba3b3175075c7e6cd12","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layim/html/msgbox.html","hash":"521979a7d5b54e6c00dedaa897ae547065da9b2c","modified":1678706016006},{"_id":"public/vendors/valine@1.4.18/dist/plugins/emojis/light.json","hash":"6d6234de38a90d00582d3413239954bb6609e01e","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layim/mobile/layim.css","hash":"0af51b5e2280a03cefcde3e4cf6662d274cc64c6","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/modules/layim/html/getmsg.json","hash":"15f2e7c561b0de87b8e2ea84682d3bf10f41b6f2","modified":1678706016006},{"_id":"public/js/kratosr.min.js","hash":"bc5e952117fbd4e4dd6604ea6909b06c8f273e73","modified":1678706016006},{"_id":"public/css/kratosr.min.css","hash":"2117a2c9ed00192c3f7c45a2b125d6ea53bbf89f","modified":1678706016006},{"_id":"public/vendors/qrcode_js@1.0.0/jquery.min.js","hash":"a8c8a5caf9765b4ccb90d708045518e219a9af5d","modified":1678706016006},{"_id":"public/vendors/qrcode_js@1.0.0/qrcode.min.js","hash":"2d06c1f823f34c19981c6ae0b0eb0f5861c5e14b","modified":1678706016006},{"_id":"public/vendors/qrcode_js@1.0.0/qrcode.js","hash":"8fa3048613aab15c7f7edc3ac74a84e90375126d","modified":1678706016006},{"_id":"public/vendors/aplayer@1.10.1/dist/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1678706016006},{"_id":"public/vendors/clipboard@2.0.6/dist/clipboard.js","hash":"8d661d3b6e11cb117361a6ff54cf54054b5d8668","modified":1677668865494},{"_id":"public/vendors/font-awesome@4.7.0/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1678706016006},{"_id":"public/vendors/gitalk@1.7.2/dist/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1678706016006},{"_id":"public/vendors/gitment@0.0.3/dist/gitment.browser.js","hash":"376446d9c5930576016f97dd63e5e6616c94d8d4","modified":1678706016006},{"_id":"public/vendors/jquery@3.6.0/dist/jquery.min.js","hash":"b82d238d4e31fdf618bae8ac11a6c812c03dd0d4","modified":1678706016006},{"_id":"public/vendors/jquery@3.6.0/dist/jquery.js","hash":"af32f706407ab08f800c5e697cce92466e735847","modified":1678706016006},{"_id":"public/vendors/jquery@3.6.0/dist/jquery.slim.min.js","hash":"d1c6704e94efe2d465fc161b6381e127d35acd81","modified":1678706016006},{"_id":"public/vendors/jquery@3.6.0/dist/jquery.slim.js","hash":"77ec5d7bdb33634ff7d76837e36f0a7240c21e86","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/layui.all.js","hash":"4fbff21286558e3cb817072d76ae326db4378c6e","modified":1678706016006},{"_id":"public/vendors/valine@1.4.18/dist/Valine.Pure.min.js","hash":"227fb19caf17f4330ac24cb952af466eeaae5c43","modified":1678706016006},{"_id":"public/vendors/twikoo@1.5.11/dist/twikoo.min.js","hash":"e547de978c573d0e7beda7ad74829ce6fef6b058","modified":1678706016006},{"_id":"public/vendors/valine@1.4.18/dist/Valine.min.js","hash":"d081a412c63411a75a3a880ddece65335d1c3ee8","modified":1678706016006},{"_id":"public/vendors/valine@1.4.18/dist/Valine.min.umd.js","hash":"90de88757741f89ad68c8d3765174437454e2303","modified":1678706016006},{"_id":"public/vendors/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.css","hash":"e43435fb9eaa918f5b8e35c9e110124b8bd13751","modified":1678706016006},{"_id":"public/vendors/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1678706016006},{"_id":"public/vendors/@waline/client@1.6.0/dist/Waline.min.js","hash":"d9494e4919cbc017d7b0d70bb70dbcd97c35fcb1","modified":1677668865494},{"_id":"public/vendors/@fancyapps/fancybox@3.5.7/dist/jquery.fancybox.js","hash":"27f034e5db8c32e268e2959b9a7c1258d36e4510","modified":1678706016006},{"_id":"public/vendors/@waline/client@1.6.0/dist/Waline.noStyle.js","hash":"888cb555c5e9749cfe5a5a6cad2a8f56167b9dc4","modified":1677668865494},{"_id":"public/vendors/bootstrap@3.3.4/dist/css/bootstrap-theme.css","hash":"a22e254bf086bf442a09344afe0e6cf188f5a1d5","modified":1678706016006},{"_id":"public/vendors/bootstrap@3.3.4/dist/css/bootstrap-theme.min.css","hash":"fc6b4268fbd57ad95d2b41a1d4d6866f222fbdb2","modified":1678706016006},{"_id":"public/vendors/bootstrap@3.3.4/dist/js/bootstrap.js","hash":"542cfd539f0cad650342c8cab8baf1cdbcd5fea6","modified":1678706016006},{"_id":"public/vendors/bootstrap@3.3.4/dist/css/bootstrap.css","hash":"f2183455571b19311a235bd5aa204e694ade8e94","modified":1678706016006},{"_id":"public/vendors/bootstrap@3.3.4/dist/js/bootstrap.min.js","hash":"27947c0c0fa837da9bdfdfc36f649c25f54bd1c0","modified":1678706016006},{"_id":"public/vendors/bootstrap@3.3.4/dist/css/bootstrap.min.css","hash":"ed29315e0ffb3f14382431f2724235bf67f44eb3","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/css/layui.css","hash":"e15327d5c8f4c82909edc97977b277207e01364d","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/jquery.js","hash":"36456de559419079e1096890c7e9a97ae1bbf1be","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/laydate.js","hash":"53e871827a2c0bc04ec239e9461a5eb18a309075","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/layer.js","hash":"448f76fa3ccfb66a5d86b02cf785f67adf0d8033","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/layim.js","hash":"c79d7e577901f2ceab86f01f00cc4c26ff1b038e","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/mobile.js","hash":"0f82e8ce6b6deb51afdc307f488fb24c6dd02dbc","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/lay/modules/table.js","hash":"3a18563a832e11ae642bf6c2a8634a18768f2dbb","modified":1678706016006},{"_id":"public/maps/kratosr.min.css.map","hash":"64968861cda99e0778a3d41d4390feee3c337f3e","modified":1678706016006},{"_id":"public/vendors/aplayer@1.10.1/dist/APlayer.min.js.map","hash":"31a19da0f0cb6b00ec212eafa847f31af86788df","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1678706016006},{"_id":"public/vendors/jquery@3.6.0/dist/jquery.min.map","hash":"c98b6a5cb27af645c8bfb525fcad3569f3917d5b","modified":1678706016006},{"_id":"public/vendors/gitalk@1.7.2/dist/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1678706016006},{"_id":"public/vendors/twikoo@1.5.11/dist/twikoo.all.min.js","hash":"31c6669a90a33ee5af66ceaf47996ad8fd8b962e","modified":1678706016006},{"_id":"public/vendors/mermaid@9.1.1/dist/mermaid.core.js","hash":"7952663a721317158468875349956182465b0701","modified":1678706016006},{"_id":"public/vendors/mermaid@9.1.1/dist/mermaid.min.js","hash":"6bee48c26c32b90f50519f125890fcbb04779da6","modified":1678706016006},{"_id":"public/vendors/gitment@0.0.3/dist/gitment.browser.js.map","hash":"72dc603fb7be8b623d1a402419b42c36723367bb","modified":1678706016006},{"_id":"public/vendors/valine@1.4.18/dist/Valine.min.umd.js.map","hash":"6fe9ac91ca5074bcbc696f887802e8304e31aaea","modified":1678706016006},{"_id":"public/vendors/valine@1.4.18/dist/Valine.Pure.min.js.map","hash":"40e15912aae8beff90cbb8ae235cd6fcd36f87dc","modified":1678706016006},{"_id":"public/vendors/layui-src@2.5.5/dist/font/iconfont.svg","hash":"d484cee6f2461c9194b28878a1d1a677ffdbb78c","modified":1678706016006},{"_id":"public/vendors/gitalk@1.7.2/dist/gitalk-component.js","hash":"fe4c44fa48522e9b2675f3a652d83d8aaec11ad8","modified":1678706016006},{"_id":"public/vendors/valine@1.4.18/dist/Valine.min.js.map","hash":"fb6f3071e92d08b0c66808ff9cfd190a0341d93d","modified":1678706016006},{"_id":"public/vendors/bootstrap@3.3.4/dist/css/bootstrap.css.map","hash":"2e1d08a9694cd5a694eabca746cfad95fb99653e","modified":1678706016006},{"_id":"public/vendors/gitalk@1.7.2/dist/gitalk.js","hash":"540a80bafeba53826127d556487541332ecd6ed1","modified":1678706016006},{"_id":"public/vendors/font-awesome@4.7.0/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1678706016006},{"_id":"public/vendors/mermaid@9.1.1/dist/mermaid.js","hash":"e1f5d58724700b9cd810bb4e295ac93b6724578d","modified":1678706016006},{"_id":"public/vendors/@waline/client@1.6.0/dist/Waline.noStyle.js.map","hash":"6a31b3aabb3bb6e0e2b7640feec5500617d01950","modified":1677668865494},{"_id":"public/vendors/@waline/client@1.6.0/dist/Waline.min.js.map","hash":"42ce7c8e816ffa115df320a5eb75975291b86731","modified":1677668865494},{"_id":"public/vendors/mermaid@9.1.1/dist/mermaid.esm.min.mjs","hash":"c01a600693e204abd02d0bf056a98a49e8a78d6e","modified":1678706016006},{"_id":"public/vendors/mermaid@9.1.1/dist/mermaid.core.js.map","hash":"1d19d75bea55a0c0062661bb0fe5ad4135f68d8a","modified":1678706016006},{"_id":"public/vendors/gitalk@1.7.2/dist/gitalk.js.map","hash":"b5d129e59c5a1ca46395fbf7466432983178ebba","modified":1678706016006},{"_id":"public/vendors/gitalk@1.7.2/dist/gitalk-component.js.map","hash":"6f118aa575a5da5449d0c171f1c85fa5e43f80ff","modified":1678706016006},{"_id":"public/vendors/mermaid@9.1.1/dist/mermaid.esm.min.mjs.map","hash":"0ad921fcf8f5f79cf5fdf5deb5b4ffc21e501ff0","modified":1678706016006},{"_id":"public/vendors/mermaid@9.1.1/dist/mermaid.min.js.map","hash":"bd1138557833d1ec29ce678d2f994e053f180423","modified":1678706016006},{"_id":"public/vendors/mermaid@9.1.1/dist/mermaid.js.map","hash":"199ed9c41ad0bec69a69514beb6f39f7b3a78ae5","modified":1678706016006},{"_id":"public/vendors/gitalk@1.7.2/dist/gitalk.min.js.map","hash":"6a9f6d47092f2557b346c0eabbd5907a1b12a9e7","modified":1678706016006},{"_id":"source/_posts/基于Zlib的c++流式解压.md","hash":"d25c08c13ec2486dbe22bd908069543a5fdde138","modified":1671102020463},{"_id":"public/2022/12/15/zlib-stream-uncompress/index.html","hash":"78baddc03df25ede116bc49af921771b7a491068","modified":1678706016006},{"_id":"public/archives/2022/12/index.html","hash":"8df1b550d39f08d18733263117e97a002c164e24","modified":1678706016006},{"_id":"public/archives/2022/index.html","hash":"91762f9e577383dd4c08df48c5accb96ef7b6f53","modified":1678706016006},{"_id":"public/tags/zlib/index.html","hash":"b9355a7fcc18bae8aea67391b999c4014027c11f","modified":1678706016006},{"_id":"public/tags/c/index.html","hash":"ea3a85db909cad85423569aa76a61f961b0969c7","modified":1678706016006},{"_id":"themes/kratos-rebirth/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"b07412f7926bd6bc9a2d327ce9c7ae67e548ba66","modified":1678705993489},{"_id":"themes/kratos-rebirth/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"7200fed1dfaaaa4d54f9c61fe1239f0ee040a6c0","modified":1678705993489},{"_id":"themes/kratos-rebirth/source/js/md5.min.js","hash":"5d7de1c994b48a571065484a153d8ef9ca3542d3","modified":1678705993493},{"_id":"themes/kratos-rebirth/source/maps/md5.min.js.map","hash":"f35b5c1fbc7ecfdcd2d54272532947ca0f83b84c","modified":1678705993493},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/api.cjs","hash":"2da315666c52a2a0205da342f3fc7808834d0231","modified":1678705993497},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/api.cjs.map","hash":"555cf9adc857430a799507a250f6ae8cf4454268","modified":1678705993497},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/api.d.cts","hash":"c1cafa6064ccb6851580d9f11600124c060db78b","modified":1678705993497},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/api.d.mts","hash":"c1cafa6064ccb6851580d9f11600124c060db78b","modified":1678705993497},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/api.d.ts","hash":"c1cafa6064ccb6851580d9f11600124c060db78b","modified":1678705993497},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/api.mjs","hash":"208a0b855cf31a54c2130f0aaa0bc7fb3ff766a4","modified":1678705993497},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/api.mjs.map","hash":"4a590871076e07d59664a0fda40d037a6d2f2344","modified":1678705993497},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.cjs","hash":"48777cf6661b69f54cebc970896a4b7528add2ad","modified":1678705993497},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.cjs.map","hash":"1d162b21f3b9b513036b53ed45950f7c35e6e0f5","modified":1678705993497},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.d.cts","hash":"376c612b7771eec314f855e69e82523d4f7f922f","modified":1678705993497},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.d.mts","hash":"376c612b7771eec314f855e69e82523d4f7f922f","modified":1678705993497},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.d.ts","hash":"376c612b7771eec314f855e69e82523d4f7f922f","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.js","hash":"a3e6d8ccf4e6ba2251487e83b79b580153d2b515","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.js.map","hash":"ab28febbf60a2979a8baca97c958a05c2555fbd4","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.mjs","hash":"d6b7d79d2b213888f829e7b44ff312aae3cd2378","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/comment.mjs.map","hash":"efdc8c853f806168f32b4433a19bda6f62c3f5bf","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/component.mjs","hash":"395fabdd03cb56bc0757b14a06a70470dbe0259e","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/legacy.umd.d.ts","hash":"b957f75fde95eb046a31ce075d6e311a2d7450d0","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.cjs","hash":"ff6d9246e7b256eae10aa8c0d35f3b201b1ac8b7","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.cjs.map","hash":"d29ca67cfab54c0ff984438d47060aee70e6fa15","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.d.cts","hash":"4b3fad71d77ead2ad05e4dfe9e0906a4e025a233","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.d.mts","hash":"4b3fad71d77ead2ad05e4dfe9e0906a4e025a233","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.d.ts","hash":"4b3fad71d77ead2ad05e4dfe9e0906a4e025a233","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.js","hash":"ceea6a5a7b83c99ea92cf338ed05f5803ce9a943","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.js.map","hash":"dfa4f18a6ed4dec6232ae770ac66d30158e45b27","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.mjs","hash":"4dc75845f6c827a0c1c8d6a92e7a0602bd03f2a1","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/pageview.mjs.map","hash":"67ae874c2c6fdcbe3ba5ad7f3895a52b518f4924","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/shim.cjs","hash":"1fad1bb7c23bd023d34bafd94c7f3fb937222766","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/shim.d.cts","hash":"92c855188103bc5d5bbbaaf5346a57346e241e5c","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/shim.d.mts","hash":"92c855188103bc5d5bbbaaf5346a57346e241e5c","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/shim.mjs","hash":"0c7689080af2d07976a56ea09ec75f8a360e9663","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline-meta.css","hash":"4c5e417fb615505112fa87eb466eda52e8a90ec0","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline-meta.css.map","hash":"f3796986f06b46a16a17995b9642922c3d029764","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.css.map","hash":"14c2e889034c99033dbac74a4bdbba9e53801a3d","modified":1678705993505},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.css","hash":"6722bd03953e1f8c48c3e01b5776a68e5f901928","modified":1678705993505},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.d.cts","hash":"92c855188103bc5d5bbbaaf5346a57346e241e5c","modified":1678705993505},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.d.mts","hash":"92c855188103bc5d5bbbaaf5346a57346e241e5c","modified":1678705993505},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.d.ts","hash":"92c855188103bc5d5bbbaaf5346a57346e241e5c","modified":1678705993505},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/component.mjs.map","hash":"a45fac56302df2ee67ff4f074d50a0d84db98868","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/legacy.umd.js","hash":"ced943a8fb34fa3810b910f30733ef7a6d9b563c","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/legacy.umd.js.map","hash":"3f5d438f4128604826d03944bbb158ba19ee2e10","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/shim.cjs.map","hash":"74229c9c2f85c73ae1082fe49e89bb789845b90b","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/shim.mjs.map","hash":"800a3ce3650dbaeec78783b4c60b4f70d7959b6d","modified":1678705993501},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.cjs","hash":"7e9d8f4500857833f184905bb698eacc9f1d1c64","modified":1678705993505},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.cjs.map","hash":"eff335e17db76d0b1008d534b8e857c90a7a2d03","modified":1678705993505},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.js.map","hash":"94be543349586850de68359ce689e792d012876a","modified":1678705993505},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.mjs","hash":"b709889f62a6df6fd09e423c5999764ea6ef29e8","modified":1678705993505},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.mjs.map","hash":"2e0fdc9d2c9425c645443bc1d2c2f45e41606faa","modified":1678705993505},{"_id":"themes/kratos-rebirth/source/vendors/@waline/client@2.14.1/dist/waline.js","hash":"6919aef34a57cb0a4e1b75149124e17816ae71c5","modified":1678705993505},{"_id":"public/maps/md5.min.js.map","hash":"f35b5c1fbc7ecfdcd2d54272532947ca0f83b84c","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/api.cjs","hash":"2da315666c52a2a0205da342f3fc7808834d0231","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/api.cjs.map","hash":"555cf9adc857430a799507a250f6ae8cf4454268","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/api.d.cts","hash":"c1cafa6064ccb6851580d9f11600124c060db78b","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/api.d.mts","hash":"c1cafa6064ccb6851580d9f11600124c060db78b","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/api.d.ts","hash":"c1cafa6064ccb6851580d9f11600124c060db78b","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/api.mjs","hash":"208a0b855cf31a54c2130f0aaa0bc7fb3ff766a4","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/api.mjs.map","hash":"4a590871076e07d59664a0fda40d037a6d2f2344","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/comment.cjs","hash":"48777cf6661b69f54cebc970896a4b7528add2ad","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/comment.cjs.map","hash":"1d162b21f3b9b513036b53ed45950f7c35e6e0f5","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/comment.d.cts","hash":"376c612b7771eec314f855e69e82523d4f7f922f","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/comment.d.mts","hash":"376c612b7771eec314f855e69e82523d4f7f922f","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/comment.d.ts","hash":"376c612b7771eec314f855e69e82523d4f7f922f","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/comment.js.map","hash":"ab28febbf60a2979a8baca97c958a05c2555fbd4","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/comment.mjs","hash":"d6b7d79d2b213888f829e7b44ff312aae3cd2378","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/comment.mjs.map","hash":"efdc8c853f806168f32b4433a19bda6f62c3f5bf","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/component.mjs","hash":"395fabdd03cb56bc0757b14a06a70470dbe0259e","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/legacy.umd.d.ts","hash":"b957f75fde95eb046a31ce075d6e311a2d7450d0","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/pageview.cjs","hash":"ff6d9246e7b256eae10aa8c0d35f3b201b1ac8b7","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/pageview.cjs.map","hash":"d29ca67cfab54c0ff984438d47060aee70e6fa15","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/pageview.d.cts","hash":"4b3fad71d77ead2ad05e4dfe9e0906a4e025a233","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/pageview.d.mts","hash":"4b3fad71d77ead2ad05e4dfe9e0906a4e025a233","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/pageview.d.ts","hash":"4b3fad71d77ead2ad05e4dfe9e0906a4e025a233","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/pageview.js.map","hash":"dfa4f18a6ed4dec6232ae770ac66d30158e45b27","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/pageview.mjs","hash":"4dc75845f6c827a0c1c8d6a92e7a0602bd03f2a1","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/pageview.mjs.map","hash":"67ae874c2c6fdcbe3ba5ad7f3895a52b518f4924","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/shim.cjs","hash":"1fad1bb7c23bd023d34bafd94c7f3fb937222766","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/shim.d.cts","hash":"92c855188103bc5d5bbbaaf5346a57346e241e5c","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/shim.d.mts","hash":"92c855188103bc5d5bbbaaf5346a57346e241e5c","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/shim.mjs","hash":"0c7689080af2d07976a56ea09ec75f8a360e9663","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/waline-meta.css.map","hash":"f3796986f06b46a16a17995b9642922c3d029764","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/waline.css.map","hash":"14c2e889034c99033dbac74a4bdbba9e53801a3d","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/waline.d.cts","hash":"92c855188103bc5d5bbbaaf5346a57346e241e5c","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/waline.d.mts","hash":"92c855188103bc5d5bbbaaf5346a57346e241e5c","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/waline.d.ts","hash":"92c855188103bc5d5bbbaaf5346a57346e241e5c","modified":1678706016006},{"_id":"public/js/md5.min.js","hash":"5d7de1c994b48a571065484a153d8ef9ca3542d3","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/comment.js","hash":"a3e6d8ccf4e6ba2251487e83b79b580153d2b515","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/pageview.js","hash":"ceea6a5a7b83c99ea92cf338ed05f5803ce9a943","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/waline-meta.css","hash":"4c5e417fb615505112fa87eb466eda52e8a90ec0","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/legacy.umd.js","hash":"ced943a8fb34fa3810b910f30733ef7a6d9b563c","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/waline.css","hash":"6722bd03953e1f8c48c3e01b5776a68e5f901928","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/waline.js","hash":"6919aef34a57cb0a4e1b75149124e17816ae71c5","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/component.mjs.map","hash":"a45fac56302df2ee67ff4f074d50a0d84db98868","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/legacy.umd.js.map","hash":"3f5d438f4128604826d03944bbb158ba19ee2e10","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/shim.cjs.map","hash":"74229c9c2f85c73ae1082fe49e89bb789845b90b","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/shim.mjs.map","hash":"800a3ce3650dbaeec78783b4c60b4f70d7959b6d","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/waline.cjs","hash":"7e9d8f4500857833f184905bb698eacc9f1d1c64","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/waline.cjs.map","hash":"eff335e17db76d0b1008d534b8e857c90a7a2d03","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/waline.js.map","hash":"94be543349586850de68359ce689e792d012876a","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/waline.mjs","hash":"b709889f62a6df6fd09e423c5999764ea6ef29e8","modified":1678706016006},{"_id":"public/vendors/@waline/client@2.14.1/dist/waline.mjs.map","hash":"2e0fdc9d2c9425c645443bc1d2c2f45e41606faa","modified":1678706016006}],"Category":[{"name":"笔记","_id":"cl7pmazb20002xxsrhbg4fnwo"},{"name":"摸鱼日常","_id":"cl7pmazb40008xxsr1hd6am1p"}],"Data":[],"Page":[],"Post":[{"title":"SpringBoot接收LocalDateTime最佳实践","date":"2019-11-05T01:12:30.000Z","urlname":"springboot-backend-receive-localdatetime","copyright":true,"toc":true,"_content":"\n## 0x0. LocalDateTime在SpringBoot中的窘境\n\n**问题由来**：在前不久，我们后台就已经抛弃了Date这个类，而改用了java8提供的LocalDateTime，但是正常情况下LocalDateTime的构造函数是私有的，无法像Date那样直接被spring mvc直接处理，所以带给了我很多困扰，甚至有一次项目急迫致使我直接使用String去对时间进行接收，然后再通过DateTimeFormatter在Controller层对参数进行了一层处理，才能将LocalDateTime传给了Service进行处理，直接导致的结果就是方法变得有点丑陋了（逃~\n<!--more-->\n\n## 0x1. 初步解决LocalDateTime作为query参数的问题\n\n经过多方面查询得知，对于java8时间格式的问题，其实困扰着很多人，网上也提供了很多的解决方案，比如说下面这种在query参数上加注解的方式：\n```java\n@RestController\n@RequestMapping(\"/api\")\npublic class TestApi {\n\n    @GetMapping(\"/time\")\n    public RestInfo getTime(@RequestParam\n                            @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\")\n                                LocalDateTime time) {\n        return RestInfo.ok(time);\n    }\n}\n```\n\n请求结果如下：\n![请求结果](https://ae01.alicdn.com/kf/H41b34ac5e5b948be9c5c318d008dec74R.png)\n\n但是这样造成的后果是严重影响了代码的质量，每个使用LocalDateTime的参数的地方都需要使用两个注解。\n\n## 0x2. 寻找全局解决方式\n\n接着我又继续尝试了这一种在加了@Configuration的类中使用@Bean注入了一个Convert转换器的方式就是一种很常见的方法（PS：LocalDateTimeUtils是我自己写的一个工具类，后面再提）:\n\n```java\n@Bean\npublic Converter<String, LocalDateTime> localDateTimeConvert() {\n    return new Converter<String, LocalDateTime>() {\n        @Override\n        public LocalDateTime convert(String source) {\n            if (StringUtils.isEmpty(source)) {\n                return null;\n            }\n            return LocalDateTimeUtils.convert(source.trim());\n        }\n    };\n}\n```\n\nController层代码：\n```java\n@RestController\n@RequestMapping(\"/api\")\npublic class TestApi {\n\n    @GetMapping(\"/time\")\n    public RestInfo getTime(LocalDateTime time) {\n        return RestInfo.ok(time);\n    }\n}\n```\n\n但是我使用过后却并没有得到我想要的效果，出现了报错，这是为什么？\n得到的报错如下`java.lang.IllegalStateException: No primary or default constructor found for class java.time.LocalDateTime`，仔细想了一下为什么别人能使用呢，后面才发现自己缺少了一个注解@RequestParam，好的，我这就去加上：\n\n```java\n@RestController\n@RequestMapping(\"/api\")\npublic class TestApi {\n\n    @GetMapping(\"/time\")\n    public RestInfo getTime(@RequestParam LocalDateTime time) {\n        return RestInfo.ok(time);\n    }\n}\n```\n\n请求结果：\n![请求结果](https://ae01.alicdn.com/kf/H58bf0648f70749978e2bfa1ccf130e2e8.png)\n\nnice！全局方式query也生效了，现在我们来尝试一下使用Model去接收参数：\n\nTestModel:\n```java\n@Data\npublic class TestModel {\n\n    private LocalDateTime time;\n}\n```\n\nController层：\n```java\n@RestController\n@RequestMapping(\"/api\")\npublic class TestApi {\n\n    @GetMapping(\"/model\")\n    public RestInfo getModel(TestModel model) {\n        return RestInfo.ok(model);\n    }\n}\n```\n\n请求结果：\n![](https://ae01.alicdn.com/kf/Hfbf7b43a25aa445ab1fccf243d49241bh.png)\n\n嗯，现在已经大致满足要求了，但是对于简洁到了极致的自己来说却依旧不能感到满足，为什么LocalDateTime作为一个属性存在于Model中时却不需要使用注解方式去指定呢？而我们不使用@RequestParam时LocalDateTime却会出现报错？\n\n## 0x3. 深入研究分析参数转换过程\n\n我们先在先在Controller层下一个断点，然后查看调用堆栈，找到了一个可疑的方法：invokeForRequest\n![](https://ae01.alicdn.com/kf/Hbed78744be2e49c191d8d2d243d55791s.png)\n\n我们点进去看一看：\n```java\n@Nullable\npublic Object invokeForRequest(NativeWebRequest request, @Nullable ModelAndViewContainer mavContainer,\n        Object... providedArgs) throws Exception {\n    // 这个方法应该是获取参数的，跟进方法看一下做了什么\n    Object[] args = getMethodArgumentValues(request, mavContainer, providedArgs);\n    if (logger.isTraceEnabled()) {\n        logger.trace(\"Arguments: \" + Arrays.toString(args));\n    }\n    return doInvoke(args);\n}\n```\n```java\nprotected Object[] getMethodArgumentValues(NativeWebRequest request, @Nullable ModelAndViewContainer mavContainer,\n        Object... providedArgs) throws Exception {\n    // 获取方法参数列表\n    MethodParameter[] parameters = getMethodParameters();\n    if (ObjectUtils.isEmpty(parameters)) {\n        return EMPTY_ARGS;\n    }\n\n    Object[] args = new Object[parameters.length];\n    for (int i = 0; i < parameters.length; i++) {\n        MethodParameter parameter = parameters[i];\n        parameter.initParameterNameDiscovery(this.parameterNameDiscoverer);\n        args[i] = findProvidedArgument(parameter, providedArgs);\n        if (args[i] != null) {\n            continue;\n        }\n        if (!this.resolvers.supportsParameter(parameter)) {\n            throw new IllegalStateException(formatArgumentError(parameter, \"No suitable resolver\"));\n        }\n        try {\n            // 这里应该进行的是参数绑定操作，跟进\n            args[i] = this.resolvers.resolveArgument(parameter, mavContainer, request, this.dataBinderFactory);\n        }\n        catch (Exception ex) {\n            // Leave stack trace for later, exception may actually be resolved and handled...\n            if (logger.isDebugEnabled()) {\n                String exMsg = ex.getMessage();\n                if (exMsg != null && !exMsg.contains(parameter.getExecutable().toGenericString())) {\n                    logger.debug(formatArgumentError(parameter, exMsg));\n                }\n            }\n            throw ex;\n        }\n    }\n    return args;\n}\n```\n```java\n@Override\n@Nullable\npublic Object resolveArgument(MethodParameter parameter, @Nullable ModelAndViewContainer mavContainer,\n        NativeWebRequest webRequest, @Nullable WebDataBinderFactory binderFactory) throws Exception {\n    // 继续跟进，方法就紧跟在下边\n    HandlerMethodArgumentResolver resolver = getArgumentResolver(parameter);\n    if (resolver == null) {\n        throw new IllegalArgumentException(\"Unsupported parameter type [\" +\n                parameter.getParameterType().getName() + \"]. supportsParameter should be called first.\");\n    }\n    return resolver.resolveArgument(parameter, mavContainer, webRequest, binderFactory);\n}\n\n@Nullable\nprivate HandlerMethodArgumentResolver getArgumentResolver(MethodParameter parameter) {\n    // 在springboot 2.2.0 时这里会直接将LocalDateTime的解析器确定为RequestParamMethodArgumentResolver\n    HandlerMethodArgumentResolver result = this.argumentResolverCache.get(parameter);\n    if (result == null) {\n        // 这里argumentResolvers是注册的参数解析器列表\n        for (HandlerMethodArgumentResolver resolver : this.argumentResolvers) {\n            if (resolver.supportsParameter(parameter)) {\n                result = resolver;\n                this.argumentResolverCache.put(parameter, result);\n                break;\n            }\n        }\n    }\n    return result;\n}\n```\n\n我们展开参数解析器的列表：\n```\nthis.argumentResolvers = {LinkedList@6957}  size = 26\n 0 = {RequestParamMethodArgumentResolver@6959} \n 1 = {RequestParamMapMethodArgumentResolver@7055} \n 2 = {PathVariableMethodArgumentResolver@7056} \n 3 = {PathVariableMapMethodArgumentResolver@7057} \n 4 = {MatrixVariableMethodArgumentResolver@7058} \n 5 = {MatrixVariableMapMethodArgumentResolver@7059} \n 6 = {ServletModelAttributeMethodProcessor@7060} \n 7 = {RequestResponseBodyMethodProcessor@7061} \n 8 = {RequestPartMethodArgumentResolver@7062} \n 9 = {RequestHeaderMethodArgumentResolver@7063} \n 10 = {RequestHeaderMapMethodArgumentResolver@7064} \n 11 = {ServletCookieValueMethodArgumentResolver@7065} \n 12 = {ExpressionValueMethodArgumentResolver@7066} \n 13 = {SessionAttributeMethodArgumentResolver@7067} \n 14 = {RequestAttributeMethodArgumentResolver@7068} \n 15 = {ServletRequestMethodArgumentResolver@7069} \n 16 = {ServletResponseMethodArgumentResolver@7070} \n 17 = {HttpEntityMethodProcessor@7071} \n 18 = {RedirectAttributesMethodArgumentResolver@7072} \n 19 = {ModelMethodProcessor@7073} \n 20 = {MapMethodProcessor@7074} \n 21 = {ErrorsMethodArgumentResolver@7075} \n 22 = {SessionStatusMethodArgumentResolver@7076} \n 23 = {UriComponentsBuilderMethodArgumentResolver@7077} \n 24 = {RequestParamMethodArgumentResolver@7078} \n 25 = {ServletModelAttributeMethodProcessor@7079} \n```\n\n是不是看到了几个看着很眼熟的东西？`RequestParam`,`PathVariable`,`RequestBody`，在idea中查找RequestParamMethodArgumentResolver类，进入他的方法看一下，\n```java\n@Override\npublic boolean supportsParameter(MethodParameter parameter) {\n    if (parameter.hasParameterAnnotation(RequestParam.class)) {\n        if (Map.class.isAssignableFrom(parameter.nestedIfOptional().getNestedParameterType())) {\n            // RequestParam眼熟不，getParameterAnnotation，对应的就是@RequestParam注解\n            RequestParam requestParam = parameter.getParameterAnnotation(RequestParam.class);\n            return (requestParam != null && StringUtils.hasText(requestParam.name()));\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        if (parameter.hasParameterAnnotation(RequestPart.class)) {\n            return false;\n        }\n        parameter = parameter.nestedIfOptional();\n        if (MultipartResolutionDelegate.isMultipartArgument(parameter)) {\n            return true;\n        }\n        else if (this.useDefaultResolution) {\n            return BeanUtils.isSimpleProperty(parameter.getNestedParameterType());\n        }\n        else {\n            return false;\n        }\n    }\n}\n```\n这里可以基本确定一件事，在我这测试时默认的参数解析器有26个，每个参数解析器有着各自的用途，比如加了@RequestParam注解的参数会被RequestParamMethodArgumentResolver所解析，然后再查找类型有无相应的Convert转换器，在我们这里使用@Bean注入了一个Convert转换器，所以LocalDateTime能被正确的解析。\n\n那么我们之前不加@RequestParam直接使用LocalDateTime作为参数的时候是被哪个解析器所捕获的呢，方法已经找到了，那么直接下个断点跑一遍查看result返回的是哪个解析器就知道了！\n![](https://ae01.alicdn.com/kf/H9dadf5167f2c4916b892b073f713c112B.png)\n\n如果没记错ServletModelAttributeMethodProcessor是参数解析器的最后一个，我们进入到这个类看一眼，没有supportsParameter方法，但是他继承了ModelAttributeMethodProcessor，我们再进入他的父类中：\n```java\n@Override\npublic boolean supportsParameter(MethodParameter parameter) {\n    return (parameter.hasParameterAnnotation(ModelAttribute.class) ||\n            (this.annotationNotRequired && !BeanUtils.isSimpleProperty(parameter.getParameterType())));\n}\n```\n\n对于没有指定参数解析器的参数来说，默认指定的参数解析器是ModelAttributeMethodProcessor，并且由源码得知，如果加了@ModelAttribute注解，或者非简单属性则会被该解析器捕获，所以我们平时所使用的model去接收不需要加注解即可被正确的解析，既然都来了，那么顺便看一下resolveArgument方法是怎么解析参数的\n```java\n@Override\n@Nullable\npublic final Object resolveArgument(MethodParameter parameter, @Nullable ModelAndViewContainer mavContainer,\n        NativeWebRequest webRequest, @Nullable WebDataBinderFactory binderFactory) throws Exception {\n    //...\n    if (mavContainer.containsAttribute(name)) {\n        attribute = mavContainer.getModel().get(name);\n    }\n    else {\n        // Create attribute instance\n        try {\n            // 这里是对参数的绑定构建了，点进去看一眼\n            attribute = createAttribute(name, parameter, binderFactory, webRequest);\n        }\n        catch (BindException ex) {\n            if (isBindExceptionRequired(parameter)) {\n                // No BindingResult parameter -> fail with BindException\n                throw ex;\n            }\n            // Otherwise, expose null/empty value and associated BindingResult\n            if (parameter.getParameterType() == Optional.class) {\n                attribute = Optional.empty();\n            }\n            bindingResult = ex.getBindingResult();\n        }\n    }\n    //...\n}\n```\n\n继续跟进createAttribute方法，看看他是怎么将值绑定给对象的：\n```java\nprotected Object createAttribute(String attributeName, MethodParameter parameter,\n        WebDataBinderFactory binderFactory, NativeWebRequest webRequest) throws Exception {\n\n    MethodParameter nestedParameter = parameter.nestedIfOptional();\n    Class<?> clazz = nestedParameter.getNestedParameterType();\n\n    Constructor<?> ctor = BeanUtils.findPrimaryConstructor(clazz);\n    if (ctor == null) {\n        Constructor<?>[] ctors = clazz.getConstructors();\n        if (ctors.length == 1) {\n            ctor = ctors[0];\n        }\n        else {\n            try {\n                ctor = clazz.getDeclaredConstructor();\n            }\n            catch (NoSuchMethodException ex) {\n                throw new IllegalStateException(\"No primary or default constructor found for \" + clazz, ex);\n            }\n        }\n    }\n\n    Object attribute = constructAttribute(ctor, attributeName, parameter, binderFactory, webRequest);\n    if (parameter != nestedParameter) {\n        attribute = Optional.of(attribute);\n    }\n    return attribute;\n}\n```\n\n看到这里是不是发现报错的地方有点熟悉？这就是我们之前LocalDateTime抛出异常的地方了，可以得知对于对象的绑定，先通过BeanUtils获取主要的构造函数，如果获取不到，则使用反射的方式先尝试获取声明为public的无参构造函数，最后才会尝试使用getDeclaredConstructor获取所有的无参构造函数，但是对于LocalDateTime这种使用工厂构造不存在无参构造函数的类来说就会直接抛出NoSuchMethodException异常。那么如果我们不想使用@RequestParam注解加在参数上怎么办呢？\n\n## 0x4. 创建参数解析器\n\n如果我们不希望在LocalDateTime上增加注解，然后再通过RequestParamMethodArgumentResolver解析，我们可以自己定制一种针对LocalDateTime的参数解析器，通过继承WebMvcConfigurer重写addArgumentResolvers方法，然后add一个自定义的HandlerMethodArgumentResolver即可解决刚才的问题，但是在2.2.0版本上会自动指定LocalDateTime的解析器原因未知（我太蔡了...找不到是怎么做到的，想看看他是怎么获取的，但是发现那个方法再无限调用，完全没有头绪。\n\n```java\n@Configuration\npublic class MvcConfig implements WebMvcConfigurer {\n    /**\n     * 增加 {@link LocalDateTime} 的自定义参数解析器，不需要用注解方式指定query参数即可解析\n     * 2.2.0版本后较大改变，自动确定LocalDateTime解析器为 {@link\n     * org.springframework.web.method.annotation.RequestParamMethodArgumentResolver}\n     * 但是依旧可以注册使用本解析器\n     */\n    @Override\n    public void addArgumentResolvers(List<HandlerMethodArgumentResolver> resolvers) {\n        resolvers.add(new LocalDateArgumentResolverHandler());\n    }\n\n    public static class LocalDateArgumentResolverHandler implements HandlerMethodArgumentResolver {\n\n        @Override\n        public boolean supportsParameter(MethodParameter parameter) {\n            return parameter.getParameterType().equals(LocalDateTime.class);\n        }\n\n        @Override\n        public Object resolveArgument(MethodParameter parameter, ModelAndViewContainer mavContainer,\n                                      NativeWebRequest webRequest, WebDataBinderFactory binderFactory) {\n            String param = webRequest.getParameter(Objects.requireNonNull(parameter.getParameterName()));\n            if (StringUtils.isEmpty(param)) {\n                return null;\n            }\n            return LocalDateTimeUtils.convert(param.trim());\n        }\n    }\n}\n```\n\n## 0x5. 推荐使用注册Convert的方式\n相比于注入@Bean的方式创建Convert的方式，我个人更喜欢使用继承WebMvcConfigurer后重写addFormatters方法来注册自定义Convert。这种方式相比于@Bean注入，更容易让人理解，代码如下：\n```java\n@Configuration\npublic class MvcConfig implements WebMvcConfigurer {\n\n    @Override\n    public void addFormatters(FormatterRegistry registry) {\n        registry.addConverter(new LocalDateTimeConverter());\n    }\n\n    public static class LocalDateTimeConverter implements Converter<String, LocalDateTime> {\n\n        @Override\n        public LocalDateTime convert(String source) {\n            if (StringUtils.isEmpty(source)) {\n                return null;\n            }\n            return LocalDateTimeUtils.convert(source.trim());\n        }\n    }\n}\n```\n\n## 0x6. 小结\n对于request参数其实还有initBinder，Formatter等方式进行处理，这里就不一一贴出来了，有兴趣的各位可以在网上查询相关资料。还有jackson相关的序列化，通过继承com.fasterxml.jackson.databind.JsonDeserializer和com.fasterxml.jackson.databind.JsonSerializer生成自定义的Jackson Deserializer和Serializer，然后在@Configuration注解的配置类内注入@Bean将Jackson Module注册为@Bean，SpringBoot会自动注入进ObjectMapper中。另一种方式是自己注入一个自己定制的ObjectMapper为@Bean，然后将Module注入进ObjectMapper中。甚至可以通过定制转换规则，从而使类型支持多种参数。\n\n## 0xf. 附录\n\n时间字符串转 LocalDateTime 工具类。转换不同时区的时间为本地时间（默认使用 `ZoneId.systemDefault()` 为本地时区）\n- 支持10位秒时间戳\n- 13位毫秒时间戳\n- 通用时间格式: `yyyy-MM-dd HH:mm[:ss][.sss]`\n- ISO-8601 时间格式: `yyyy-MM-ddTHH:mm[:ss][.sss][Z|(+|-)HH:mm]`\n- RFC-3339 时间格式: `yyyy-MM-dd HH:mm[:ss][.sss][Z|(+|-)HH:mm]`\n\n```java\n/**\n * 时间字符串转 LocalDateTime 工具类\n * \n * @author teble\n */\npublic abstract class LocalDateTimeUtils {\n\n    private final static Pattern DATE_TIME_PATTERN = Pattern.compile(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}[T ]\\\\d{2}:\\\\d{2}.*$\");\n\n    private final static ZoneId LOCAL_ZONE_ID = ZoneId.systemDefault();\n\n    private final static DateTimeFormatter LOCAL_DATE_TIME_FORMATTER = new DateTimeFormatterBuilder()\n            .parseCaseInsensitive()\n            .append(ISO_LOCAL_DATE)\n            .optionalStart()\n            .appendLiteral('T')\n            .optionalEnd()\n            .optionalStart()\n            .appendLiteral(' ')\n            .optionalEnd()\n            .append(ISO_LOCAL_TIME)\n            .toFormatter();\n\n    private static boolean isTimestamp(@NonNull String resolver) {\n        for (int i = 0; i < resolver.length(); i++) {\n            char ch = resolver.charAt(i);\n            if (!Character.isDigit(ch)) {\n                return false;\n            }\n        }\n        return resolver.length() == 10 || resolver.length() == 13;\n    }\n\n    private static boolean isOffsetDateTime(@NonNull String resolver) {\n        for (int i = 10; i < resolver.length(); i++) {\n            char ch = resolver.charAt(i);\n            if (ch == 'Z' || ch == '+' || ch == '-') {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private static boolean isZonedDateTime(@NonNull String resolver) {\n        return resolver.endsWith(\"]\");\n    }\n\n    @NonNull\n    private static String getISOTimeStr(@NonNull String resolver) {\n        if (resolver.charAt(10) == ' ') {\n            return resolver.substring(0, 10) + \"T\" + resolver.substring(11);\n        } else {\n            return resolver;\n        }\n    }\n\n    @Nullable\n    public static LocalDateTime convert(@Nullable String resolver) {\n        if (resolver == null) {\n            return null;\n        }\n        if (isTimestamp(resolver)) {\n            Instant instant;\n            if (resolver.length() == 10) {\n                instant = Instant.ofEpochSecond(Long.parseLong(resolver));\n            } else {\n                instant = Instant.ofEpochMilli(Long.parseLong(resolver));\n            }\n            return LocalDateTime.ofInstant(instant, LOCAL_ZONE_ID);\n        }\n        if (DATE_TIME_PATTERN.matcher(resolver).matches()) {\n            // compatibility RFC 3339\n            resolver = getISOTimeStr(resolver);\n            boolean isZoned = isZonedDateTime(resolver);\n            boolean isOffset = isOffsetDateTime(resolver);\n            if (isOffset && isZoned) {\n                return ZonedDateTime.parse(resolver, DateTimeFormatter.ISO_ZONED_DATE_TIME)\n                        .withZoneSameInstant(LOCAL_ZONE_ID)\n                        .toLocalDateTime();\n            } else if (isOffset) {\n                return ZonedDateTime.parse(resolver, DateTimeFormatter.ISO_OFFSET_DATE_TIME)\n                        .withZoneSameInstant(LOCAL_ZONE_ID)\n                        .toLocalDateTime();\n            } else {\n                return LocalDateTime.parse(resolver, LOCAL_DATE_TIME_FORMATTER);\n            }\n        }\n        return null;\n    }\n\n    public static void main(String[] args) {\n        // ISO 8601\n        System.out.println(convert(\"2011-12-03T10:15:30+01:00[Europe/Paris]\"));\n        System.out.println(convert(\"2011-12-03T10:15:30+01:00\"));\n        System.out.println(convert(\"2011-12-03T10:15:30Z\"));\n        // RFC 3339\n        System.out.println(convert(\"2011-12-03 10:15:30.123Z\"));\n        System.out.println(convert(\"2011-12-03 10:15:30.123+01:00\"));\n        // LOCAL TIME\n        System.out.println(convert(\"2011-12-03 10:15:30\"));\n        // TIMESTAMP\n        System.out.println(convert(\"1322819330\"));\n        System.out.println(convert(\"1322819330123\"));\n        // INVALID\n        System.out.println(convert(\"123\"));\n    }\n}\n\n```","source":"_posts/SpringBoot-LocalDateTime-后端接收参数最佳实践.md","raw":"---\ntitle: SpringBoot接收LocalDateTime最佳实践\ndate: 2019-11-5 09:12:30\nurlname: springboot-backend-receive-localdatetime\ncopyright: true\ncategories: \n- 笔记\ntags:\n- SpringBoot\n- Java\n- 后端\ntoc: true\n---\n\n## 0x0. LocalDateTime在SpringBoot中的窘境\n\n**问题由来**：在前不久，我们后台就已经抛弃了Date这个类，而改用了java8提供的LocalDateTime，但是正常情况下LocalDateTime的构造函数是私有的，无法像Date那样直接被spring mvc直接处理，所以带给了我很多困扰，甚至有一次项目急迫致使我直接使用String去对时间进行接收，然后再通过DateTimeFormatter在Controller层对参数进行了一层处理，才能将LocalDateTime传给了Service进行处理，直接导致的结果就是方法变得有点丑陋了（逃~\n<!--more-->\n\n## 0x1. 初步解决LocalDateTime作为query参数的问题\n\n经过多方面查询得知，对于java8时间格式的问题，其实困扰着很多人，网上也提供了很多的解决方案，比如说下面这种在query参数上加注解的方式：\n```java\n@RestController\n@RequestMapping(\"/api\")\npublic class TestApi {\n\n    @GetMapping(\"/time\")\n    public RestInfo getTime(@RequestParam\n                            @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\")\n                                LocalDateTime time) {\n        return RestInfo.ok(time);\n    }\n}\n```\n\n请求结果如下：\n![请求结果](https://ae01.alicdn.com/kf/H41b34ac5e5b948be9c5c318d008dec74R.png)\n\n但是这样造成的后果是严重影响了代码的质量，每个使用LocalDateTime的参数的地方都需要使用两个注解。\n\n## 0x2. 寻找全局解决方式\n\n接着我又继续尝试了这一种在加了@Configuration的类中使用@Bean注入了一个Convert转换器的方式就是一种很常见的方法（PS：LocalDateTimeUtils是我自己写的一个工具类，后面再提）:\n\n```java\n@Bean\npublic Converter<String, LocalDateTime> localDateTimeConvert() {\n    return new Converter<String, LocalDateTime>() {\n        @Override\n        public LocalDateTime convert(String source) {\n            if (StringUtils.isEmpty(source)) {\n                return null;\n            }\n            return LocalDateTimeUtils.convert(source.trim());\n        }\n    };\n}\n```\n\nController层代码：\n```java\n@RestController\n@RequestMapping(\"/api\")\npublic class TestApi {\n\n    @GetMapping(\"/time\")\n    public RestInfo getTime(LocalDateTime time) {\n        return RestInfo.ok(time);\n    }\n}\n```\n\n但是我使用过后却并没有得到我想要的效果，出现了报错，这是为什么？\n得到的报错如下`java.lang.IllegalStateException: No primary or default constructor found for class java.time.LocalDateTime`，仔细想了一下为什么别人能使用呢，后面才发现自己缺少了一个注解@RequestParam，好的，我这就去加上：\n\n```java\n@RestController\n@RequestMapping(\"/api\")\npublic class TestApi {\n\n    @GetMapping(\"/time\")\n    public RestInfo getTime(@RequestParam LocalDateTime time) {\n        return RestInfo.ok(time);\n    }\n}\n```\n\n请求结果：\n![请求结果](https://ae01.alicdn.com/kf/H58bf0648f70749978e2bfa1ccf130e2e8.png)\n\nnice！全局方式query也生效了，现在我们来尝试一下使用Model去接收参数：\n\nTestModel:\n```java\n@Data\npublic class TestModel {\n\n    private LocalDateTime time;\n}\n```\n\nController层：\n```java\n@RestController\n@RequestMapping(\"/api\")\npublic class TestApi {\n\n    @GetMapping(\"/model\")\n    public RestInfo getModel(TestModel model) {\n        return RestInfo.ok(model);\n    }\n}\n```\n\n请求结果：\n![](https://ae01.alicdn.com/kf/Hfbf7b43a25aa445ab1fccf243d49241bh.png)\n\n嗯，现在已经大致满足要求了，但是对于简洁到了极致的自己来说却依旧不能感到满足，为什么LocalDateTime作为一个属性存在于Model中时却不需要使用注解方式去指定呢？而我们不使用@RequestParam时LocalDateTime却会出现报错？\n\n## 0x3. 深入研究分析参数转换过程\n\n我们先在先在Controller层下一个断点，然后查看调用堆栈，找到了一个可疑的方法：invokeForRequest\n![](https://ae01.alicdn.com/kf/Hbed78744be2e49c191d8d2d243d55791s.png)\n\n我们点进去看一看：\n```java\n@Nullable\npublic Object invokeForRequest(NativeWebRequest request, @Nullable ModelAndViewContainer mavContainer,\n        Object... providedArgs) throws Exception {\n    // 这个方法应该是获取参数的，跟进方法看一下做了什么\n    Object[] args = getMethodArgumentValues(request, mavContainer, providedArgs);\n    if (logger.isTraceEnabled()) {\n        logger.trace(\"Arguments: \" + Arrays.toString(args));\n    }\n    return doInvoke(args);\n}\n```\n```java\nprotected Object[] getMethodArgumentValues(NativeWebRequest request, @Nullable ModelAndViewContainer mavContainer,\n        Object... providedArgs) throws Exception {\n    // 获取方法参数列表\n    MethodParameter[] parameters = getMethodParameters();\n    if (ObjectUtils.isEmpty(parameters)) {\n        return EMPTY_ARGS;\n    }\n\n    Object[] args = new Object[parameters.length];\n    for (int i = 0; i < parameters.length; i++) {\n        MethodParameter parameter = parameters[i];\n        parameter.initParameterNameDiscovery(this.parameterNameDiscoverer);\n        args[i] = findProvidedArgument(parameter, providedArgs);\n        if (args[i] != null) {\n            continue;\n        }\n        if (!this.resolvers.supportsParameter(parameter)) {\n            throw new IllegalStateException(formatArgumentError(parameter, \"No suitable resolver\"));\n        }\n        try {\n            // 这里应该进行的是参数绑定操作，跟进\n            args[i] = this.resolvers.resolveArgument(parameter, mavContainer, request, this.dataBinderFactory);\n        }\n        catch (Exception ex) {\n            // Leave stack trace for later, exception may actually be resolved and handled...\n            if (logger.isDebugEnabled()) {\n                String exMsg = ex.getMessage();\n                if (exMsg != null && !exMsg.contains(parameter.getExecutable().toGenericString())) {\n                    logger.debug(formatArgumentError(parameter, exMsg));\n                }\n            }\n            throw ex;\n        }\n    }\n    return args;\n}\n```\n```java\n@Override\n@Nullable\npublic Object resolveArgument(MethodParameter parameter, @Nullable ModelAndViewContainer mavContainer,\n        NativeWebRequest webRequest, @Nullable WebDataBinderFactory binderFactory) throws Exception {\n    // 继续跟进，方法就紧跟在下边\n    HandlerMethodArgumentResolver resolver = getArgumentResolver(parameter);\n    if (resolver == null) {\n        throw new IllegalArgumentException(\"Unsupported parameter type [\" +\n                parameter.getParameterType().getName() + \"]. supportsParameter should be called first.\");\n    }\n    return resolver.resolveArgument(parameter, mavContainer, webRequest, binderFactory);\n}\n\n@Nullable\nprivate HandlerMethodArgumentResolver getArgumentResolver(MethodParameter parameter) {\n    // 在springboot 2.2.0 时这里会直接将LocalDateTime的解析器确定为RequestParamMethodArgumentResolver\n    HandlerMethodArgumentResolver result = this.argumentResolverCache.get(parameter);\n    if (result == null) {\n        // 这里argumentResolvers是注册的参数解析器列表\n        for (HandlerMethodArgumentResolver resolver : this.argumentResolvers) {\n            if (resolver.supportsParameter(parameter)) {\n                result = resolver;\n                this.argumentResolverCache.put(parameter, result);\n                break;\n            }\n        }\n    }\n    return result;\n}\n```\n\n我们展开参数解析器的列表：\n```\nthis.argumentResolvers = {LinkedList@6957}  size = 26\n 0 = {RequestParamMethodArgumentResolver@6959} \n 1 = {RequestParamMapMethodArgumentResolver@7055} \n 2 = {PathVariableMethodArgumentResolver@7056} \n 3 = {PathVariableMapMethodArgumentResolver@7057} \n 4 = {MatrixVariableMethodArgumentResolver@7058} \n 5 = {MatrixVariableMapMethodArgumentResolver@7059} \n 6 = {ServletModelAttributeMethodProcessor@7060} \n 7 = {RequestResponseBodyMethodProcessor@7061} \n 8 = {RequestPartMethodArgumentResolver@7062} \n 9 = {RequestHeaderMethodArgumentResolver@7063} \n 10 = {RequestHeaderMapMethodArgumentResolver@7064} \n 11 = {ServletCookieValueMethodArgumentResolver@7065} \n 12 = {ExpressionValueMethodArgumentResolver@7066} \n 13 = {SessionAttributeMethodArgumentResolver@7067} \n 14 = {RequestAttributeMethodArgumentResolver@7068} \n 15 = {ServletRequestMethodArgumentResolver@7069} \n 16 = {ServletResponseMethodArgumentResolver@7070} \n 17 = {HttpEntityMethodProcessor@7071} \n 18 = {RedirectAttributesMethodArgumentResolver@7072} \n 19 = {ModelMethodProcessor@7073} \n 20 = {MapMethodProcessor@7074} \n 21 = {ErrorsMethodArgumentResolver@7075} \n 22 = {SessionStatusMethodArgumentResolver@7076} \n 23 = {UriComponentsBuilderMethodArgumentResolver@7077} \n 24 = {RequestParamMethodArgumentResolver@7078} \n 25 = {ServletModelAttributeMethodProcessor@7079} \n```\n\n是不是看到了几个看着很眼熟的东西？`RequestParam`,`PathVariable`,`RequestBody`，在idea中查找RequestParamMethodArgumentResolver类，进入他的方法看一下，\n```java\n@Override\npublic boolean supportsParameter(MethodParameter parameter) {\n    if (parameter.hasParameterAnnotation(RequestParam.class)) {\n        if (Map.class.isAssignableFrom(parameter.nestedIfOptional().getNestedParameterType())) {\n            // RequestParam眼熟不，getParameterAnnotation，对应的就是@RequestParam注解\n            RequestParam requestParam = parameter.getParameterAnnotation(RequestParam.class);\n            return (requestParam != null && StringUtils.hasText(requestParam.name()));\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        if (parameter.hasParameterAnnotation(RequestPart.class)) {\n            return false;\n        }\n        parameter = parameter.nestedIfOptional();\n        if (MultipartResolutionDelegate.isMultipartArgument(parameter)) {\n            return true;\n        }\n        else if (this.useDefaultResolution) {\n            return BeanUtils.isSimpleProperty(parameter.getNestedParameterType());\n        }\n        else {\n            return false;\n        }\n    }\n}\n```\n这里可以基本确定一件事，在我这测试时默认的参数解析器有26个，每个参数解析器有着各自的用途，比如加了@RequestParam注解的参数会被RequestParamMethodArgumentResolver所解析，然后再查找类型有无相应的Convert转换器，在我们这里使用@Bean注入了一个Convert转换器，所以LocalDateTime能被正确的解析。\n\n那么我们之前不加@RequestParam直接使用LocalDateTime作为参数的时候是被哪个解析器所捕获的呢，方法已经找到了，那么直接下个断点跑一遍查看result返回的是哪个解析器就知道了！\n![](https://ae01.alicdn.com/kf/H9dadf5167f2c4916b892b073f713c112B.png)\n\n如果没记错ServletModelAttributeMethodProcessor是参数解析器的最后一个，我们进入到这个类看一眼，没有supportsParameter方法，但是他继承了ModelAttributeMethodProcessor，我们再进入他的父类中：\n```java\n@Override\npublic boolean supportsParameter(MethodParameter parameter) {\n    return (parameter.hasParameterAnnotation(ModelAttribute.class) ||\n            (this.annotationNotRequired && !BeanUtils.isSimpleProperty(parameter.getParameterType())));\n}\n```\n\n对于没有指定参数解析器的参数来说，默认指定的参数解析器是ModelAttributeMethodProcessor，并且由源码得知，如果加了@ModelAttribute注解，或者非简单属性则会被该解析器捕获，所以我们平时所使用的model去接收不需要加注解即可被正确的解析，既然都来了，那么顺便看一下resolveArgument方法是怎么解析参数的\n```java\n@Override\n@Nullable\npublic final Object resolveArgument(MethodParameter parameter, @Nullable ModelAndViewContainer mavContainer,\n        NativeWebRequest webRequest, @Nullable WebDataBinderFactory binderFactory) throws Exception {\n    //...\n    if (mavContainer.containsAttribute(name)) {\n        attribute = mavContainer.getModel().get(name);\n    }\n    else {\n        // Create attribute instance\n        try {\n            // 这里是对参数的绑定构建了，点进去看一眼\n            attribute = createAttribute(name, parameter, binderFactory, webRequest);\n        }\n        catch (BindException ex) {\n            if (isBindExceptionRequired(parameter)) {\n                // No BindingResult parameter -> fail with BindException\n                throw ex;\n            }\n            // Otherwise, expose null/empty value and associated BindingResult\n            if (parameter.getParameterType() == Optional.class) {\n                attribute = Optional.empty();\n            }\n            bindingResult = ex.getBindingResult();\n        }\n    }\n    //...\n}\n```\n\n继续跟进createAttribute方法，看看他是怎么将值绑定给对象的：\n```java\nprotected Object createAttribute(String attributeName, MethodParameter parameter,\n        WebDataBinderFactory binderFactory, NativeWebRequest webRequest) throws Exception {\n\n    MethodParameter nestedParameter = parameter.nestedIfOptional();\n    Class<?> clazz = nestedParameter.getNestedParameterType();\n\n    Constructor<?> ctor = BeanUtils.findPrimaryConstructor(clazz);\n    if (ctor == null) {\n        Constructor<?>[] ctors = clazz.getConstructors();\n        if (ctors.length == 1) {\n            ctor = ctors[0];\n        }\n        else {\n            try {\n                ctor = clazz.getDeclaredConstructor();\n            }\n            catch (NoSuchMethodException ex) {\n                throw new IllegalStateException(\"No primary or default constructor found for \" + clazz, ex);\n            }\n        }\n    }\n\n    Object attribute = constructAttribute(ctor, attributeName, parameter, binderFactory, webRequest);\n    if (parameter != nestedParameter) {\n        attribute = Optional.of(attribute);\n    }\n    return attribute;\n}\n```\n\n看到这里是不是发现报错的地方有点熟悉？这就是我们之前LocalDateTime抛出异常的地方了，可以得知对于对象的绑定，先通过BeanUtils获取主要的构造函数，如果获取不到，则使用反射的方式先尝试获取声明为public的无参构造函数，最后才会尝试使用getDeclaredConstructor获取所有的无参构造函数，但是对于LocalDateTime这种使用工厂构造不存在无参构造函数的类来说就会直接抛出NoSuchMethodException异常。那么如果我们不想使用@RequestParam注解加在参数上怎么办呢？\n\n## 0x4. 创建参数解析器\n\n如果我们不希望在LocalDateTime上增加注解，然后再通过RequestParamMethodArgumentResolver解析，我们可以自己定制一种针对LocalDateTime的参数解析器，通过继承WebMvcConfigurer重写addArgumentResolvers方法，然后add一个自定义的HandlerMethodArgumentResolver即可解决刚才的问题，但是在2.2.0版本上会自动指定LocalDateTime的解析器原因未知（我太蔡了...找不到是怎么做到的，想看看他是怎么获取的，但是发现那个方法再无限调用，完全没有头绪。\n\n```java\n@Configuration\npublic class MvcConfig implements WebMvcConfigurer {\n    /**\n     * 增加 {@link LocalDateTime} 的自定义参数解析器，不需要用注解方式指定query参数即可解析\n     * 2.2.0版本后较大改变，自动确定LocalDateTime解析器为 {@link\n     * org.springframework.web.method.annotation.RequestParamMethodArgumentResolver}\n     * 但是依旧可以注册使用本解析器\n     */\n    @Override\n    public void addArgumentResolvers(List<HandlerMethodArgumentResolver> resolvers) {\n        resolvers.add(new LocalDateArgumentResolverHandler());\n    }\n\n    public static class LocalDateArgumentResolverHandler implements HandlerMethodArgumentResolver {\n\n        @Override\n        public boolean supportsParameter(MethodParameter parameter) {\n            return parameter.getParameterType().equals(LocalDateTime.class);\n        }\n\n        @Override\n        public Object resolveArgument(MethodParameter parameter, ModelAndViewContainer mavContainer,\n                                      NativeWebRequest webRequest, WebDataBinderFactory binderFactory) {\n            String param = webRequest.getParameter(Objects.requireNonNull(parameter.getParameterName()));\n            if (StringUtils.isEmpty(param)) {\n                return null;\n            }\n            return LocalDateTimeUtils.convert(param.trim());\n        }\n    }\n}\n```\n\n## 0x5. 推荐使用注册Convert的方式\n相比于注入@Bean的方式创建Convert的方式，我个人更喜欢使用继承WebMvcConfigurer后重写addFormatters方法来注册自定义Convert。这种方式相比于@Bean注入，更容易让人理解，代码如下：\n```java\n@Configuration\npublic class MvcConfig implements WebMvcConfigurer {\n\n    @Override\n    public void addFormatters(FormatterRegistry registry) {\n        registry.addConverter(new LocalDateTimeConverter());\n    }\n\n    public static class LocalDateTimeConverter implements Converter<String, LocalDateTime> {\n\n        @Override\n        public LocalDateTime convert(String source) {\n            if (StringUtils.isEmpty(source)) {\n                return null;\n            }\n            return LocalDateTimeUtils.convert(source.trim());\n        }\n    }\n}\n```\n\n## 0x6. 小结\n对于request参数其实还有initBinder，Formatter等方式进行处理，这里就不一一贴出来了，有兴趣的各位可以在网上查询相关资料。还有jackson相关的序列化，通过继承com.fasterxml.jackson.databind.JsonDeserializer和com.fasterxml.jackson.databind.JsonSerializer生成自定义的Jackson Deserializer和Serializer，然后在@Configuration注解的配置类内注入@Bean将Jackson Module注册为@Bean，SpringBoot会自动注入进ObjectMapper中。另一种方式是自己注入一个自己定制的ObjectMapper为@Bean，然后将Module注入进ObjectMapper中。甚至可以通过定制转换规则，从而使类型支持多种参数。\n\n## 0xf. 附录\n\n时间字符串转 LocalDateTime 工具类。转换不同时区的时间为本地时间（默认使用 `ZoneId.systemDefault()` 为本地时区）\n- 支持10位秒时间戳\n- 13位毫秒时间戳\n- 通用时间格式: `yyyy-MM-dd HH:mm[:ss][.sss]`\n- ISO-8601 时间格式: `yyyy-MM-ddTHH:mm[:ss][.sss][Z|(+|-)HH:mm]`\n- RFC-3339 时间格式: `yyyy-MM-dd HH:mm[:ss][.sss][Z|(+|-)HH:mm]`\n\n```java\n/**\n * 时间字符串转 LocalDateTime 工具类\n * \n * @author teble\n */\npublic abstract class LocalDateTimeUtils {\n\n    private final static Pattern DATE_TIME_PATTERN = Pattern.compile(\"^\\\\d{4}-\\\\d{2}-\\\\d{2}[T ]\\\\d{2}:\\\\d{2}.*$\");\n\n    private final static ZoneId LOCAL_ZONE_ID = ZoneId.systemDefault();\n\n    private final static DateTimeFormatter LOCAL_DATE_TIME_FORMATTER = new DateTimeFormatterBuilder()\n            .parseCaseInsensitive()\n            .append(ISO_LOCAL_DATE)\n            .optionalStart()\n            .appendLiteral('T')\n            .optionalEnd()\n            .optionalStart()\n            .appendLiteral(' ')\n            .optionalEnd()\n            .append(ISO_LOCAL_TIME)\n            .toFormatter();\n\n    private static boolean isTimestamp(@NonNull String resolver) {\n        for (int i = 0; i < resolver.length(); i++) {\n            char ch = resolver.charAt(i);\n            if (!Character.isDigit(ch)) {\n                return false;\n            }\n        }\n        return resolver.length() == 10 || resolver.length() == 13;\n    }\n\n    private static boolean isOffsetDateTime(@NonNull String resolver) {\n        for (int i = 10; i < resolver.length(); i++) {\n            char ch = resolver.charAt(i);\n            if (ch == 'Z' || ch == '+' || ch == '-') {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private static boolean isZonedDateTime(@NonNull String resolver) {\n        return resolver.endsWith(\"]\");\n    }\n\n    @NonNull\n    private static String getISOTimeStr(@NonNull String resolver) {\n        if (resolver.charAt(10) == ' ') {\n            return resolver.substring(0, 10) + \"T\" + resolver.substring(11);\n        } else {\n            return resolver;\n        }\n    }\n\n    @Nullable\n    public static LocalDateTime convert(@Nullable String resolver) {\n        if (resolver == null) {\n            return null;\n        }\n        if (isTimestamp(resolver)) {\n            Instant instant;\n            if (resolver.length() == 10) {\n                instant = Instant.ofEpochSecond(Long.parseLong(resolver));\n            } else {\n                instant = Instant.ofEpochMilli(Long.parseLong(resolver));\n            }\n            return LocalDateTime.ofInstant(instant, LOCAL_ZONE_ID);\n        }\n        if (DATE_TIME_PATTERN.matcher(resolver).matches()) {\n            // compatibility RFC 3339\n            resolver = getISOTimeStr(resolver);\n            boolean isZoned = isZonedDateTime(resolver);\n            boolean isOffset = isOffsetDateTime(resolver);\n            if (isOffset && isZoned) {\n                return ZonedDateTime.parse(resolver, DateTimeFormatter.ISO_ZONED_DATE_TIME)\n                        .withZoneSameInstant(LOCAL_ZONE_ID)\n                        .toLocalDateTime();\n            } else if (isOffset) {\n                return ZonedDateTime.parse(resolver, DateTimeFormatter.ISO_OFFSET_DATE_TIME)\n                        .withZoneSameInstant(LOCAL_ZONE_ID)\n                        .toLocalDateTime();\n            } else {\n                return LocalDateTime.parse(resolver, LOCAL_DATE_TIME_FORMATTER);\n            }\n        }\n        return null;\n    }\n\n    public static void main(String[] args) {\n        // ISO 8601\n        System.out.println(convert(\"2011-12-03T10:15:30+01:00[Europe/Paris]\"));\n        System.out.println(convert(\"2011-12-03T10:15:30+01:00\"));\n        System.out.println(convert(\"2011-12-03T10:15:30Z\"));\n        // RFC 3339\n        System.out.println(convert(\"2011-12-03 10:15:30.123Z\"));\n        System.out.println(convert(\"2011-12-03 10:15:30.123+01:00\"));\n        // LOCAL TIME\n        System.out.println(convert(\"2011-12-03 10:15:30\"));\n        // TIMESTAMP\n        System.out.println(convert(\"1322819330\"));\n        System.out.println(convert(\"1322819330123\"));\n        // INVALID\n        System.out.println(convert(\"123\"));\n    }\n}\n\n```","slug":"SpringBoot-LocalDateTime-后端接收参数最佳实践","published":1,"updated":"2023-03-01T11:07:18.109Z","_id":"cl7pmazay0000xxsrdz2agr0w","comments":1,"layout":"post","photos":[],"link":"","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css\"><h2 id=\"0x0-LocalDateTime在SpringBoot中的窘境\"><a href=\"#0x0-LocalDateTime在SpringBoot中的窘境\" class=\"headerlink\" title=\"0x0. LocalDateTime在SpringBoot中的窘境\"></a>0x0. LocalDateTime在SpringBoot中的窘境</h2><p><strong>问题由来</strong>：在前不久，我们后台就已经抛弃了Date这个类，而改用了java8提供的LocalDateTime，但是正常情况下LocalDateTime的构造函数是私有的，无法像Date那样直接被spring mvc直接处理，所以带给了我很多困扰，甚至有一次项目急迫致使我直接使用String去对时间进行接收，然后再通过DateTimeFormatter在Controller层对参数进行了一层处理，才能将LocalDateTime传给了Service进行处理，直接导致的结果就是方法变得有点丑陋了（逃~</p>\n<span id=\"more\"></span>\n\n<h2 id=\"0x1-初步解决LocalDateTime作为query参数的问题\"><a href=\"#0x1-初步解决LocalDateTime作为query参数的问题\" class=\"headerlink\" title=\"0x1. 初步解决LocalDateTime作为query参数的问题\"></a>0x1. 初步解决LocalDateTime作为query参数的问题</h2><p>经过多方面查询得知，对于java8时间格式的问题，其实困扰着很多人，网上也提供了很多的解决方案，比如说下面这种在query参数上加注解的方式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestApi</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/time&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> RestInfo <span class=\"title function_\">getTime</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span></span></span><br><span class=\"line\"><span class=\"params\">                            <span class=\"meta\">@DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span></span><br><span class=\"line\"><span class=\"params\">                                LocalDateTime time)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> RestInfo.ok(time);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>请求结果如下：<br><img src=\"https://ae01.alicdn.com/kf/H41b34ac5e5b948be9c5c318d008dec74R.png\" alt=\"请求结果\"></p>\n<p>但是这样造成的后果是严重影响了代码的质量，每个使用LocalDateTime的参数的地方都需要使用两个注解。</p>\n<h2 id=\"0x2-寻找全局解决方式\"><a href=\"#0x2-寻找全局解决方式\" class=\"headerlink\" title=\"0x2. 寻找全局解决方式\"></a>0x2. 寻找全局解决方式</h2><p>接着我又继续尝试了这一种在加了@Configuration的类中使用@Bean注入了一个Convert转换器的方式就是一种很常见的方法（PS：LocalDateTimeUtils是我自己写的一个工具类，后面再提）:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> Converter&lt;String, LocalDateTime&gt; <span class=\"title function_\">localDateTimeConvert</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Converter</span>&lt;String, LocalDateTime&gt;() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> LocalDateTime <span class=\"title function_\">convert</span><span class=\"params\">(String source)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isEmpty(source)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> LocalDateTimeUtils.convert(source.trim());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Controller层代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestApi</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/time&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> RestInfo <span class=\"title function_\">getTime</span><span class=\"params\">(LocalDateTime time)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> RestInfo.ok(time);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>但是我使用过后却并没有得到我想要的效果，出现了报错，这是为什么？<br>得到的报错如下<code>java.lang.IllegalStateException: No primary or default constructor found for class java.time.LocalDateTime</code>，仔细想了一下为什么别人能使用呢，后面才发现自己缺少了一个注解@RequestParam，好的，我这就去加上：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestApi</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/time&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> RestInfo <span class=\"title function_\">getTime</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> LocalDateTime time)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> RestInfo.ok(time);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>请求结果：<br><img src=\"https://ae01.alicdn.com/kf/H58bf0648f70749978e2bfa1ccf130e2e8.png\" alt=\"请求结果\"></p>\n<p>nice！全局方式query也生效了，现在我们来尝试一下使用Model去接收参数：</p>\n<p>TestModel:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestModel</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> LocalDateTime time;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Controller层：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestApi</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/model&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> RestInfo <span class=\"title function_\">getModel</span><span class=\"params\">(TestModel model)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> RestInfo.ok(model);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>请求结果：<br><img src=\"https://ae01.alicdn.com/kf/Hfbf7b43a25aa445ab1fccf243d49241bh.png\"></p>\n<p>嗯，现在已经大致满足要求了，但是对于简洁到了极致的自己来说却依旧不能感到满足，为什么LocalDateTime作为一个属性存在于Model中时却不需要使用注解方式去指定呢？而我们不使用@RequestParam时LocalDateTime却会出现报错？</p>\n<h2 id=\"0x3-深入研究分析参数转换过程\"><a href=\"#0x3-深入研究分析参数转换过程\" class=\"headerlink\" title=\"0x3. 深入研究分析参数转换过程\"></a>0x3. 深入研究分析参数转换过程</h2><p>我们先在先在Controller层下一个断点，然后查看调用堆栈，找到了一个可疑的方法：invokeForRequest<br><img src=\"https://ae01.alicdn.com/kf/Hbed78744be2e49c191d8d2d243d55791s.png\"></p>\n<p>我们点进去看一看：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Nullable</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> Object <span class=\"title function_\">invokeForRequest</span><span class=\"params\">(NativeWebRequest request, <span class=\"meta\">@Nullable</span> ModelAndViewContainer mavContainer,</span></span><br><span class=\"line\"><span class=\"params\">        Object... providedArgs)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 这个方法应该是获取参数的，跟进方法看一下做了什么</span></span><br><span class=\"line\">    Object[] args = getMethodArgumentValues(request, mavContainer, providedArgs);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (logger.isTraceEnabled()) &#123;</span><br><span class=\"line\">        logger.trace(<span class=\"string\">&quot;Arguments: &quot;</span> + Arrays.toString(args));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> doInvoke(args);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> Object[] getMethodArgumentValues(NativeWebRequest request, <span class=\"meta\">@Nullable</span> ModelAndViewContainer mavContainer,</span><br><span class=\"line\">        Object... providedArgs) <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获取方法参数列表</span></span><br><span class=\"line\">    MethodParameter[] parameters = getMethodParameters();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ObjectUtils.isEmpty(parameters)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> EMPTY_ARGS;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Object[] args = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>[parameters.length];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; parameters.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">MethodParameter</span> <span class=\"variable\">parameter</span> <span class=\"operator\">=</span> parameters[i];</span><br><span class=\"line\">        parameter.initParameterNameDiscovery(<span class=\"built_in\">this</span>.parameterNameDiscoverer);</span><br><span class=\"line\">        args[i] = findProvidedArgument(parameter, providedArgs);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (args[i] != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"built_in\">this</span>.resolvers.supportsParameter(parameter)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IllegalStateException</span>(formatArgumentError(parameter, <span class=\"string\">&quot;No suitable resolver&quot;</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 这里应该进行的是参数绑定操作，跟进</span></span><br><span class=\"line\">            args[i] = <span class=\"built_in\">this</span>.resolvers.resolveArgument(parameter, mavContainer, request, <span class=\"built_in\">this</span>.dataBinderFactory);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (Exception ex) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// Leave stack trace for later, exception may actually be resolved and handled...</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">exMsg</span> <span class=\"operator\">=</span> ex.getMessage();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (exMsg != <span class=\"literal\">null</span> &amp;&amp; !exMsg.contains(parameter.getExecutable().toGenericString())) &#123;</span><br><span class=\"line\">                    logger.debug(formatArgumentError(parameter, exMsg));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> ex;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> args;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"meta\">@Nullable</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> Object <span class=\"title function_\">resolveArgument</span><span class=\"params\">(MethodParameter parameter, <span class=\"meta\">@Nullable</span> ModelAndViewContainer mavContainer,</span></span><br><span class=\"line\"><span class=\"params\">        NativeWebRequest webRequest, <span class=\"meta\">@Nullable</span> WebDataBinderFactory binderFactory)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 继续跟进，方法就紧跟在下边</span></span><br><span class=\"line\">    <span class=\"type\">HandlerMethodArgumentResolver</span> <span class=\"variable\">resolver</span> <span class=\"operator\">=</span> getArgumentResolver(parameter);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (resolver == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IllegalArgumentException</span>(<span class=\"string\">&quot;Unsupported parameter type [&quot;</span> +</span><br><span class=\"line\">                parameter.getParameterType().getName() + <span class=\"string\">&quot;]. supportsParameter should be called first.&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> resolver.resolveArgument(parameter, mavContainer, webRequest, binderFactory);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Nullable</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> HandlerMethodArgumentResolver <span class=\"title function_\">getArgumentResolver</span><span class=\"params\">(MethodParameter parameter)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 在springboot 2.2.0 时这里会直接将LocalDateTime的解析器确定为RequestParamMethodArgumentResolver</span></span><br><span class=\"line\">    <span class=\"type\">HandlerMethodArgumentResolver</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.argumentResolverCache.get(parameter);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (result == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 这里argumentResolvers是注册的参数解析器列表</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (HandlerMethodArgumentResolver resolver : <span class=\"built_in\">this</span>.argumentResolvers) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (resolver.supportsParameter(parameter)) &#123;</span><br><span class=\"line\">                result = resolver;</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.argumentResolverCache.put(parameter, result);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>我们展开参数解析器的列表：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this.argumentResolvers = &#123;LinkedList@6957&#125;  size = 26</span><br><span class=\"line\"> 0 = &#123;RequestParamMethodArgumentResolver@6959&#125; </span><br><span class=\"line\"> 1 = &#123;RequestParamMapMethodArgumentResolver@7055&#125; </span><br><span class=\"line\"> 2 = &#123;PathVariableMethodArgumentResolver@7056&#125; </span><br><span class=\"line\"> 3 = &#123;PathVariableMapMethodArgumentResolver@7057&#125; </span><br><span class=\"line\"> 4 = &#123;MatrixVariableMethodArgumentResolver@7058&#125; </span><br><span class=\"line\"> 5 = &#123;MatrixVariableMapMethodArgumentResolver@7059&#125; </span><br><span class=\"line\"> 6 = &#123;ServletModelAttributeMethodProcessor@7060&#125; </span><br><span class=\"line\"> 7 = &#123;RequestResponseBodyMethodProcessor@7061&#125; </span><br><span class=\"line\"> 8 = &#123;RequestPartMethodArgumentResolver@7062&#125; </span><br><span class=\"line\"> 9 = &#123;RequestHeaderMethodArgumentResolver@7063&#125; </span><br><span class=\"line\"> 10 = &#123;RequestHeaderMapMethodArgumentResolver@7064&#125; </span><br><span class=\"line\"> 11 = &#123;ServletCookieValueMethodArgumentResolver@7065&#125; </span><br><span class=\"line\"> 12 = &#123;ExpressionValueMethodArgumentResolver@7066&#125; </span><br><span class=\"line\"> 13 = &#123;SessionAttributeMethodArgumentResolver@7067&#125; </span><br><span class=\"line\"> 14 = &#123;RequestAttributeMethodArgumentResolver@7068&#125; </span><br><span class=\"line\"> 15 = &#123;ServletRequestMethodArgumentResolver@7069&#125; </span><br><span class=\"line\"> 16 = &#123;ServletResponseMethodArgumentResolver@7070&#125; </span><br><span class=\"line\"> 17 = &#123;HttpEntityMethodProcessor@7071&#125; </span><br><span class=\"line\"> 18 = &#123;RedirectAttributesMethodArgumentResolver@7072&#125; </span><br><span class=\"line\"> 19 = &#123;ModelMethodProcessor@7073&#125; </span><br><span class=\"line\"> 20 = &#123;MapMethodProcessor@7074&#125; </span><br><span class=\"line\"> 21 = &#123;ErrorsMethodArgumentResolver@7075&#125; </span><br><span class=\"line\"> 22 = &#123;SessionStatusMethodArgumentResolver@7076&#125; </span><br><span class=\"line\"> 23 = &#123;UriComponentsBuilderMethodArgumentResolver@7077&#125; </span><br><span class=\"line\"> 24 = &#123;RequestParamMethodArgumentResolver@7078&#125; </span><br><span class=\"line\"> 25 = &#123;ServletModelAttributeMethodProcessor@7079&#125; </span><br></pre></td></tr></table></figure>\n\n<p>是不是看到了几个看着很眼熟的东西？<code>RequestParam</code>,<code>PathVariable</code>,<code>RequestBody</code>，在idea中查找RequestParamMethodArgumentResolver类，进入他的方法看一下，</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">supportsParameter</span><span class=\"params\">(MethodParameter parameter)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (parameter.hasParameterAnnotation(RequestParam.class)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Map.class.isAssignableFrom(parameter.nestedIfOptional().getNestedParameterType())) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// RequestParam眼熟不，getParameterAnnotation，对应的就是@RequestParam注解</span></span><br><span class=\"line\">            <span class=\"type\">RequestParam</span> <span class=\"variable\">requestParam</span> <span class=\"operator\">=</span> parameter.getParameterAnnotation(RequestParam.class);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (requestParam != <span class=\"literal\">null</span> &amp;&amp; StringUtils.hasText(requestParam.name()));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (parameter.hasParameterAnnotation(RequestPart.class)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        parameter = parameter.nestedIfOptional();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (MultipartResolutionDelegate.isMultipartArgument(parameter)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.useDefaultResolution) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> BeanUtils.isSimpleProperty(parameter.getNestedParameterType());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里可以基本确定一件事，在我这测试时默认的参数解析器有26个，每个参数解析器有着各自的用途，比如加了@RequestParam注解的参数会被RequestParamMethodArgumentResolver所解析，然后再查找类型有无相应的Convert转换器，在我们这里使用@Bean注入了一个Convert转换器，所以LocalDateTime能被正确的解析。</p>\n<p>那么我们之前不加@RequestParam直接使用LocalDateTime作为参数的时候是被哪个解析器所捕获的呢，方法已经找到了，那么直接下个断点跑一遍查看result返回的是哪个解析器就知道了！<br><img src=\"https://ae01.alicdn.com/kf/H9dadf5167f2c4916b892b073f713c112B.png\"></p>\n<p>如果没记错ServletModelAttributeMethodProcessor是参数解析器的最后一个，我们进入到这个类看一眼，没有supportsParameter方法，但是他继承了ModelAttributeMethodProcessor，我们再进入他的父类中：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">supportsParameter</span><span class=\"params\">(MethodParameter parameter)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (parameter.hasParameterAnnotation(ModelAttribute.class) ||</span><br><span class=\"line\">            (<span class=\"built_in\">this</span>.annotationNotRequired &amp;&amp; !BeanUtils.isSimpleProperty(parameter.getParameterType())));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>对于没有指定参数解析器的参数来说，默认指定的参数解析器是ModelAttributeMethodProcessor，并且由源码得知，如果加了@ModelAttribute注解，或者非简单属性则会被该解析器捕获，所以我们平时所使用的model去接收不需要加注解即可被正确的解析，既然都来了，那么顺便看一下resolveArgument方法是怎么解析参数的</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"meta\">@Nullable</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> Object <span class=\"title function_\">resolveArgument</span><span class=\"params\">(MethodParameter parameter, <span class=\"meta\">@Nullable</span> ModelAndViewContainer mavContainer,</span></span><br><span class=\"line\"><span class=\"params\">        NativeWebRequest webRequest, <span class=\"meta\">@Nullable</span> WebDataBinderFactory binderFactory)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (mavContainer.containsAttribute(name)) &#123;</span><br><span class=\"line\">        attribute = mavContainer.getModel().get(name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Create attribute instance</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 这里是对参数的绑定构建了，点进去看一眼</span></span><br><span class=\"line\">            attribute = createAttribute(name, parameter, binderFactory, webRequest);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (BindException ex) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (isBindExceptionRequired(parameter)) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// No BindingResult parameter -&gt; fail with BindException</span></span><br><span class=\"line\">                <span class=\"keyword\">throw</span> ex;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// Otherwise, expose null/empty value and associated BindingResult</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (parameter.getParameterType() == Optional.class) &#123;</span><br><span class=\"line\">                attribute = Optional.empty();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            bindingResult = ex.getBindingResult();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>继续跟进createAttribute方法，看看他是怎么将值绑定给对象的：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> Object <span class=\"title function_\">createAttribute</span><span class=\"params\">(String attributeName, MethodParameter parameter,</span></span><br><span class=\"line\"><span class=\"params\">        WebDataBinderFactory binderFactory, NativeWebRequest webRequest)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">MethodParameter</span> <span class=\"variable\">nestedParameter</span> <span class=\"operator\">=</span> parameter.nestedIfOptional();</span><br><span class=\"line\">    Class&lt;?&gt; clazz = nestedParameter.getNestedParameterType();</span><br><span class=\"line\"></span><br><span class=\"line\">    Constructor&lt;?&gt; ctor = BeanUtils.findPrimaryConstructor(clazz);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ctor == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        Constructor&lt;?&gt;[] ctors = clazz.getConstructors();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ctors.length == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            ctor = ctors[<span class=\"number\">0</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                ctor = clazz.getDeclaredConstructor();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span> (NoSuchMethodException ex) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IllegalStateException</span>(<span class=\"string\">&quot;No primary or default constructor found for &quot;</span> + clazz, ex);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">Object</span> <span class=\"variable\">attribute</span> <span class=\"operator\">=</span> constructAttribute(ctor, attributeName, parameter, binderFactory, webRequest);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (parameter != nestedParameter) &#123;</span><br><span class=\"line\">        attribute = Optional.of(attribute);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> attribute;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>看到这里是不是发现报错的地方有点熟悉？这就是我们之前LocalDateTime抛出异常的地方了，可以得知对于对象的绑定，先通过BeanUtils获取主要的构造函数，如果获取不到，则使用反射的方式先尝试获取声明为public的无参构造函数，最后才会尝试使用getDeclaredConstructor获取所有的无参构造函数，但是对于LocalDateTime这种使用工厂构造不存在无参构造函数的类来说就会直接抛出NoSuchMethodException异常。那么如果我们不想使用@RequestParam注解加在参数上怎么办呢？</p>\n<h2 id=\"0x4-创建参数解析器\"><a href=\"#0x4-创建参数解析器\" class=\"headerlink\" title=\"0x4. 创建参数解析器\"></a>0x4. 创建参数解析器</h2><p>如果我们不希望在LocalDateTime上增加注解，然后再通过RequestParamMethodArgumentResolver解析，我们可以自己定制一种针对LocalDateTime的参数解析器，通过继承WebMvcConfigurer重写addArgumentResolvers方法，然后add一个自定义的HandlerMethodArgumentResolver即可解决刚才的问题，但是在2.2.0版本上会自动指定LocalDateTime的解析器原因未知（我太蔡了…找不到是怎么做到的，想看看他是怎么获取的，但是发现那个方法再无限调用，完全没有头绪。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MvcConfig</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">WebMvcConfigurer</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 增加 &#123;<span class=\"doctag\">@link</span> LocalDateTime&#125; 的自定义参数解析器，不需要用注解方式指定query参数即可解析</span></span><br><span class=\"line\"><span class=\"comment\">     * 2.2.0版本后较大改变，自动确定LocalDateTime解析器为 &#123;<span class=\"doctag\">@link</span></span></span><br><span class=\"line\"><span class=\"comment\">     * org.springframework.web.method.annotation.RequestParamMethodArgumentResolver&#125;</span></span><br><span class=\"line\"><span class=\"comment\">     * 但是依旧可以注册使用本解析器</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addArgumentResolvers</span><span class=\"params\">(List&lt;HandlerMethodArgumentResolver&gt; resolvers)</span> &#123;</span><br><span class=\"line\">        resolvers.add(<span class=\"keyword\">new</span> <span class=\"title class_\">LocalDateArgumentResolverHandler</span>());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LocalDateArgumentResolverHandler</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">HandlerMethodArgumentResolver</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">supportsParameter</span><span class=\"params\">(MethodParameter parameter)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> parameter.getParameterType().equals(LocalDateTime.class);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> Object <span class=\"title function_\">resolveArgument</span><span class=\"params\">(MethodParameter parameter, ModelAndViewContainer mavContainer,</span></span><br><span class=\"line\"><span class=\"params\">                                      NativeWebRequest webRequest, WebDataBinderFactory binderFactory)</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">param</span> <span class=\"operator\">=</span> webRequest.getParameter(Objects.requireNonNull(parameter.getParameterName()));</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isEmpty(param)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> LocalDateTimeUtils.convert(param.trim());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x5-推荐使用注册Convert的方式\"><a href=\"#0x5-推荐使用注册Convert的方式\" class=\"headerlink\" title=\"0x5. 推荐使用注册Convert的方式\"></a>0x5. 推荐使用注册Convert的方式</h2><p>相比于注入@Bean的方式创建Convert的方式，我个人更喜欢使用继承WebMvcConfigurer后重写addFormatters方法来注册自定义Convert。这种方式相比于@Bean注入，更容易让人理解，代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MvcConfig</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">WebMvcConfigurer</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addFormatters</span><span class=\"params\">(FormatterRegistry registry)</span> &#123;</span><br><span class=\"line\">        registry.addConverter(<span class=\"keyword\">new</span> <span class=\"title class_\">LocalDateTimeConverter</span>());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LocalDateTimeConverter</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Converter</span>&lt;String, LocalDateTime&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> LocalDateTime <span class=\"title function_\">convert</span><span class=\"params\">(String source)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isEmpty(source)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> LocalDateTimeUtils.convert(source.trim());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x6-小结\"><a href=\"#0x6-小结\" class=\"headerlink\" title=\"0x6. 小结\"></a>0x6. 小结</h2><p>对于request参数其实还有initBinder，Formatter等方式进行处理，这里就不一一贴出来了，有兴趣的各位可以在网上查询相关资料。还有jackson相关的序列化，通过继承com.fasterxml.jackson.databind.JsonDeserializer和com.fasterxml.jackson.databind.JsonSerializer生成自定义的Jackson Deserializer和Serializer，然后在@Configuration注解的配置类内注入@Bean将Jackson Module注册为@Bean，SpringBoot会自动注入进ObjectMapper中。另一种方式是自己注入一个自己定制的ObjectMapper为@Bean，然后将Module注入进ObjectMapper中。甚至可以通过定制转换规则，从而使类型支持多种参数。</p>\n<h2 id=\"0xf-附录\"><a href=\"#0xf-附录\" class=\"headerlink\" title=\"0xf. 附录\"></a>0xf. 附录</h2><p>时间字符串转 LocalDateTime 工具类。转换不同时区的时间为本地时间（默认使用 <code>ZoneId.systemDefault()</code> 为本地时区）</p>\n<ul>\n<li>支持10位秒时间戳</li>\n<li>13位毫秒时间戳</li>\n<li>通用时间格式: <code>yyyy-MM-dd HH:mm[:ss][.sss]</code></li>\n<li>ISO-8601 时间格式: <code>yyyy-MM-ddTHH:mm[:ss][.sss][Z|(+|-)HH:mm]</code></li>\n<li>RFC-3339 时间格式: <code>yyyy-MM-dd HH:mm[:ss][.sss][Z|(+|-)HH:mm]</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 时间字符串转 LocalDateTime 工具类</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> teble</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LocalDateTimeUtils</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"type\">Pattern</span> <span class=\"variable\">DATE_TIME_PATTERN</span> <span class=\"operator\">=</span> Pattern.compile(<span class=\"string\">&quot;^\\\\d&#123;4&#125;-\\\\d&#123;2&#125;-\\\\d&#123;2&#125;[T ]\\\\d&#123;2&#125;:\\\\d&#123;2&#125;.*$&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"type\">ZoneId</span> <span class=\"variable\">LOCAL_ZONE_ID</span> <span class=\"operator\">=</span> ZoneId.systemDefault();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"type\">DateTimeFormatter</span> <span class=\"variable\">LOCAL_DATE_TIME_FORMATTER</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DateTimeFormatterBuilder</span>()</span><br><span class=\"line\">            .parseCaseInsensitive()</span><br><span class=\"line\">            .append(ISO_LOCAL_DATE)</span><br><span class=\"line\">            .optionalStart()</span><br><span class=\"line\">            .appendLiteral(<span class=\"string\">&#x27;T&#x27;</span>)</span><br><span class=\"line\">            .optionalEnd()</span><br><span class=\"line\">            .optionalStart()</span><br><span class=\"line\">            .appendLiteral(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">            .optionalEnd()</span><br><span class=\"line\">            .append(ISO_LOCAL_TIME)</span><br><span class=\"line\">            .toFormatter();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isTimestamp</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> String resolver)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; resolver.length(); i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">char</span> <span class=\"variable\">ch</span> <span class=\"operator\">=</span> resolver.charAt(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!Character.isDigit(ch)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resolver.length() == <span class=\"number\">10</span> || resolver.length() == <span class=\"number\">13</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isOffsetDateTime</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> String resolver)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>; i &lt; resolver.length(); i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">char</span> <span class=\"variable\">ch</span> <span class=\"operator\">=</span> resolver.charAt(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ch == <span class=\"string\">&#x27;Z&#x27;</span> || ch == <span class=\"string\">&#x27;+&#x27;</span> || ch == <span class=\"string\">&#x27;-&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isZonedDateTime</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> String resolver)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resolver.endsWith(<span class=\"string\">&quot;]&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">getISOTimeStr</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> String resolver)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (resolver.charAt(<span class=\"number\">10</span>) == <span class=\"string\">&#x27; &#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> resolver.substring(<span class=\"number\">0</span>, <span class=\"number\">10</span>) + <span class=\"string\">&quot;T&quot;</span> + resolver.substring(<span class=\"number\">11</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> resolver;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Nullable</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LocalDateTime <span class=\"title function_\">convert</span><span class=\"params\">(<span class=\"meta\">@Nullable</span> String resolver)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (resolver == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isTimestamp(resolver)) &#123;</span><br><span class=\"line\">            Instant instant;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (resolver.length() == <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">                instant = Instant.ofEpochSecond(Long.parseLong(resolver));</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                instant = Instant.ofEpochMilli(Long.parseLong(resolver));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> LocalDateTime.ofInstant(instant, LOCAL_ZONE_ID);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (DATE_TIME_PATTERN.matcher(resolver).matches()) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// compatibility RFC 3339</span></span><br><span class=\"line\">            resolver = getISOTimeStr(resolver);</span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">isZoned</span> <span class=\"operator\">=</span> isZonedDateTime(resolver);</span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">isOffset</span> <span class=\"operator\">=</span> isOffsetDateTime(resolver);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (isOffset &amp;&amp; isZoned) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> ZonedDateTime.parse(resolver, DateTimeFormatter.ISO_ZONED_DATE_TIME)</span><br><span class=\"line\">                        .withZoneSameInstant(LOCAL_ZONE_ID)</span><br><span class=\"line\">                        .toLocalDateTime();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (isOffset) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> ZonedDateTime.parse(resolver, DateTimeFormatter.ISO_OFFSET_DATE_TIME)</span><br><span class=\"line\">                        .withZoneSameInstant(LOCAL_ZONE_ID)</span><br><span class=\"line\">                        .toLocalDateTime();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> LocalDateTime.parse(resolver, LOCAL_DATE_TIME_FORMATTER);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// ISO 8601</span></span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;2011-12-03T10:15:30+01:00[Europe/Paris]&quot;</span>));</span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;2011-12-03T10:15:30+01:00&quot;</span>));</span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;2011-12-03T10:15:30Z&quot;</span>));</span><br><span class=\"line\">        <span class=\"comment\">// RFC 3339</span></span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;2011-12-03 10:15:30.123Z&quot;</span>));</span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;2011-12-03 10:15:30.123+01:00&quot;</span>));</span><br><span class=\"line\">        <span class=\"comment\">// LOCAL TIME</span></span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;2011-12-03 10:15:30&quot;</span>));</span><br><span class=\"line\">        <span class=\"comment\">// TIMESTAMP</span></span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;1322819330&quot;</span>));</span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;1322819330123&quot;</span>));</span><br><span class=\"line\">        <span class=\"comment\">// INVALID</span></span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;123&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"0x0-LocalDateTime在SpringBoot中的窘境\"><a href=\"#0x0-LocalDateTime在SpringBoot中的窘境\" class=\"headerlink\" title=\"0x0. LocalDateTime在SpringBoot中的窘境\"></a>0x0. LocalDateTime在SpringBoot中的窘境</h2><p><strong>问题由来</strong>：在前不久，我们后台就已经抛弃了Date这个类，而改用了java8提供的LocalDateTime，但是正常情况下LocalDateTime的构造函数是私有的，无法像Date那样直接被spring mvc直接处理，所以带给了我很多困扰，甚至有一次项目急迫致使我直接使用String去对时间进行接收，然后再通过DateTimeFormatter在Controller层对参数进行了一层处理，才能将LocalDateTime传给了Service进行处理，直接导致的结果就是方法变得有点丑陋了（逃~</p>","more":"<h2 id=\"0x1-初步解决LocalDateTime作为query参数的问题\"><a href=\"#0x1-初步解决LocalDateTime作为query参数的问题\" class=\"headerlink\" title=\"0x1. 初步解决LocalDateTime作为query参数的问题\"></a>0x1. 初步解决LocalDateTime作为query参数的问题</h2><p>经过多方面查询得知，对于java8时间格式的问题，其实困扰着很多人，网上也提供了很多的解决方案，比如说下面这种在query参数上加注解的方式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestApi</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/time&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> RestInfo <span class=\"title function_\">getTime</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span></span></span><br><span class=\"line\"><span class=\"params\">                            <span class=\"meta\">@DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span></span><br><span class=\"line\"><span class=\"params\">                                LocalDateTime time)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> RestInfo.ok(time);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>请求结果如下：<br><img src=\"https://ae01.alicdn.com/kf/H41b34ac5e5b948be9c5c318d008dec74R.png\" alt=\"请求结果\"></p>\n<p>但是这样造成的后果是严重影响了代码的质量，每个使用LocalDateTime的参数的地方都需要使用两个注解。</p>\n<h2 id=\"0x2-寻找全局解决方式\"><a href=\"#0x2-寻找全局解决方式\" class=\"headerlink\" title=\"0x2. 寻找全局解决方式\"></a>0x2. 寻找全局解决方式</h2><p>接着我又继续尝试了这一种在加了@Configuration的类中使用@Bean注入了一个Convert转换器的方式就是一种很常见的方法（PS：LocalDateTimeUtils是我自己写的一个工具类，后面再提）:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> Converter&lt;String, LocalDateTime&gt; <span class=\"title function_\">localDateTimeConvert</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Converter</span>&lt;String, LocalDateTime&gt;() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> LocalDateTime <span class=\"title function_\">convert</span><span class=\"params\">(String source)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isEmpty(source)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> LocalDateTimeUtils.convert(source.trim());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Controller层代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestApi</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/time&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> RestInfo <span class=\"title function_\">getTime</span><span class=\"params\">(LocalDateTime time)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> RestInfo.ok(time);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>但是我使用过后却并没有得到我想要的效果，出现了报错，这是为什么？<br>得到的报错如下<code>java.lang.IllegalStateException: No primary or default constructor found for class java.time.LocalDateTime</code>，仔细想了一下为什么别人能使用呢，后面才发现自己缺少了一个注解@RequestParam，好的，我这就去加上：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestApi</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/time&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> RestInfo <span class=\"title function_\">getTime</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> LocalDateTime time)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> RestInfo.ok(time);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>请求结果：<br><img src=\"https://ae01.alicdn.com/kf/H58bf0648f70749978e2bfa1ccf130e2e8.png\" alt=\"请求结果\"></p>\n<p>nice！全局方式query也生效了，现在我们来尝试一下使用Model去接收参数：</p>\n<p>TestModel:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestModel</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> LocalDateTime time;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Controller层：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/api&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestApi</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/model&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> RestInfo <span class=\"title function_\">getModel</span><span class=\"params\">(TestModel model)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> RestInfo.ok(model);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>请求结果：<br><img src=\"https://ae01.alicdn.com/kf/Hfbf7b43a25aa445ab1fccf243d49241bh.png\"></p>\n<p>嗯，现在已经大致满足要求了，但是对于简洁到了极致的自己来说却依旧不能感到满足，为什么LocalDateTime作为一个属性存在于Model中时却不需要使用注解方式去指定呢？而我们不使用@RequestParam时LocalDateTime却会出现报错？</p>\n<h2 id=\"0x3-深入研究分析参数转换过程\"><a href=\"#0x3-深入研究分析参数转换过程\" class=\"headerlink\" title=\"0x3. 深入研究分析参数转换过程\"></a>0x3. 深入研究分析参数转换过程</h2><p>我们先在先在Controller层下一个断点，然后查看调用堆栈，找到了一个可疑的方法：invokeForRequest<br><img src=\"https://ae01.alicdn.com/kf/Hbed78744be2e49c191d8d2d243d55791s.png\"></p>\n<p>我们点进去看一看：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Nullable</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> Object <span class=\"title function_\">invokeForRequest</span><span class=\"params\">(NativeWebRequest request, <span class=\"meta\">@Nullable</span> ModelAndViewContainer mavContainer,</span></span><br><span class=\"line\"><span class=\"params\">        Object... providedArgs)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 这个方法应该是获取参数的，跟进方法看一下做了什么</span></span><br><span class=\"line\">    Object[] args = getMethodArgumentValues(request, mavContainer, providedArgs);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (logger.isTraceEnabled()) &#123;</span><br><span class=\"line\">        logger.trace(<span class=\"string\">&quot;Arguments: &quot;</span> + Arrays.toString(args));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> doInvoke(args);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> Object[] getMethodArgumentValues(NativeWebRequest request, <span class=\"meta\">@Nullable</span> ModelAndViewContainer mavContainer,</span><br><span class=\"line\">        Object... providedArgs) <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获取方法参数列表</span></span><br><span class=\"line\">    MethodParameter[] parameters = getMethodParameters();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ObjectUtils.isEmpty(parameters)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> EMPTY_ARGS;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Object[] args = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>[parameters.length];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; parameters.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">MethodParameter</span> <span class=\"variable\">parameter</span> <span class=\"operator\">=</span> parameters[i];</span><br><span class=\"line\">        parameter.initParameterNameDiscovery(<span class=\"built_in\">this</span>.parameterNameDiscoverer);</span><br><span class=\"line\">        args[i] = findProvidedArgument(parameter, providedArgs);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (args[i] != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"built_in\">this</span>.resolvers.supportsParameter(parameter)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IllegalStateException</span>(formatArgumentError(parameter, <span class=\"string\">&quot;No suitable resolver&quot;</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 这里应该进行的是参数绑定操作，跟进</span></span><br><span class=\"line\">            args[i] = <span class=\"built_in\">this</span>.resolvers.resolveArgument(parameter, mavContainer, request, <span class=\"built_in\">this</span>.dataBinderFactory);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (Exception ex) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// Leave stack trace for later, exception may actually be resolved and handled...</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">exMsg</span> <span class=\"operator\">=</span> ex.getMessage();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (exMsg != <span class=\"literal\">null</span> &amp;&amp; !exMsg.contains(parameter.getExecutable().toGenericString())) &#123;</span><br><span class=\"line\">                    logger.debug(formatArgumentError(parameter, exMsg));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> ex;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> args;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"meta\">@Nullable</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> Object <span class=\"title function_\">resolveArgument</span><span class=\"params\">(MethodParameter parameter, <span class=\"meta\">@Nullable</span> ModelAndViewContainer mavContainer,</span></span><br><span class=\"line\"><span class=\"params\">        NativeWebRequest webRequest, <span class=\"meta\">@Nullable</span> WebDataBinderFactory binderFactory)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 继续跟进，方法就紧跟在下边</span></span><br><span class=\"line\">    <span class=\"type\">HandlerMethodArgumentResolver</span> <span class=\"variable\">resolver</span> <span class=\"operator\">=</span> getArgumentResolver(parameter);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (resolver == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IllegalArgumentException</span>(<span class=\"string\">&quot;Unsupported parameter type [&quot;</span> +</span><br><span class=\"line\">                parameter.getParameterType().getName() + <span class=\"string\">&quot;]. supportsParameter should be called first.&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> resolver.resolveArgument(parameter, mavContainer, webRequest, binderFactory);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Nullable</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> HandlerMethodArgumentResolver <span class=\"title function_\">getArgumentResolver</span><span class=\"params\">(MethodParameter parameter)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 在springboot 2.2.0 时这里会直接将LocalDateTime的解析器确定为RequestParamMethodArgumentResolver</span></span><br><span class=\"line\">    <span class=\"type\">HandlerMethodArgumentResolver</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.argumentResolverCache.get(parameter);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (result == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 这里argumentResolvers是注册的参数解析器列表</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (HandlerMethodArgumentResolver resolver : <span class=\"built_in\">this</span>.argumentResolvers) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (resolver.supportsParameter(parameter)) &#123;</span><br><span class=\"line\">                result = resolver;</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.argumentResolverCache.put(parameter, result);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>我们展开参数解析器的列表：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this.argumentResolvers = &#123;LinkedList@6957&#125;  size = 26</span><br><span class=\"line\"> 0 = &#123;RequestParamMethodArgumentResolver@6959&#125; </span><br><span class=\"line\"> 1 = &#123;RequestParamMapMethodArgumentResolver@7055&#125; </span><br><span class=\"line\"> 2 = &#123;PathVariableMethodArgumentResolver@7056&#125; </span><br><span class=\"line\"> 3 = &#123;PathVariableMapMethodArgumentResolver@7057&#125; </span><br><span class=\"line\"> 4 = &#123;MatrixVariableMethodArgumentResolver@7058&#125; </span><br><span class=\"line\"> 5 = &#123;MatrixVariableMapMethodArgumentResolver@7059&#125; </span><br><span class=\"line\"> 6 = &#123;ServletModelAttributeMethodProcessor@7060&#125; </span><br><span class=\"line\"> 7 = &#123;RequestResponseBodyMethodProcessor@7061&#125; </span><br><span class=\"line\"> 8 = &#123;RequestPartMethodArgumentResolver@7062&#125; </span><br><span class=\"line\"> 9 = &#123;RequestHeaderMethodArgumentResolver@7063&#125; </span><br><span class=\"line\"> 10 = &#123;RequestHeaderMapMethodArgumentResolver@7064&#125; </span><br><span class=\"line\"> 11 = &#123;ServletCookieValueMethodArgumentResolver@7065&#125; </span><br><span class=\"line\"> 12 = &#123;ExpressionValueMethodArgumentResolver@7066&#125; </span><br><span class=\"line\"> 13 = &#123;SessionAttributeMethodArgumentResolver@7067&#125; </span><br><span class=\"line\"> 14 = &#123;RequestAttributeMethodArgumentResolver@7068&#125; </span><br><span class=\"line\"> 15 = &#123;ServletRequestMethodArgumentResolver@7069&#125; </span><br><span class=\"line\"> 16 = &#123;ServletResponseMethodArgumentResolver@7070&#125; </span><br><span class=\"line\"> 17 = &#123;HttpEntityMethodProcessor@7071&#125; </span><br><span class=\"line\"> 18 = &#123;RedirectAttributesMethodArgumentResolver@7072&#125; </span><br><span class=\"line\"> 19 = &#123;ModelMethodProcessor@7073&#125; </span><br><span class=\"line\"> 20 = &#123;MapMethodProcessor@7074&#125; </span><br><span class=\"line\"> 21 = &#123;ErrorsMethodArgumentResolver@7075&#125; </span><br><span class=\"line\"> 22 = &#123;SessionStatusMethodArgumentResolver@7076&#125; </span><br><span class=\"line\"> 23 = &#123;UriComponentsBuilderMethodArgumentResolver@7077&#125; </span><br><span class=\"line\"> 24 = &#123;RequestParamMethodArgumentResolver@7078&#125; </span><br><span class=\"line\"> 25 = &#123;ServletModelAttributeMethodProcessor@7079&#125; </span><br></pre></td></tr></table></figure>\n\n<p>是不是看到了几个看着很眼熟的东西？<code>RequestParam</code>,<code>PathVariable</code>,<code>RequestBody</code>，在idea中查找RequestParamMethodArgumentResolver类，进入他的方法看一下，</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">supportsParameter</span><span class=\"params\">(MethodParameter parameter)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (parameter.hasParameterAnnotation(RequestParam.class)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Map.class.isAssignableFrom(parameter.nestedIfOptional().getNestedParameterType())) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// RequestParam眼熟不，getParameterAnnotation，对应的就是@RequestParam注解</span></span><br><span class=\"line\">            <span class=\"type\">RequestParam</span> <span class=\"variable\">requestParam</span> <span class=\"operator\">=</span> parameter.getParameterAnnotation(RequestParam.class);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (requestParam != <span class=\"literal\">null</span> &amp;&amp; StringUtils.hasText(requestParam.name()));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (parameter.hasParameterAnnotation(RequestPart.class)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        parameter = parameter.nestedIfOptional();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (MultipartResolutionDelegate.isMultipartArgument(parameter)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.useDefaultResolution) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> BeanUtils.isSimpleProperty(parameter.getNestedParameterType());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里可以基本确定一件事，在我这测试时默认的参数解析器有26个，每个参数解析器有着各自的用途，比如加了@RequestParam注解的参数会被RequestParamMethodArgumentResolver所解析，然后再查找类型有无相应的Convert转换器，在我们这里使用@Bean注入了一个Convert转换器，所以LocalDateTime能被正确的解析。</p>\n<p>那么我们之前不加@RequestParam直接使用LocalDateTime作为参数的时候是被哪个解析器所捕获的呢，方法已经找到了，那么直接下个断点跑一遍查看result返回的是哪个解析器就知道了！<br><img src=\"https://ae01.alicdn.com/kf/H9dadf5167f2c4916b892b073f713c112B.png\"></p>\n<p>如果没记错ServletModelAttributeMethodProcessor是参数解析器的最后一个，我们进入到这个类看一眼，没有supportsParameter方法，但是他继承了ModelAttributeMethodProcessor，我们再进入他的父类中：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">supportsParameter</span><span class=\"params\">(MethodParameter parameter)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (parameter.hasParameterAnnotation(ModelAttribute.class) ||</span><br><span class=\"line\">            (<span class=\"built_in\">this</span>.annotationNotRequired &amp;&amp; !BeanUtils.isSimpleProperty(parameter.getParameterType())));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>对于没有指定参数解析器的参数来说，默认指定的参数解析器是ModelAttributeMethodProcessor，并且由源码得知，如果加了@ModelAttribute注解，或者非简单属性则会被该解析器捕获，所以我们平时所使用的model去接收不需要加注解即可被正确的解析，既然都来了，那么顺便看一下resolveArgument方法是怎么解析参数的</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"meta\">@Nullable</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> Object <span class=\"title function_\">resolveArgument</span><span class=\"params\">(MethodParameter parameter, <span class=\"meta\">@Nullable</span> ModelAndViewContainer mavContainer,</span></span><br><span class=\"line\"><span class=\"params\">        NativeWebRequest webRequest, <span class=\"meta\">@Nullable</span> WebDataBinderFactory binderFactory)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (mavContainer.containsAttribute(name)) &#123;</span><br><span class=\"line\">        attribute = mavContainer.getModel().get(name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Create attribute instance</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 这里是对参数的绑定构建了，点进去看一眼</span></span><br><span class=\"line\">            attribute = createAttribute(name, parameter, binderFactory, webRequest);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (BindException ex) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (isBindExceptionRequired(parameter)) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// No BindingResult parameter -&gt; fail with BindException</span></span><br><span class=\"line\">                <span class=\"keyword\">throw</span> ex;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// Otherwise, expose null/empty value and associated BindingResult</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (parameter.getParameterType() == Optional.class) &#123;</span><br><span class=\"line\">                attribute = Optional.empty();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            bindingResult = ex.getBindingResult();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>继续跟进createAttribute方法，看看他是怎么将值绑定给对象的：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> Object <span class=\"title function_\">createAttribute</span><span class=\"params\">(String attributeName, MethodParameter parameter,</span></span><br><span class=\"line\"><span class=\"params\">        WebDataBinderFactory binderFactory, NativeWebRequest webRequest)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">MethodParameter</span> <span class=\"variable\">nestedParameter</span> <span class=\"operator\">=</span> parameter.nestedIfOptional();</span><br><span class=\"line\">    Class&lt;?&gt; clazz = nestedParameter.getNestedParameterType();</span><br><span class=\"line\"></span><br><span class=\"line\">    Constructor&lt;?&gt; ctor = BeanUtils.findPrimaryConstructor(clazz);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (ctor == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        Constructor&lt;?&gt;[] ctors = clazz.getConstructors();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ctors.length == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            ctor = ctors[<span class=\"number\">0</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                ctor = clazz.getDeclaredConstructor();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span> (NoSuchMethodException ex) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IllegalStateException</span>(<span class=\"string\">&quot;No primary or default constructor found for &quot;</span> + clazz, ex);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">Object</span> <span class=\"variable\">attribute</span> <span class=\"operator\">=</span> constructAttribute(ctor, attributeName, parameter, binderFactory, webRequest);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (parameter != nestedParameter) &#123;</span><br><span class=\"line\">        attribute = Optional.of(attribute);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> attribute;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>看到这里是不是发现报错的地方有点熟悉？这就是我们之前LocalDateTime抛出异常的地方了，可以得知对于对象的绑定，先通过BeanUtils获取主要的构造函数，如果获取不到，则使用反射的方式先尝试获取声明为public的无参构造函数，最后才会尝试使用getDeclaredConstructor获取所有的无参构造函数，但是对于LocalDateTime这种使用工厂构造不存在无参构造函数的类来说就会直接抛出NoSuchMethodException异常。那么如果我们不想使用@RequestParam注解加在参数上怎么办呢？</p>\n<h2 id=\"0x4-创建参数解析器\"><a href=\"#0x4-创建参数解析器\" class=\"headerlink\" title=\"0x4. 创建参数解析器\"></a>0x4. 创建参数解析器</h2><p>如果我们不希望在LocalDateTime上增加注解，然后再通过RequestParamMethodArgumentResolver解析，我们可以自己定制一种针对LocalDateTime的参数解析器，通过继承WebMvcConfigurer重写addArgumentResolvers方法，然后add一个自定义的HandlerMethodArgumentResolver即可解决刚才的问题，但是在2.2.0版本上会自动指定LocalDateTime的解析器原因未知（我太蔡了…找不到是怎么做到的，想看看他是怎么获取的，但是发现那个方法再无限调用，完全没有头绪。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MvcConfig</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">WebMvcConfigurer</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 增加 &#123;<span class=\"doctag\">@link</span> LocalDateTime&#125; 的自定义参数解析器，不需要用注解方式指定query参数即可解析</span></span><br><span class=\"line\"><span class=\"comment\">     * 2.2.0版本后较大改变，自动确定LocalDateTime解析器为 &#123;<span class=\"doctag\">@link</span></span></span><br><span class=\"line\"><span class=\"comment\">     * org.springframework.web.method.annotation.RequestParamMethodArgumentResolver&#125;</span></span><br><span class=\"line\"><span class=\"comment\">     * 但是依旧可以注册使用本解析器</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addArgumentResolvers</span><span class=\"params\">(List&lt;HandlerMethodArgumentResolver&gt; resolvers)</span> &#123;</span><br><span class=\"line\">        resolvers.add(<span class=\"keyword\">new</span> <span class=\"title class_\">LocalDateArgumentResolverHandler</span>());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LocalDateArgumentResolverHandler</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">HandlerMethodArgumentResolver</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">supportsParameter</span><span class=\"params\">(MethodParameter parameter)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> parameter.getParameterType().equals(LocalDateTime.class);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> Object <span class=\"title function_\">resolveArgument</span><span class=\"params\">(MethodParameter parameter, ModelAndViewContainer mavContainer,</span></span><br><span class=\"line\"><span class=\"params\">                                      NativeWebRequest webRequest, WebDataBinderFactory binderFactory)</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">param</span> <span class=\"operator\">=</span> webRequest.getParameter(Objects.requireNonNull(parameter.getParameterName()));</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isEmpty(param)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> LocalDateTimeUtils.convert(param.trim());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x5-推荐使用注册Convert的方式\"><a href=\"#0x5-推荐使用注册Convert的方式\" class=\"headerlink\" title=\"0x5. 推荐使用注册Convert的方式\"></a>0x5. 推荐使用注册Convert的方式</h2><p>相比于注入@Bean的方式创建Convert的方式，我个人更喜欢使用继承WebMvcConfigurer后重写addFormatters方法来注册自定义Convert。这种方式相比于@Bean注入，更容易让人理解，代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MvcConfig</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">WebMvcConfigurer</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addFormatters</span><span class=\"params\">(FormatterRegistry registry)</span> &#123;</span><br><span class=\"line\">        registry.addConverter(<span class=\"keyword\">new</span> <span class=\"title class_\">LocalDateTimeConverter</span>());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LocalDateTimeConverter</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Converter</span>&lt;String, LocalDateTime&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> LocalDateTime <span class=\"title function_\">convert</span><span class=\"params\">(String source)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isEmpty(source)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> LocalDateTimeUtils.convert(source.trim());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x6-小结\"><a href=\"#0x6-小结\" class=\"headerlink\" title=\"0x6. 小结\"></a>0x6. 小结</h2><p>对于request参数其实还有initBinder，Formatter等方式进行处理，这里就不一一贴出来了，有兴趣的各位可以在网上查询相关资料。还有jackson相关的序列化，通过继承com.fasterxml.jackson.databind.JsonDeserializer和com.fasterxml.jackson.databind.JsonSerializer生成自定义的Jackson Deserializer和Serializer，然后在@Configuration注解的配置类内注入@Bean将Jackson Module注册为@Bean，SpringBoot会自动注入进ObjectMapper中。另一种方式是自己注入一个自己定制的ObjectMapper为@Bean，然后将Module注入进ObjectMapper中。甚至可以通过定制转换规则，从而使类型支持多种参数。</p>\n<h2 id=\"0xf-附录\"><a href=\"#0xf-附录\" class=\"headerlink\" title=\"0xf. 附录\"></a>0xf. 附录</h2><p>时间字符串转 LocalDateTime 工具类。转换不同时区的时间为本地时间（默认使用 <code>ZoneId.systemDefault()</code> 为本地时区）</p>\n<ul>\n<li>支持10位秒时间戳</li>\n<li>13位毫秒时间戳</li>\n<li>通用时间格式: <code>yyyy-MM-dd HH:mm[:ss][.sss]</code></li>\n<li>ISO-8601 时间格式: <code>yyyy-MM-ddTHH:mm[:ss][.sss][Z|(+|-)HH:mm]</code></li>\n<li>RFC-3339 时间格式: <code>yyyy-MM-dd HH:mm[:ss][.sss][Z|(+|-)HH:mm]</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 时间字符串转 LocalDateTime 工具类</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> teble</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LocalDateTimeUtils</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"type\">Pattern</span> <span class=\"variable\">DATE_TIME_PATTERN</span> <span class=\"operator\">=</span> Pattern.compile(<span class=\"string\">&quot;^\\\\d&#123;4&#125;-\\\\d&#123;2&#125;-\\\\d&#123;2&#125;[T ]\\\\d&#123;2&#125;:\\\\d&#123;2&#125;.*$&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"type\">ZoneId</span> <span class=\"variable\">LOCAL_ZONE_ID</span> <span class=\"operator\">=</span> ZoneId.systemDefault();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"type\">DateTimeFormatter</span> <span class=\"variable\">LOCAL_DATE_TIME_FORMATTER</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DateTimeFormatterBuilder</span>()</span><br><span class=\"line\">            .parseCaseInsensitive()</span><br><span class=\"line\">            .append(ISO_LOCAL_DATE)</span><br><span class=\"line\">            .optionalStart()</span><br><span class=\"line\">            .appendLiteral(<span class=\"string\">&#x27;T&#x27;</span>)</span><br><span class=\"line\">            .optionalEnd()</span><br><span class=\"line\">            .optionalStart()</span><br><span class=\"line\">            .appendLiteral(<span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">            .optionalEnd()</span><br><span class=\"line\">            .append(ISO_LOCAL_TIME)</span><br><span class=\"line\">            .toFormatter();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isTimestamp</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> String resolver)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; resolver.length(); i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">char</span> <span class=\"variable\">ch</span> <span class=\"operator\">=</span> resolver.charAt(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!Character.isDigit(ch)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resolver.length() == <span class=\"number\">10</span> || resolver.length() == <span class=\"number\">13</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isOffsetDateTime</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> String resolver)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>; i &lt; resolver.length(); i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">char</span> <span class=\"variable\">ch</span> <span class=\"operator\">=</span> resolver.charAt(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ch == <span class=\"string\">&#x27;Z&#x27;</span> || ch == <span class=\"string\">&#x27;+&#x27;</span> || ch == <span class=\"string\">&#x27;-&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isZonedDateTime</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> String resolver)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resolver.endsWith(<span class=\"string\">&quot;]&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">getISOTimeStr</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> String resolver)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (resolver.charAt(<span class=\"number\">10</span>) == <span class=\"string\">&#x27; &#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> resolver.substring(<span class=\"number\">0</span>, <span class=\"number\">10</span>) + <span class=\"string\">&quot;T&quot;</span> + resolver.substring(<span class=\"number\">11</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> resolver;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Nullable</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LocalDateTime <span class=\"title function_\">convert</span><span class=\"params\">(<span class=\"meta\">@Nullable</span> String resolver)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (resolver == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isTimestamp(resolver)) &#123;</span><br><span class=\"line\">            Instant instant;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (resolver.length() == <span class=\"number\">10</span>) &#123;</span><br><span class=\"line\">                instant = Instant.ofEpochSecond(Long.parseLong(resolver));</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                instant = Instant.ofEpochMilli(Long.parseLong(resolver));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> LocalDateTime.ofInstant(instant, LOCAL_ZONE_ID);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (DATE_TIME_PATTERN.matcher(resolver).matches()) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// compatibility RFC 3339</span></span><br><span class=\"line\">            resolver = getISOTimeStr(resolver);</span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">isZoned</span> <span class=\"operator\">=</span> isZonedDateTime(resolver);</span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">isOffset</span> <span class=\"operator\">=</span> isOffsetDateTime(resolver);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (isOffset &amp;&amp; isZoned) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> ZonedDateTime.parse(resolver, DateTimeFormatter.ISO_ZONED_DATE_TIME)</span><br><span class=\"line\">                        .withZoneSameInstant(LOCAL_ZONE_ID)</span><br><span class=\"line\">                        .toLocalDateTime();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (isOffset) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> ZonedDateTime.parse(resolver, DateTimeFormatter.ISO_OFFSET_DATE_TIME)</span><br><span class=\"line\">                        .withZoneSameInstant(LOCAL_ZONE_ID)</span><br><span class=\"line\">                        .toLocalDateTime();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> LocalDateTime.parse(resolver, LOCAL_DATE_TIME_FORMATTER);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// ISO 8601</span></span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;2011-12-03T10:15:30+01:00[Europe/Paris]&quot;</span>));</span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;2011-12-03T10:15:30+01:00&quot;</span>));</span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;2011-12-03T10:15:30Z&quot;</span>));</span><br><span class=\"line\">        <span class=\"comment\">// RFC 3339</span></span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;2011-12-03 10:15:30.123Z&quot;</span>));</span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;2011-12-03 10:15:30.123+01:00&quot;</span>));</span><br><span class=\"line\">        <span class=\"comment\">// LOCAL TIME</span></span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;2011-12-03 10:15:30&quot;</span>));</span><br><span class=\"line\">        <span class=\"comment\">// TIMESTAMP</span></span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;1322819330&quot;</span>));</span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;1322819330123&quot;</span>));</span><br><span class=\"line\">        <span class=\"comment\">// INVALID</span></span><br><span class=\"line\">        System.out.println(convert(<span class=\"string\">&quot;123&quot;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"spock初探","comments":1,"toc":true,"only":["home","category","tag"],"urlname":"spock-spring2-study-note1","date":"2021-12-29T07:27:00.000Z","pic":null,"_content":"# 背景\n\n项目维护的久了，业务逻辑就会因为需求导致越来越多的分支，也可能在开发过程中cv的时候疏忽，忘记修改了一个参数，直到上线的时候bug才体现出来。这就陷入了一个没有测试导致开发过程中的bug带入了线上环境的尴尬境地。\n<!--more-->\n\n实际上一直都想找个时间对项目写一份测试，正常的测试框架实在太难用，再加上没有太多的时间，所以这个事情一拖再拖，在前阵子无意中看到了一款测试框架——Spock，稍微了解了一下后想尝试一下这个框架来编写测试。前几天终于忙完了OJ的改造，立马就来玩玩spock了。\n\n网上关于Spock的资料比较简单，包括官网的demo也是如此，并且因为spock2增加了很多特性（目前还在不断的更新中），网上的资料存在过多的过时内容，所以在写的过程中遇见了无数的问题，不过总算是解决了，所以写篇博客来记录一下。\n\n# Junit单元测试的痛点\n\n现在我有一个AccountInput的DTO用来接收前端请求，其父类BaseDTO提供了2个final方法：\n- `convert`：将dto转换成对应的实体类\n- `convertAndUpdate`：将DTO中的字段对实体的相应字段进行覆盖。\n\n但是有些字段我不需要覆盖怎么办，所以额外提供了一个`@CopyIgnore`注解用于忽略 convert/update 过程中某些不需要覆盖的字段\n\n{% collapse AccountInput.class %}\n\n```java\n@Data\npublic class AccountInput extends BaseDTO<Account> {\n\n    // 指定该参数在update时不对实体进行覆盖，避免用户构造请求修改某些不允许修改的字段\n    @CopyIgnore(groups = IgnoreType.UPDATE)\n    private String username;\n\n    @CopyIgnore(groups = IgnoreType.UPDATE)\n    private String password;\n\n    private String realName;\n\n    private String avatarUrl;\n\n    private String avatar;\n}\n```\n\n{% endcollapse %}\n\n{% collapse BaseDTO.class %}\n\n```java\n/**\n * @author teble\n * @date 2020/10/15 10:43\n */\npublic abstract class BaseDTO<T> {\n\n    public final T convert() {\n        this.convertBefore(this);\n        Class<?> entityClass = this.getEntityClass();\n        Object o = CopyPropertyUtils.generateInstance(this, entityClass);\n        this.convertAfter(CastUtils.cast(o));\n        return CastUtils.cast(o);\n    }\n\n    public final T convertAndUpdate(T entity) {\n        this.convertBefore(this);\n        CopyPropertyUtils.copyProperties(this, entity);\n        this.convertAfter(CastUtils.cast(entity));\n        return CastUtils.cast(entity);\n    }\n}\n```\n\n{% endcollapse %}\n\n然后我们就针对这部分逻辑取编写一份正常的junit测试来康康，为了确保测试的完善，我们的测试肯定得有多组输入，多组输入的方式有很多种，这里我们先采用一个相对简单方便的`@CsvSource`来进行多组测试用例的输入。\n\n{% collapse junit测试代码及结果 open %}\n\n```java\n/**\n * @author teble\n * @date 2020/11/25 14:02\n */\nclass AccountInputTest {\n\n    /**\n     * {@link CsvSource}注解导入数据，空字符串默认为null，\n     * 如果需要注入null参数也可指定{@link CsvSource#nullValues()} 来实现\n     */\n    @ParameterizedTest\n    @CsvSource(value = {\"1,1,1,1\", \",,null,\"})\n    @DisplayName(\"Input类型转换为实体测试\")\n    void testDto2Entity(String username, String password, String realName, String avatar) {\n        AccountInput accountInput = new AccountInput()\n                .setUsername(username)\n                .setPassword(password)\n                .setRealName(realName)\n                .setAvatar(avatar);\n        Account account = accountInput.convert();\n        assertThat(account.getUsername()).isEqualTo(username);\n        assertThat(account.getPassword()).isEqualTo(password);\n        assertThat(account.getRealName()).isEqualTo(realName);\n        assertThat(account.getAvatar()).isEqualTo(avatar);\n    }\n\n    @ParameterizedTest\n    @CsvSource(value = {\"admin,pass,ZhangSan,110,,new pass,LiSi,\", \"admin,,,,,,,avatar\"})\n    @DisplayName(\"Input类型更新实体测试\")\n    void testDtoUpdateEntity(String username, String password, String realName, String phone,\n                             String iUsername, String iPassword, String iRealName, String iAvatar) {\n        Account old = new Account()\n                .setUsername(username)\n                .setPassword(password)\n                .setRealName(realName)\n                .setPhone(phone);\n        AccountInput accountInput = new AccountInput()\n                .setUsername(iUsername)\n                .setPassword(iPassword)\n                .setRealName(iRealName)\n                .setAvatar(iAvatar);\n        Account entity = accountInput.convertAndUpdate(old);\n        assertThat(entity.getUsername()).isEqualTo(username);\n        assertThat(entity.getPassword()).isEqualTo(password);\n        assertThat(entity.getRealName()).isEqualTo(iRealName);\n        assertThat(entity.getAvatar()).isEqualTo(iAvatar);\n        assertThat(entity.getPhone()).isEqualTo(phone);\n    }\n}\n```\n\n{% img https://cdn.jsdelivr.net/gh/teble/teble.github.io@blog-images/img/202112311808291.png \"测试结果~'junit'\" %}\n\n{% endcollapse %}\n\n通过上面的代码我们可以发现，所有参数都是通过字符串方式进行传递然后通过切面获取测试的参数类型然后再转换成对应的类型进行注入的。在默认情况下空字符串会视为`null`进行参数注入，那么如果我们需要注入空字符串给String对象怎么办？手动将`CsvSource#nullValues()`设置为一个代表`null`的字符串即可（例如`\"None\"`），但是这又引入了一个新的问题，我有些时候需要None这个字符串怎么办，所以这时候就{% hint '陷入了对象通过字符串表达造成矛盾之中' '毕竟注解里面不能直接new对象(' %}。\n\n通过`@Parameters`与`DataProvider`的方式虽然可以解决，但是无论哪个方法都比较复杂，往往一个十几行的代码，需要几十行甚至上百行的代码进行测试，而且采用`@Parameters`进行参数注入，需要构造函数进行配合，那么就变成了需要一整个测试类来测试一个方法。\n\n{% collapse junit测试代码及结果 open %}\n```java\n/**\n * @author teble\n * @date 2021/12/31 10:55\n */\nclass AccountInputSpec extends Specification {\n\n    def \"test accountInput convert entity\"() {\n        given:\n        AccountInput accountInput = new AccountInput(\n                username: username, password: password, realName: realName, avatar: avatar\n        )\n\n        expect:\n        Account account = accountInput.convert()\n        account.username == username\n        account.password == password\n        account.realName == realName\n        account.avatar == avatar\n\n        where:\n        username | password | realName | avatar\n        \"1\"      | \"1\"      | \"1\"      | \"1\"\n        null     | null     | \"null\"   | null\n    }\n\n    def \"test accountInput update entity\"() {\n        given:\n        Account old = new Account(username: username, password: password, realName: realName, phone: phone)\n        AccountInput accountInput = new AccountInput(\n                username: iUsername, password: iPassword, realName: iRealName, avatar: avatar\n        )\n\n        expect:\n        Account entity = accountInput.convertAndUpdate(old)\n        entity.username == username\n        entity.password == password\n        entity.realName == iRealName\n        entity.avatar == avatar\n        entity.phone == phone\n\n        where:\n        username | password | realName   | phone || iUsername | iPassword  | iRealName | avatar\n        \"admin\"  | \"pass\"   | \"ZhangSan\" | \"110\" || null      | \"new pass\" | \"LiSi\"    | null\n        \"admin\"  | null     | null       | null  || null      | null       | \"\"        | \"avatar\"\n    }\n}\n```\n![spock](https://cdn.jsdelivr.net/gh/teble/teble.github.io@blog-images/img/202112311957862.png)\n{% endcollapse %}\n\n不过最让我动心的还是spock对于条件分支测试的直观程度，这里上个图举个简单的例子（当然这个例子举的可能不够好）\n{% img https://cdn.jsdelivr.net/gh/teble/teble.github.io@blog-images/img/202112291620714.png \"prprprpr''\" %}\n如果在`if/else`很多的复杂场景下，编写测试代码的成本就很高，为了分支的覆盖率，编写的测试代码长度可能远远超过了被测试的代码。当然JUnit的@Parametered参数化注解或者DataProvider可以解决多数据分支问题，但是编写起来非常麻烦，而且不够直观，如果某个用例出错报错也不够详细。\n\n但是spock的where标签，基于spock得天独厚的[数据表语法糖](https://spockframework.org/spock/docs/2.0/data_driven_testing.html#data-tables)，测试代码覆盖所有的if分支逻辑，我们要做的仅仅是编写一份表格，就能完成一份复杂的分支测试，开发效率更高，更适合敏捷开发。\n\n---\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/spock初探.md","raw":"title: spock初探\ntags:\n  - springboot\n  - spock\n  - 测试\n  - 瞎说\ncomments: true\ntoc: true\nonly:\n  - home\n  - category\n  - tag\nurlname: spock-spring2-study-note1\ncategories:\n  - 笔记\ndate: 2021-12-29 15:27:00\npic:\n---\n# 背景\n\n项目维护的久了，业务逻辑就会因为需求导致越来越多的分支，也可能在开发过程中cv的时候疏忽，忘记修改了一个参数，直到上线的时候bug才体现出来。这就陷入了一个没有测试导致开发过程中的bug带入了线上环境的尴尬境地。\n<!--more-->\n\n实际上一直都想找个时间对项目写一份测试，正常的测试框架实在太难用，再加上没有太多的时间，所以这个事情一拖再拖，在前阵子无意中看到了一款测试框架——Spock，稍微了解了一下后想尝试一下这个框架来编写测试。前几天终于忙完了OJ的改造，立马就来玩玩spock了。\n\n网上关于Spock的资料比较简单，包括官网的demo也是如此，并且因为spock2增加了很多特性（目前还在不断的更新中），网上的资料存在过多的过时内容，所以在写的过程中遇见了无数的问题，不过总算是解决了，所以写篇博客来记录一下。\n\n# Junit单元测试的痛点\n\n现在我有一个AccountInput的DTO用来接收前端请求，其父类BaseDTO提供了2个final方法：\n- `convert`：将dto转换成对应的实体类\n- `convertAndUpdate`：将DTO中的字段对实体的相应字段进行覆盖。\n\n但是有些字段我不需要覆盖怎么办，所以额外提供了一个`@CopyIgnore`注解用于忽略 convert/update 过程中某些不需要覆盖的字段\n\n{% collapse AccountInput.class %}\n\n```java\n@Data\npublic class AccountInput extends BaseDTO<Account> {\n\n    // 指定该参数在update时不对实体进行覆盖，避免用户构造请求修改某些不允许修改的字段\n    @CopyIgnore(groups = IgnoreType.UPDATE)\n    private String username;\n\n    @CopyIgnore(groups = IgnoreType.UPDATE)\n    private String password;\n\n    private String realName;\n\n    private String avatarUrl;\n\n    private String avatar;\n}\n```\n\n{% endcollapse %}\n\n{% collapse BaseDTO.class %}\n\n```java\n/**\n * @author teble\n * @date 2020/10/15 10:43\n */\npublic abstract class BaseDTO<T> {\n\n    public final T convert() {\n        this.convertBefore(this);\n        Class<?> entityClass = this.getEntityClass();\n        Object o = CopyPropertyUtils.generateInstance(this, entityClass);\n        this.convertAfter(CastUtils.cast(o));\n        return CastUtils.cast(o);\n    }\n\n    public final T convertAndUpdate(T entity) {\n        this.convertBefore(this);\n        CopyPropertyUtils.copyProperties(this, entity);\n        this.convertAfter(CastUtils.cast(entity));\n        return CastUtils.cast(entity);\n    }\n}\n```\n\n{% endcollapse %}\n\n然后我们就针对这部分逻辑取编写一份正常的junit测试来康康，为了确保测试的完善，我们的测试肯定得有多组输入，多组输入的方式有很多种，这里我们先采用一个相对简单方便的`@CsvSource`来进行多组测试用例的输入。\n\n{% collapse junit测试代码及结果 open %}\n\n```java\n/**\n * @author teble\n * @date 2020/11/25 14:02\n */\nclass AccountInputTest {\n\n    /**\n     * {@link CsvSource}注解导入数据，空字符串默认为null，\n     * 如果需要注入null参数也可指定{@link CsvSource#nullValues()} 来实现\n     */\n    @ParameterizedTest\n    @CsvSource(value = {\"1,1,1,1\", \",,null,\"})\n    @DisplayName(\"Input类型转换为实体测试\")\n    void testDto2Entity(String username, String password, String realName, String avatar) {\n        AccountInput accountInput = new AccountInput()\n                .setUsername(username)\n                .setPassword(password)\n                .setRealName(realName)\n                .setAvatar(avatar);\n        Account account = accountInput.convert();\n        assertThat(account.getUsername()).isEqualTo(username);\n        assertThat(account.getPassword()).isEqualTo(password);\n        assertThat(account.getRealName()).isEqualTo(realName);\n        assertThat(account.getAvatar()).isEqualTo(avatar);\n    }\n\n    @ParameterizedTest\n    @CsvSource(value = {\"admin,pass,ZhangSan,110,,new pass,LiSi,\", \"admin,,,,,,,avatar\"})\n    @DisplayName(\"Input类型更新实体测试\")\n    void testDtoUpdateEntity(String username, String password, String realName, String phone,\n                             String iUsername, String iPassword, String iRealName, String iAvatar) {\n        Account old = new Account()\n                .setUsername(username)\n                .setPassword(password)\n                .setRealName(realName)\n                .setPhone(phone);\n        AccountInput accountInput = new AccountInput()\n                .setUsername(iUsername)\n                .setPassword(iPassword)\n                .setRealName(iRealName)\n                .setAvatar(iAvatar);\n        Account entity = accountInput.convertAndUpdate(old);\n        assertThat(entity.getUsername()).isEqualTo(username);\n        assertThat(entity.getPassword()).isEqualTo(password);\n        assertThat(entity.getRealName()).isEqualTo(iRealName);\n        assertThat(entity.getAvatar()).isEqualTo(iAvatar);\n        assertThat(entity.getPhone()).isEqualTo(phone);\n    }\n}\n```\n\n{% img https://cdn.jsdelivr.net/gh/teble/teble.github.io@blog-images/img/202112311808291.png \"测试结果~'junit'\" %}\n\n{% endcollapse %}\n\n通过上面的代码我们可以发现，所有参数都是通过字符串方式进行传递然后通过切面获取测试的参数类型然后再转换成对应的类型进行注入的。在默认情况下空字符串会视为`null`进行参数注入，那么如果我们需要注入空字符串给String对象怎么办？手动将`CsvSource#nullValues()`设置为一个代表`null`的字符串即可（例如`\"None\"`），但是这又引入了一个新的问题，我有些时候需要None这个字符串怎么办，所以这时候就{% hint '陷入了对象通过字符串表达造成矛盾之中' '毕竟注解里面不能直接new对象(' %}。\n\n通过`@Parameters`与`DataProvider`的方式虽然可以解决，但是无论哪个方法都比较复杂，往往一个十几行的代码，需要几十行甚至上百行的代码进行测试，而且采用`@Parameters`进行参数注入，需要构造函数进行配合，那么就变成了需要一整个测试类来测试一个方法。\n\n{% collapse junit测试代码及结果 open %}\n```java\n/**\n * @author teble\n * @date 2021/12/31 10:55\n */\nclass AccountInputSpec extends Specification {\n\n    def \"test accountInput convert entity\"() {\n        given:\n        AccountInput accountInput = new AccountInput(\n                username: username, password: password, realName: realName, avatar: avatar\n        )\n\n        expect:\n        Account account = accountInput.convert()\n        account.username == username\n        account.password == password\n        account.realName == realName\n        account.avatar == avatar\n\n        where:\n        username | password | realName | avatar\n        \"1\"      | \"1\"      | \"1\"      | \"1\"\n        null     | null     | \"null\"   | null\n    }\n\n    def \"test accountInput update entity\"() {\n        given:\n        Account old = new Account(username: username, password: password, realName: realName, phone: phone)\n        AccountInput accountInput = new AccountInput(\n                username: iUsername, password: iPassword, realName: iRealName, avatar: avatar\n        )\n\n        expect:\n        Account entity = accountInput.convertAndUpdate(old)\n        entity.username == username\n        entity.password == password\n        entity.realName == iRealName\n        entity.avatar == avatar\n        entity.phone == phone\n\n        where:\n        username | password | realName   | phone || iUsername | iPassword  | iRealName | avatar\n        \"admin\"  | \"pass\"   | \"ZhangSan\" | \"110\" || null      | \"new pass\" | \"LiSi\"    | null\n        \"admin\"  | null     | null       | null  || null      | null       | \"\"        | \"avatar\"\n    }\n}\n```\n![spock](https://cdn.jsdelivr.net/gh/teble/teble.github.io@blog-images/img/202112311957862.png)\n{% endcollapse %}\n\n不过最让我动心的还是spock对于条件分支测试的直观程度，这里上个图举个简单的例子（当然这个例子举的可能不够好）\n{% img https://cdn.jsdelivr.net/gh/teble/teble.github.io@blog-images/img/202112291620714.png \"prprprpr''\" %}\n如果在`if/else`很多的复杂场景下，编写测试代码的成本就很高，为了分支的覆盖率，编写的测试代码长度可能远远超过了被测试的代码。当然JUnit的@Parametered参数化注解或者DataProvider可以解决多数据分支问题，但是编写起来非常麻烦，而且不够直观，如果某个用例出错报错也不够详细。\n\n但是spock的where标签，基于spock得天独厚的[数据表语法糖](https://spockframework.org/spock/docs/2.0/data_driven_testing.html#data-tables)，测试代码覆盖所有的if分支逻辑，我们要做的仅仅是编写一份表格，就能完成一份复杂的分支测试，开发效率更高，更适合敏捷开发。\n\n---\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"spock初探","published":1,"updated":"2022-09-06T02:47:44.508Z","layout":"post","photos":[],"link":"","_id":"cl7pmazb10001xxsr6e083m4z","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css\"><h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>项目维护的久了，业务逻辑就会因为需求导致越来越多的分支，也可能在开发过程中cv的时候疏忽，忘记修改了一个参数，直到上线的时候bug才体现出来。这就陷入了一个没有测试导致开发过程中的bug带入了线上环境的尴尬境地。</p>\n<span id=\"more\"></span>\n\n<p>实际上一直都想找个时间对项目写一份测试，正常的测试框架实在太难用，再加上没有太多的时间，所以这个事情一拖再拖，在前阵子无意中看到了一款测试框架——Spock，稍微了解了一下后想尝试一下这个框架来编写测试。前几天终于忙完了OJ的改造，立马就来玩玩spock了。</p>\n<p>网上关于Spock的资料比较简单，包括官网的demo也是如此，并且因为spock2增加了很多特性（目前还在不断的更新中），网上的资料存在过多的过时内容，所以在写的过程中遇见了无数的问题，不过总算是解决了，所以写篇博客来记录一下。</p>\n<h1 id=\"Junit单元测试的痛点\"><a href=\"#Junit单元测试的痛点\" class=\"headerlink\" title=\"Junit单元测试的痛点\"></a>Junit单元测试的痛点</h1><p>现在我有一个AccountInput的DTO用来接收前端请求，其父类BaseDTO提供了2个final方法：</p>\n<ul>\n<li><code>convert</code>：将dto转换成对应的实体类</li>\n<li><code>convertAndUpdate</code>：将DTO中的字段对实体的相应字段进行覆盖。</li>\n</ul>\n<p>但是有些字段我不需要覆盖怎么办，所以额外提供了一个<code>@CopyIgnore</code>注解用于忽略 convert&#x2F;update 过程中某些不需要覆盖的字段</p>\n<div class=\"xControl\">\n    <div class=\"xHeading\"><div class=\"xIcon\"><i class=\"fa fa-plus\"></i></div><span>AccountInput.class</span></div>\n    <div class=\"xContent\"><div class=\"inner\">\n        <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AccountInput</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseDTO</span>&lt;Account&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 指定该参数在update时不对实体进行覆盖，避免用户构造请求修改某些不允许修改的字段</span></span><br><span class=\"line\">    <span class=\"meta\">@CopyIgnore(groups = IgnoreType.UPDATE)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@CopyIgnore(groups = IgnoreType.UPDATE)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String realName;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String avatarUrl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String avatar;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n \n    </div></div>\n    </div>\n\n<div class=\"xControl\">\n    <div class=\"xHeading\"><div class=\"xIcon\"><i class=\"fa fa-plus\"></i></div><span>BaseDTO.class</span></div>\n    <div class=\"xContent\"><div class=\"inner\">\n        <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> teble</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2020/10/15 10:43</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BaseDTO</span>&lt;T&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> T <span class=\"title function_\">convert</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.convertBefore(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">        Class&lt;?&gt; entityClass = <span class=\"built_in\">this</span>.getEntityClass();</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">o</span> <span class=\"operator\">=</span> CopyPropertyUtils.generateInstance(<span class=\"built_in\">this</span>, entityClass);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.convertAfter(CastUtils.cast(o));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> CastUtils.cast(o);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> T <span class=\"title function_\">convertAndUpdate</span><span class=\"params\">(T entity)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.convertBefore(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">        CopyPropertyUtils.copyProperties(<span class=\"built_in\">this</span>, entity);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.convertAfter(CastUtils.cast(entity));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> CastUtils.cast(entity);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n \n    </div></div>\n    </div>\n\n<p>然后我们就针对这部分逻辑取编写一份正常的junit测试来康康，为了确保测试的完善，我们的测试肯定得有多组输入，多组输入的方式有很多种，这里我们先采用一个相对简单方便的<code>@CsvSource</code>来进行多组测试用例的输入。</p>\n<div class=\"xControl active\">\n    <div class=\"xHeading\"><div class=\"xIcon\"><i class=\"fa fa-plus\"></i></div><span>junit测试代码及结果</span></div>\n    <div class=\"xContent pre-open\"><div class=\"inner\">\n        <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> teble</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2020/11/25 14:02</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AccountInputTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@link</span> CsvSource&#125;注解导入数据，空字符串默认为null，</span></span><br><span class=\"line\"><span class=\"comment\">     * 如果需要注入null参数也可指定&#123;<span class=\"doctag\">@link</span> CsvSource#nullValues()&#125; 来实现</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@ParameterizedTest</span></span><br><span class=\"line\">    <span class=\"meta\">@CsvSource(value = &#123;&quot;1,1,1,1&quot;, &quot;,,null,&quot;&#125;)</span></span><br><span class=\"line\">    <span class=\"meta\">@DisplayName(&quot;Input类型转换为实体测试&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">testDto2Entity</span><span class=\"params\">(String username, String password, String realName, String avatar)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">AccountInput</span> <span class=\"variable\">accountInput</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AccountInput</span>()</span><br><span class=\"line\">                .setUsername(username)</span><br><span class=\"line\">                .setPassword(password)</span><br><span class=\"line\">                .setRealName(realName)</span><br><span class=\"line\">                .setAvatar(avatar);</span><br><span class=\"line\">        <span class=\"type\">Account</span> <span class=\"variable\">account</span> <span class=\"operator\">=</span> accountInput.convert();</span><br><span class=\"line\">        assertThat(account.getUsername()).isEqualTo(username);</span><br><span class=\"line\">        assertThat(account.getPassword()).isEqualTo(password);</span><br><span class=\"line\">        assertThat(account.getRealName()).isEqualTo(realName);</span><br><span class=\"line\">        assertThat(account.getAvatar()).isEqualTo(avatar);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ParameterizedTest</span></span><br><span class=\"line\">    <span class=\"meta\">@CsvSource(value = &#123;&quot;admin,pass,ZhangSan,110,,new pass,LiSi,&quot;, &quot;admin,,,,,,,avatar&quot;&#125;)</span></span><br><span class=\"line\">    <span class=\"meta\">@DisplayName(&quot;Input类型更新实体测试&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">testDtoUpdateEntity</span><span class=\"params\">(String username, String password, String realName, String phone,</span></span><br><span class=\"line\"><span class=\"params\">                             String iUsername, String iPassword, String iRealName, String iAvatar)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Account</span> <span class=\"variable\">old</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Account</span>()</span><br><span class=\"line\">                .setUsername(username)</span><br><span class=\"line\">                .setPassword(password)</span><br><span class=\"line\">                .setRealName(realName)</span><br><span class=\"line\">                .setPhone(phone);</span><br><span class=\"line\">        <span class=\"type\">AccountInput</span> <span class=\"variable\">accountInput</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AccountInput</span>()</span><br><span class=\"line\">                .setUsername(iUsername)</span><br><span class=\"line\">                .setPassword(iPassword)</span><br><span class=\"line\">                .setRealName(iRealName)</span><br><span class=\"line\">                .setAvatar(iAvatar);</span><br><span class=\"line\">        <span class=\"type\">Account</span> <span class=\"variable\">entity</span> <span class=\"operator\">=</span> accountInput.convertAndUpdate(old);</span><br><span class=\"line\">        assertThat(entity.getUsername()).isEqualTo(username);</span><br><span class=\"line\">        assertThat(entity.getPassword()).isEqualTo(password);</span><br><span class=\"line\">        assertThat(entity.getRealName()).isEqualTo(iRealName);</span><br><span class=\"line\">        assertThat(entity.getAvatar()).isEqualTo(iAvatar);</span><br><span class=\"line\">        assertThat(entity.getPhone()).isEqualTo(phone);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"https://cdn.jsdelivr.net/gh/teble/teble.github.io@blog-images/img/202112311808291.png\" class=\"\" title=\"测试结果~\" alt=\"junit\">\n \n    </div></div>\n    </div>\n\n<p>通过上面的代码我们可以发现，所有参数都是通过字符串方式进行传递然后通过切面获取测试的参数类型然后再转换成对应的类型进行注入的。在默认情况下空字符串会视为<code>null</code>进行参数注入，那么如果我们需要注入空字符串给String对象怎么办？手动将<code>CsvSource#nullValues()</code>设置为一个代表<code>null</code>的字符串即可（例如<code>&quot;None&quot;</code>），但是这又引入了一个新的问题，我有些时候需要None这个字符串怎么办，所以这时候就<span class=\"hint--info hint--rounded hint--top\" data-hint=\"毕竟注解里面不能直接new对象(\" ontouchstart>陷入了对象通过字符串表达造成矛盾之中</span>。</p>\n<p>通过<code>@Parameters</code>与<code>DataProvider</code>的方式虽然可以解决，但是无论哪个方法都比较复杂，往往一个十几行的代码，需要几十行甚至上百行的代码进行测试，而且采用<code>@Parameters</code>进行参数注入，需要构造函数进行配合，那么就变成了需要一整个测试类来测试一个方法。</p>\n<div class=\"xControl active\">\n    <div class=\"xHeading\"><div class=\"xIcon\"><i class=\"fa fa-plus\"></i></div><span>junit测试代码及结果</span></div>\n    <div class=\"xContent pre-open\"><div class=\"inner\">\n        <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> teble</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/12/31 10:55</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AccountInputSpec</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Specification</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    def <span class=\"string\">&quot;test accountInput convert entity&quot;</span>() &#123;</span><br><span class=\"line\">        given:</span><br><span class=\"line\">        <span class=\"type\">AccountInput</span> <span class=\"variable\">accountInput</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AccountInput</span>(</span><br><span class=\"line\">                username: username, password: password, realName: realName, avatar: avatar</span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">        expect:</span><br><span class=\"line\">        <span class=\"type\">Account</span> <span class=\"variable\">account</span> <span class=\"operator\">=</span> accountInput.convert()</span><br><span class=\"line\">        account.username == username</span><br><span class=\"line\">        account.password == password</span><br><span class=\"line\">        account.realName == realName</span><br><span class=\"line\">        account.avatar == avatar</span><br><span class=\"line\"></span><br><span class=\"line\">        where:</span><br><span class=\"line\">        username | password | realName | avatar</span><br><span class=\"line\">        <span class=\"string\">&quot;1&quot;</span>      | <span class=\"string\">&quot;1&quot;</span>      | <span class=\"string\">&quot;1&quot;</span>      | <span class=\"string\">&quot;1&quot;</span></span><br><span class=\"line\">        <span class=\"literal\">null</span>     | <span class=\"literal\">null</span>     | <span class=\"string\">&quot;null&quot;</span>   | <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    def <span class=\"string\">&quot;test accountInput update entity&quot;</span>() &#123;</span><br><span class=\"line\">        given:</span><br><span class=\"line\">        <span class=\"type\">Account</span> <span class=\"variable\">old</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Account</span>(username: username, password: password, realName: realName, phone: phone)</span><br><span class=\"line\">        <span class=\"type\">AccountInput</span> <span class=\"variable\">accountInput</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AccountInput</span>(</span><br><span class=\"line\">                username: iUsername, password: iPassword, realName: iRealName, avatar: avatar</span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">        expect:</span><br><span class=\"line\">        <span class=\"type\">Account</span> <span class=\"variable\">entity</span> <span class=\"operator\">=</span> accountInput.convertAndUpdate(old)</span><br><span class=\"line\">        entity.username == username</span><br><span class=\"line\">        entity.password == password</span><br><span class=\"line\">        entity.realName == iRealName</span><br><span class=\"line\">        entity.avatar == avatar</span><br><span class=\"line\">        entity.phone == phone</span><br><span class=\"line\"></span><br><span class=\"line\">        where:</span><br><span class=\"line\">        username | password | realName   | phone || iUsername | iPassword  | iRealName | avatar</span><br><span class=\"line\">        <span class=\"string\">&quot;admin&quot;</span>  | <span class=\"string\">&quot;pass&quot;</span>   | <span class=\"string\">&quot;ZhangSan&quot;</span> | <span class=\"string\">&quot;110&quot;</span> || <span class=\"literal\">null</span>      | <span class=\"string\">&quot;new pass&quot;</span> | <span class=\"string\">&quot;LiSi&quot;</span>    | <span class=\"literal\">null</span></span><br><span class=\"line\">        <span class=\"string\">&quot;admin&quot;</span>  | <span class=\"literal\">null</span>     | <span class=\"literal\">null</span>       | <span class=\"literal\">null</span>  || <span class=\"literal\">null</span>      | <span class=\"literal\">null</span>       | <span class=\"string\">&quot;&quot;</span>        | <span class=\"string\">&quot;avatar&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/teble/teble.github.io@blog-images/img/202112311957862.png\" alt=\"spock\"></p>\n \n    </div></div>\n    </div>\n\n<p>不过最让我动心的还是spock对于条件分支测试的直观程度，这里上个图举个简单的例子（当然这个例子举的可能不够好）</p>\n<img src=\"https://cdn.jsdelivr.net/gh/teble/teble.github.io@blog-images/img/202112291620714.png\" class=\"\" title=\"prprprpr\">\n<p>如果在<code>if/else</code>很多的复杂场景下，编写测试代码的成本就很高，为了分支的覆盖率，编写的测试代码长度可能远远超过了被测试的代码。当然JUnit的@Parametered参数化注解或者DataProvider可以解决多数据分支问题，但是编写起来非常麻烦，而且不够直观，如果某个用例出错报错也不够详细。</p>\n<p>但是spock的where标签，基于spock得天独厚的<a href=\"https://spockframework.org/spock/docs/2.0/data_driven_testing.html#data-tables\">数据表语法糖</a>，测试代码覆盖所有的if分支逻辑，我们要做的仅仅是编写一份表格，就能完成一份复杂的分支测试，开发效率更高，更适合敏捷开发。</p>\n<hr>\n","site":{"data":{}},"excerpt":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>项目维护的久了，业务逻辑就会因为需求导致越来越多的分支，也可能在开发过程中cv的时候疏忽，忘记修改了一个参数，直到上线的时候bug才体现出来。这就陷入了一个没有测试导致开发过程中的bug带入了线上环境的尴尬境地。</p>","more":"<p>实际上一直都想找个时间对项目写一份测试，正常的测试框架实在太难用，再加上没有太多的时间，所以这个事情一拖再拖，在前阵子无意中看到了一款测试框架——Spock，稍微了解了一下后想尝试一下这个框架来编写测试。前几天终于忙完了OJ的改造，立马就来玩玩spock了。</p>\n<p>网上关于Spock的资料比较简单，包括官网的demo也是如此，并且因为spock2增加了很多特性（目前还在不断的更新中），网上的资料存在过多的过时内容，所以在写的过程中遇见了无数的问题，不过总算是解决了，所以写篇博客来记录一下。</p>\n<h1 id=\"Junit单元测试的痛点\"><a href=\"#Junit单元测试的痛点\" class=\"headerlink\" title=\"Junit单元测试的痛点\"></a>Junit单元测试的痛点</h1><p>现在我有一个AccountInput的DTO用来接收前端请求，其父类BaseDTO提供了2个final方法：</p>\n<ul>\n<li><code>convert</code>：将dto转换成对应的实体类</li>\n<li><code>convertAndUpdate</code>：将DTO中的字段对实体的相应字段进行覆盖。</li>\n</ul>\n<p>但是有些字段我不需要覆盖怎么办，所以额外提供了一个<code>@CopyIgnore</code>注解用于忽略 convert&#x2F;update 过程中某些不需要覆盖的字段</p>\n<div class=\"xControl\">\n    <div class=\"xHeading\"><div class=\"xIcon\"><i class=\"fa fa-plus\"></i></div><span>AccountInput.class</span></div>\n    <div class=\"xContent\"><div class=\"inner\">\n        <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AccountInput</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseDTO</span>&lt;Account&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 指定该参数在update时不对实体进行覆盖，避免用户构造请求修改某些不允许修改的字段</span></span><br><span class=\"line\">    <span class=\"meta\">@CopyIgnore(groups = IgnoreType.UPDATE)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@CopyIgnore(groups = IgnoreType.UPDATE)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String realName;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String avatarUrl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String avatar;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n \n    </div></div>\n    </div>\n\n<div class=\"xControl\">\n    <div class=\"xHeading\"><div class=\"xIcon\"><i class=\"fa fa-plus\"></i></div><span>BaseDTO.class</span></div>\n    <div class=\"xContent\"><div class=\"inner\">\n        <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> teble</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2020/10/15 10:43</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BaseDTO</span>&lt;T&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> T <span class=\"title function_\">convert</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.convertBefore(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">        Class&lt;?&gt; entityClass = <span class=\"built_in\">this</span>.getEntityClass();</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">o</span> <span class=\"operator\">=</span> CopyPropertyUtils.generateInstance(<span class=\"built_in\">this</span>, entityClass);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.convertAfter(CastUtils.cast(o));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> CastUtils.cast(o);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> T <span class=\"title function_\">convertAndUpdate</span><span class=\"params\">(T entity)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.convertBefore(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">        CopyPropertyUtils.copyProperties(<span class=\"built_in\">this</span>, entity);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.convertAfter(CastUtils.cast(entity));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> CastUtils.cast(entity);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n \n    </div></div>\n    </div>\n\n<p>然后我们就针对这部分逻辑取编写一份正常的junit测试来康康，为了确保测试的完善，我们的测试肯定得有多组输入，多组输入的方式有很多种，这里我们先采用一个相对简单方便的<code>@CsvSource</code>来进行多组测试用例的输入。</p>\n<div class=\"xControl active\">\n    <div class=\"xHeading\"><div class=\"xIcon\"><i class=\"fa fa-plus\"></i></div><span>junit测试代码及结果</span></div>\n    <div class=\"xContent pre-open\"><div class=\"inner\">\n        <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> teble</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2020/11/25 14:02</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AccountInputTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@link</span> CsvSource&#125;注解导入数据，空字符串默认为null，</span></span><br><span class=\"line\"><span class=\"comment\">     * 如果需要注入null参数也可指定&#123;<span class=\"doctag\">@link</span> CsvSource#nullValues()&#125; 来实现</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@ParameterizedTest</span></span><br><span class=\"line\">    <span class=\"meta\">@CsvSource(value = &#123;&quot;1,1,1,1&quot;, &quot;,,null,&quot;&#125;)</span></span><br><span class=\"line\">    <span class=\"meta\">@DisplayName(&quot;Input类型转换为实体测试&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">testDto2Entity</span><span class=\"params\">(String username, String password, String realName, String avatar)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">AccountInput</span> <span class=\"variable\">accountInput</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AccountInput</span>()</span><br><span class=\"line\">                .setUsername(username)</span><br><span class=\"line\">                .setPassword(password)</span><br><span class=\"line\">                .setRealName(realName)</span><br><span class=\"line\">                .setAvatar(avatar);</span><br><span class=\"line\">        <span class=\"type\">Account</span> <span class=\"variable\">account</span> <span class=\"operator\">=</span> accountInput.convert();</span><br><span class=\"line\">        assertThat(account.getUsername()).isEqualTo(username);</span><br><span class=\"line\">        assertThat(account.getPassword()).isEqualTo(password);</span><br><span class=\"line\">        assertThat(account.getRealName()).isEqualTo(realName);</span><br><span class=\"line\">        assertThat(account.getAvatar()).isEqualTo(avatar);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ParameterizedTest</span></span><br><span class=\"line\">    <span class=\"meta\">@CsvSource(value = &#123;&quot;admin,pass,ZhangSan,110,,new pass,LiSi,&quot;, &quot;admin,,,,,,,avatar&quot;&#125;)</span></span><br><span class=\"line\">    <span class=\"meta\">@DisplayName(&quot;Input类型更新实体测试&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">testDtoUpdateEntity</span><span class=\"params\">(String username, String password, String realName, String phone,</span></span><br><span class=\"line\"><span class=\"params\">                             String iUsername, String iPassword, String iRealName, String iAvatar)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Account</span> <span class=\"variable\">old</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Account</span>()</span><br><span class=\"line\">                .setUsername(username)</span><br><span class=\"line\">                .setPassword(password)</span><br><span class=\"line\">                .setRealName(realName)</span><br><span class=\"line\">                .setPhone(phone);</span><br><span class=\"line\">        <span class=\"type\">AccountInput</span> <span class=\"variable\">accountInput</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AccountInput</span>()</span><br><span class=\"line\">                .setUsername(iUsername)</span><br><span class=\"line\">                .setPassword(iPassword)</span><br><span class=\"line\">                .setRealName(iRealName)</span><br><span class=\"line\">                .setAvatar(iAvatar);</span><br><span class=\"line\">        <span class=\"type\">Account</span> <span class=\"variable\">entity</span> <span class=\"operator\">=</span> accountInput.convertAndUpdate(old);</span><br><span class=\"line\">        assertThat(entity.getUsername()).isEqualTo(username);</span><br><span class=\"line\">        assertThat(entity.getPassword()).isEqualTo(password);</span><br><span class=\"line\">        assertThat(entity.getRealName()).isEqualTo(iRealName);</span><br><span class=\"line\">        assertThat(entity.getAvatar()).isEqualTo(iAvatar);</span><br><span class=\"line\">        assertThat(entity.getPhone()).isEqualTo(phone);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"https://cdn.jsdelivr.net/gh/teble/teble.github.io@blog-images/img/202112311808291.png\" class=\"\" title=\"测试结果~\" alt=\"junit\">\n \n    </div></div>\n    </div>\n\n<p>通过上面的代码我们可以发现，所有参数都是通过字符串方式进行传递然后通过切面获取测试的参数类型然后再转换成对应的类型进行注入的。在默认情况下空字符串会视为<code>null</code>进行参数注入，那么如果我们需要注入空字符串给String对象怎么办？手动将<code>CsvSource#nullValues()</code>设置为一个代表<code>null</code>的字符串即可（例如<code>&quot;None&quot;</code>），但是这又引入了一个新的问题，我有些时候需要None这个字符串怎么办，所以这时候就<span class=\"hint--info hint--rounded hint--top\" data-hint=\"毕竟注解里面不能直接new对象(\" ontouchstart>陷入了对象通过字符串表达造成矛盾之中</span>。</p>\n<p>通过<code>@Parameters</code>与<code>DataProvider</code>的方式虽然可以解决，但是无论哪个方法都比较复杂，往往一个十几行的代码，需要几十行甚至上百行的代码进行测试，而且采用<code>@Parameters</code>进行参数注入，需要构造函数进行配合，那么就变成了需要一整个测试类来测试一个方法。</p>\n<div class=\"xControl active\">\n    <div class=\"xHeading\"><div class=\"xIcon\"><i class=\"fa fa-plus\"></i></div><span>junit测试代码及结果</span></div>\n    <div class=\"xContent pre-open\"><div class=\"inner\">\n        <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> teble</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2021/12/31 10:55</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AccountInputSpec</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Specification</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    def <span class=\"string\">&quot;test accountInput convert entity&quot;</span>() &#123;</span><br><span class=\"line\">        given:</span><br><span class=\"line\">        <span class=\"type\">AccountInput</span> <span class=\"variable\">accountInput</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AccountInput</span>(</span><br><span class=\"line\">                username: username, password: password, realName: realName, avatar: avatar</span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">        expect:</span><br><span class=\"line\">        <span class=\"type\">Account</span> <span class=\"variable\">account</span> <span class=\"operator\">=</span> accountInput.convert()</span><br><span class=\"line\">        account.username == username</span><br><span class=\"line\">        account.password == password</span><br><span class=\"line\">        account.realName == realName</span><br><span class=\"line\">        account.avatar == avatar</span><br><span class=\"line\"></span><br><span class=\"line\">        where:</span><br><span class=\"line\">        username | password | realName | avatar</span><br><span class=\"line\">        <span class=\"string\">&quot;1&quot;</span>      | <span class=\"string\">&quot;1&quot;</span>      | <span class=\"string\">&quot;1&quot;</span>      | <span class=\"string\">&quot;1&quot;</span></span><br><span class=\"line\">        <span class=\"literal\">null</span>     | <span class=\"literal\">null</span>     | <span class=\"string\">&quot;null&quot;</span>   | <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    def <span class=\"string\">&quot;test accountInput update entity&quot;</span>() &#123;</span><br><span class=\"line\">        given:</span><br><span class=\"line\">        <span class=\"type\">Account</span> <span class=\"variable\">old</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Account</span>(username: username, password: password, realName: realName, phone: phone)</span><br><span class=\"line\">        <span class=\"type\">AccountInput</span> <span class=\"variable\">accountInput</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AccountInput</span>(</span><br><span class=\"line\">                username: iUsername, password: iPassword, realName: iRealName, avatar: avatar</span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">        expect:</span><br><span class=\"line\">        <span class=\"type\">Account</span> <span class=\"variable\">entity</span> <span class=\"operator\">=</span> accountInput.convertAndUpdate(old)</span><br><span class=\"line\">        entity.username == username</span><br><span class=\"line\">        entity.password == password</span><br><span class=\"line\">        entity.realName == iRealName</span><br><span class=\"line\">        entity.avatar == avatar</span><br><span class=\"line\">        entity.phone == phone</span><br><span class=\"line\"></span><br><span class=\"line\">        where:</span><br><span class=\"line\">        username | password | realName   | phone || iUsername | iPassword  | iRealName | avatar</span><br><span class=\"line\">        <span class=\"string\">&quot;admin&quot;</span>  | <span class=\"string\">&quot;pass&quot;</span>   | <span class=\"string\">&quot;ZhangSan&quot;</span> | <span class=\"string\">&quot;110&quot;</span> || <span class=\"literal\">null</span>      | <span class=\"string\">&quot;new pass&quot;</span> | <span class=\"string\">&quot;LiSi&quot;</span>    | <span class=\"literal\">null</span></span><br><span class=\"line\">        <span class=\"string\">&quot;admin&quot;</span>  | <span class=\"literal\">null</span>     | <span class=\"literal\">null</span>       | <span class=\"literal\">null</span>  || <span class=\"literal\">null</span>      | <span class=\"literal\">null</span>       | <span class=\"string\">&quot;&quot;</span>        | <span class=\"string\">&quot;avatar&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.jsdelivr.net/gh/teble/teble.github.io@blog-images/img/202112311957862.png\" alt=\"spock\"></p>\n \n    </div></div>\n    </div>\n\n<p>不过最让我动心的还是spock对于条件分支测试的直观程度，这里上个图举个简单的例子（当然这个例子举的可能不够好）</p>\n<img src=\"https://cdn.jsdelivr.net/gh/teble/teble.github.io@blog-images/img/202112291620714.png\" class=\"\" title=\"prprprpr\">\n<p>如果在<code>if/else</code>很多的复杂场景下，编写测试代码的成本就很高，为了分支的覆盖率，编写的测试代码长度可能远远超过了被测试的代码。当然JUnit的@Parametered参数化注解或者DataProvider可以解决多数据分支问题，但是编写起来非常麻烦，而且不够直观，如果某个用例出错报错也不够详细。</p>\n<p>但是spock的where标签，基于spock得天独厚的<a href=\"https://spockframework.org/spock/docs/2.0/data_driven_testing.html#data-tables\">数据表语法糖</a>，测试代码覆盖所有的if分支逻辑，我们要做的仅仅是编写一份表格，就能完成一份复杂的分支测试，开发效率更高，更适合敏捷开发。</p>\n<hr>"},{"title":"博客终于搭好了","date":"2019-10-31T07:10:53.000Z","urlname":"blog-create","toc":true,"only":["none"],"_content":"\n博客搭好其实也有好几天了，但是被耽搁了一阵子，虽然最近很忙，但是还是下定决心来写一些东西，方便自己也方便他人。\n其实很多时候都想记录一些容易忘记的东西，但是总觉得写博客太麻烦，所以一拖再拖。现实习中，java后台一枚，开发使用SpringBoot，一起来学习吧！\n![](https://ae01.alicdn.com/kf/H87e9ec5282ad4ea08728ed6ab001fc0dC.jpg)\n<!--more-->\n","source":"_posts/博客终于搭好了.md","raw":"---\ntitle: 博客终于搭好了\ndate: 2019-10-31 15:10:53\nurlname: blog-create\ncategories: \n- 摸鱼日常\ntoc: true\nonly: \n- none\n---\n\n博客搭好其实也有好几天了，但是被耽搁了一阵子，虽然最近很忙，但是还是下定决心来写一些东西，方便自己也方便他人。\n其实很多时候都想记录一些容易忘记的东西，但是总觉得写博客太麻烦，所以一拖再拖。现实习中，java后台一枚，开发使用SpringBoot，一起来学习吧！\n![](https://ae01.alicdn.com/kf/H87e9ec5282ad4ea08728ed6ab001fc0dC.jpg)\n<!--more-->\n","slug":"博客终于搭好了","published":1,"updated":"2022-09-06T02:47:44.508Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7pmazb30004xxsr0i3p788g","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css\"><p>博客搭好其实也有好几天了，但是被耽搁了一阵子，虽然最近很忙，但是还是下定决心来写一些东西，方便自己也方便他人。<br>其实很多时候都想记录一些容易忘记的东西，但是总觉得写博客太麻烦，所以一拖再拖。现实习中，java后台一枚，开发使用SpringBoot，一起来学习吧！<br><img src=\"https://ae01.alicdn.com/kf/H87e9ec5282ad4ea08728ed6ab001fc0dC.jpg\"></p>\n<span id=\"more\"></span>\n","site":{"data":{}},"excerpt":"<p>博客搭好其实也有好几天了，但是被耽搁了一阵子，虽然最近很忙，但是还是下定决心来写一些东西，方便自己也方便他人。<br>其实很多时候都想记录一些容易忘记的东西，但是总觉得写博客太麻烦，所以一拖再拖。现实习中，java后台一枚，开发使用SpringBoot，一起来学习吧！<br><img src=\"https://ae01.alicdn.com/kf/H87e9ec5282ad4ea08728ed6ab001fc0dC.jpg\"></p>","more":""},{"title":"记录一次startUML破解","date":"2019-12-02T07:28:51.000Z","urlname":"startuml3.1.1-crack","copyright":true,"toc":true,"_content":"\n# 前言\n\n之前startUML还在3.1.0的时候其实已经破解过一次了，网上的破解教程其实也有很多。讲道理现在startUML的颜值还是很高的。startUML目前的版本都是通过electron打包生成的软件，纯前端开发的东西，并且代码清晰，该有注释有注释，业务逻辑一点混淆都没做，搞得我破解的怪不好意思的。我没有搞事情！![](https://i.loli.net/2019/12/02/VeT3DX9QKjMd1rN.jpg)但是因为最近StartUML 3.1.1版本发布，发现退出时会强制弹出更新，怪难受的，上次没注意选了是，结果瞬间给我装完了。更加增加了我去除更新的决心。\n\n\n<!--more-->\n\n# 破解步骤\n\n## 0x0.前置工作\n\n1.首先电脑应该安装node环境，这我就不介绍了，各位自行下载。\n2.安装asar包，为后面的解压app.asar做准备`npm install asar -g`，`-g`参数是全局安装，node的工作机制我也不介绍了（嘘，其实是我不懂，就是一个弱鸡前端）。\n3.找到startUML安装目录，找到resources文件夹，里面的app.asar就是我们的目标了。\n4.打开命令行使用`npm extract app.asar app`将app.asar的文件解压到app文件夹。\n\n## 0x1.破解license校验\n\nlicense校验的文件就在`app/src/engine/license-manager.js`中，打开文件我们可以看到这样一段代码:\n\n```js\n  /**\n   * Check license validity\n   *\n   * @return {Promise}\n   */\n  validate () {\n    return new Promise((resolve, reject) => {\n      try {\n        // Local check\n        var file = this.findLicense()\n        if (!file) {\n          reject('License key not found')\n        } else {\n          var data = fs.readFileSync(file, 'utf8')\n          licenseInfo = JSON.parse(data)\n          var base = SK + licenseInfo.name +\n            SK + licenseInfo.product + '-' + licenseInfo.licenseType +\n            SK + licenseInfo.quantity +\n            SK + licenseInfo.timestamp + SK\n          var _key = crypto.createHash('sha1').update(base).digest('hex').toUpperCase()\n          if (_key !== licenseInfo.licenseKey) {\n            reject('Invalid license key')\n          } else {\n            // Server check\n            $.post(app.config.validation_url, {licenseKey: licenseInfo.licenseKey})\n              .done(data => {\n                resolve(data)\n              })\n              .fail(err => {\n                if (err && err.status === 499) { /* License key not exists */\n                  reject(err)\n                } else {\n                  // If server is not available, assume that license key is valid\n                  resolve(licenseInfo)\n                }\n              })\n          }\n        }\n      } catch (err) {\n        reject(err)\n      }\n    })\n  }\n\n  checkLicenseValidity () {\n    this.validate().then(() => {\n      setStatus(this, true)\n    }, () => {\n      setStatus(this, false)\n      UnregisteredDialog.showDialog()\n    })\n  }\n```\n\n很显然这就是我们本次的目标惹！但是网上几乎全部的破解的步骤都是只改了2行代码:\n```js\n  checkLicenseValidity () {\n    this.validate().then(() => {\n      setStatus(this, true)\n    }, () => {\n      // 去除失败部分的逻辑\n      // setStatus(this, false)\n      // UnregisteredDialog.showDialog()\n\n      // 强行将失败部分逻辑的状态设置成与success部分一致\n      setStatus(this, true)\n    })\n  }\n```\n\n虽然这样确实so easy的就将startUML的license校验给干掉了，但是主动输入密钥的话还是会提示秘钥无效，破解的一点都不完整，这才不是我想要的破解！![](https://i.loli.net/2019/12/02/OsFe1HX45vhkY9t.jpg)（PS：小声逼逼，真的没见过比这个更容易的破解了）\n\n我们现在分析一下其余部分的代码\n```js\nvalidate () {\n    return new Promise((resolve, reject) => {\n      try {\n        // Local check\n        // 注释写着本地判断，如果license文件不存在则直接返回license无效的异常，否则则进入下一段逻辑\n        var file = this.findLicense()\n        if (!file) {\n          reject('License key not found')\n        } else {\n          // 读取license文件\n          var data = fs.readFileSync(file, 'utf8')\n          licenseInfo = JSON.parse(data)\n          // 将信息拼接字符串\n          var base = SK + licenseInfo.name +\n            SK + licenseInfo.product + '-' + licenseInfo.licenseType +\n            SK + licenseInfo.quantity +\n            SK + licenseInfo.timestamp + SK\n          // 字符串哈希并且转换大写\n          var _key = crypto.createHash('sha1').update(base).digest('hex').toUpperCase()\n          // 如果本地校验失败则不通过，否则进入服务器请求逻辑\n          if (_key !== licenseInfo.licenseKey) {\n            reject('Invalid license key')\n          } else {\n            // Server check\n            // 服务器判断\n            $.post(app.config.validation_url, {licenseKey: licenseInfo.licenseKey})\n              .done(data => {\n                resolve(data)\n              })\n              .fail(err => {\n                // 注释说的很清楚了，如果status === 499则代表license无效\n                if (err && err.status === 499) { /* License key not exists */\n                  reject(err)\n                } else {\n                  // If server is not available, assume that license key is valid\n                  // 如果没有返回异常并且返回值 status !== 499，则通过校验\n                  resolve(licenseInfo)\n                }\n              })\n          }\n        }\n      } catch (err) {\n        reject(err)\n      }\n    })\n  }\n```\n\n仔细分析一下代码，我们可以得知到了所有的判断逻辑，那么我们只需要将服务器相关的逻辑干掉即可，只保留读取文件以及回调的逻辑：\n\n```js\n  validate () {\n    return new Promise((resolve, reject) => {\n      try {\n        // Local check\n        var file = this.findLicense()\n        if (!file) {\n          reject('License key not found')\n        } else {\n          var data = fs.readFileSync(file, 'utf8')\n          licenseInfo = JSON.parse(data)\n          resolve(licenseInfo)\n        }\n      } catch (err) {\n        reject(err)\n      }\n    })\n  }\n```\n\n然后再将licenseKey注册部分逻辑解决即可，这是原逻辑：\n\n```js\n  /**\n   * Check the license key in server and store it as license.key file in local\n   *\n   * @param {string} licenseKey\n   */\n  register (licenseKey) {\n    return new Promise((resolve, reject) => {\n      $.post(app.config.validation_url, {licenseKey: licenseKey})\n        .done(data => {\n          var file = path.join(app.getUserPath(), '/license.key')\n          fs.writeFileSync(file, JSON.stringify(data, 2))\n          licenseInfo = data\n          setStatus(this, true)\n          resolve(data)\n        })\n        .fail(err => {\n          setStatus(this, false)\n          if (err.status === 499) { /* License key not exists */\n            reject('invalid')\n          } else {\n            reject()\n          }\n        })\n    })\n  }\n```\n\n这部分逻辑就是注册license的逻辑了，逻辑理解没有任何难度，是不是还记得上面有一段哈希的操作我们照着键值原样仿制一个license的json对象即可：\n\n```js\n  register (licenseKey) {\n    return new Promise((resolve, reject) => {\n        var data = {\n            name: \"Teble\",\n            product: \"Teble product\",\n            licenseType: \"PS\",\n            quantity: \"Teble Quantity\",\n            timestamp: \"1575275098\",\n            licenseKey: \"It's Cracked!!\",\n            crackedAuthor: \"Teble\"\n        }\n        var file = path.join(app.getUserPath(), '/license.key')\n        fs.writeFileSync(file, JSON.stringify(data, 2))\n        licenseInfo = data\n        setStatus(this, true)\n        resolve(data)\n    })\n  }\n```\n\n破解到这里可以基本告一段落了，软件是能使用了，但是更新的问题还没解决呢，如果startUML检测到版本有更新，或者手动误操作点击了更新，依旧是会进行后台下载不需要经过你二次同意的。\n\n## 0x2.去除启动更新检测\n\n这部分逻辑比我想象中的难找了一点，我还纳闷了一会，他到底是怎么做到关闭软件时再弹出安装操作的，然后经历了几次卸载，观察发现，当软件开启时就会检测是否有更新，如果有则立马开启后台下载，网速嗖嗖嗖的飚，路径下载到了`AppData\\Roaming\\StarUML`这个路径下，下载完成后，如果关闭软件，则会立马触发安装操作。\n\n这部分逻辑在`app/src/main-process/application.js`文件下注释一句：\n\n```js\nclass Application extends EventEmitter {\n\n  constructor () {\n    super()\n    // ...\n    this.loadExtensions()\n    this.handleCommands()\n    this.handleMessages()\n    this.handleEvents()\n\n    // Check for updates on start\n    // 启动时判断更新，注释就完事了\n    //autoUpdater.checkForUpdatesAndNotify()\n  }\n  // ...\n}\n```\n\n此外engin目录下还有一个`update-manager.js`，注释后，手动检测更新依旧返回已经是最新版无需更新的字样：\n\n```js\n/**\n * Update Manager\n */\nclass UpdateManager extends EventEmitter {\n\n  constructor () {\n    super()\n    this.state = 'no-update'\n    this.updateInfo = null\n    this.progress = null\n    // 注释这一句屏蔽手动更新检测\n    //this.handleMessages()\n  }\n```\n\n## 0x3.破解完成\n\n现在我们已经获得了破解完成，最后我们在根目录使用`asar pack app app.asar`将app文件夹打包成asar文件，最后将文件替换进原路径即可。\n\n# 结语\n\n破解方式至3.1.1依旧有效，不保证未来不会发生变化，仅供参考。\n\n曾经我们上课的时候，使用的startUML的颜值，那真的是一言难尽，可能我校用的还是1.0的上古版本（最主要是教材还对的上），太恐怖了，不过现在startUML 3.x的颜值真的很不错，QAQ虽然这也不是我破解的理由。好了好了，我这条咸鱼又滚回去过我的咸鱼生活惹！告辞~\n","source":"_posts/记录一次startUML破解.md","raw":"---\ntitle: 记录一次startUML破解\ndate: 2019-12-02 15:28:51\nurlname: startuml3.1.1-crack\ncopyright: true\ncategories: \n- 摸鱼日常\ntags:\n- StartUML\n- 破解\ntoc: true\n---\n\n# 前言\n\n之前startUML还在3.1.0的时候其实已经破解过一次了，网上的破解教程其实也有很多。讲道理现在startUML的颜值还是很高的。startUML目前的版本都是通过electron打包生成的软件，纯前端开发的东西，并且代码清晰，该有注释有注释，业务逻辑一点混淆都没做，搞得我破解的怪不好意思的。我没有搞事情！![](https://i.loli.net/2019/12/02/VeT3DX9QKjMd1rN.jpg)但是因为最近StartUML 3.1.1版本发布，发现退出时会强制弹出更新，怪难受的，上次没注意选了是，结果瞬间给我装完了。更加增加了我去除更新的决心。\n\n\n<!--more-->\n\n# 破解步骤\n\n## 0x0.前置工作\n\n1.首先电脑应该安装node环境，这我就不介绍了，各位自行下载。\n2.安装asar包，为后面的解压app.asar做准备`npm install asar -g`，`-g`参数是全局安装，node的工作机制我也不介绍了（嘘，其实是我不懂，就是一个弱鸡前端）。\n3.找到startUML安装目录，找到resources文件夹，里面的app.asar就是我们的目标了。\n4.打开命令行使用`npm extract app.asar app`将app.asar的文件解压到app文件夹。\n\n## 0x1.破解license校验\n\nlicense校验的文件就在`app/src/engine/license-manager.js`中，打开文件我们可以看到这样一段代码:\n\n```js\n  /**\n   * Check license validity\n   *\n   * @return {Promise}\n   */\n  validate () {\n    return new Promise((resolve, reject) => {\n      try {\n        // Local check\n        var file = this.findLicense()\n        if (!file) {\n          reject('License key not found')\n        } else {\n          var data = fs.readFileSync(file, 'utf8')\n          licenseInfo = JSON.parse(data)\n          var base = SK + licenseInfo.name +\n            SK + licenseInfo.product + '-' + licenseInfo.licenseType +\n            SK + licenseInfo.quantity +\n            SK + licenseInfo.timestamp + SK\n          var _key = crypto.createHash('sha1').update(base).digest('hex').toUpperCase()\n          if (_key !== licenseInfo.licenseKey) {\n            reject('Invalid license key')\n          } else {\n            // Server check\n            $.post(app.config.validation_url, {licenseKey: licenseInfo.licenseKey})\n              .done(data => {\n                resolve(data)\n              })\n              .fail(err => {\n                if (err && err.status === 499) { /* License key not exists */\n                  reject(err)\n                } else {\n                  // If server is not available, assume that license key is valid\n                  resolve(licenseInfo)\n                }\n              })\n          }\n        }\n      } catch (err) {\n        reject(err)\n      }\n    })\n  }\n\n  checkLicenseValidity () {\n    this.validate().then(() => {\n      setStatus(this, true)\n    }, () => {\n      setStatus(this, false)\n      UnregisteredDialog.showDialog()\n    })\n  }\n```\n\n很显然这就是我们本次的目标惹！但是网上几乎全部的破解的步骤都是只改了2行代码:\n```js\n  checkLicenseValidity () {\n    this.validate().then(() => {\n      setStatus(this, true)\n    }, () => {\n      // 去除失败部分的逻辑\n      // setStatus(this, false)\n      // UnregisteredDialog.showDialog()\n\n      // 强行将失败部分逻辑的状态设置成与success部分一致\n      setStatus(this, true)\n    })\n  }\n```\n\n虽然这样确实so easy的就将startUML的license校验给干掉了，但是主动输入密钥的话还是会提示秘钥无效，破解的一点都不完整，这才不是我想要的破解！![](https://i.loli.net/2019/12/02/OsFe1HX45vhkY9t.jpg)（PS：小声逼逼，真的没见过比这个更容易的破解了）\n\n我们现在分析一下其余部分的代码\n```js\nvalidate () {\n    return new Promise((resolve, reject) => {\n      try {\n        // Local check\n        // 注释写着本地判断，如果license文件不存在则直接返回license无效的异常，否则则进入下一段逻辑\n        var file = this.findLicense()\n        if (!file) {\n          reject('License key not found')\n        } else {\n          // 读取license文件\n          var data = fs.readFileSync(file, 'utf8')\n          licenseInfo = JSON.parse(data)\n          // 将信息拼接字符串\n          var base = SK + licenseInfo.name +\n            SK + licenseInfo.product + '-' + licenseInfo.licenseType +\n            SK + licenseInfo.quantity +\n            SK + licenseInfo.timestamp + SK\n          // 字符串哈希并且转换大写\n          var _key = crypto.createHash('sha1').update(base).digest('hex').toUpperCase()\n          // 如果本地校验失败则不通过，否则进入服务器请求逻辑\n          if (_key !== licenseInfo.licenseKey) {\n            reject('Invalid license key')\n          } else {\n            // Server check\n            // 服务器判断\n            $.post(app.config.validation_url, {licenseKey: licenseInfo.licenseKey})\n              .done(data => {\n                resolve(data)\n              })\n              .fail(err => {\n                // 注释说的很清楚了，如果status === 499则代表license无效\n                if (err && err.status === 499) { /* License key not exists */\n                  reject(err)\n                } else {\n                  // If server is not available, assume that license key is valid\n                  // 如果没有返回异常并且返回值 status !== 499，则通过校验\n                  resolve(licenseInfo)\n                }\n              })\n          }\n        }\n      } catch (err) {\n        reject(err)\n      }\n    })\n  }\n```\n\n仔细分析一下代码，我们可以得知到了所有的判断逻辑，那么我们只需要将服务器相关的逻辑干掉即可，只保留读取文件以及回调的逻辑：\n\n```js\n  validate () {\n    return new Promise((resolve, reject) => {\n      try {\n        // Local check\n        var file = this.findLicense()\n        if (!file) {\n          reject('License key not found')\n        } else {\n          var data = fs.readFileSync(file, 'utf8')\n          licenseInfo = JSON.parse(data)\n          resolve(licenseInfo)\n        }\n      } catch (err) {\n        reject(err)\n      }\n    })\n  }\n```\n\n然后再将licenseKey注册部分逻辑解决即可，这是原逻辑：\n\n```js\n  /**\n   * Check the license key in server and store it as license.key file in local\n   *\n   * @param {string} licenseKey\n   */\n  register (licenseKey) {\n    return new Promise((resolve, reject) => {\n      $.post(app.config.validation_url, {licenseKey: licenseKey})\n        .done(data => {\n          var file = path.join(app.getUserPath(), '/license.key')\n          fs.writeFileSync(file, JSON.stringify(data, 2))\n          licenseInfo = data\n          setStatus(this, true)\n          resolve(data)\n        })\n        .fail(err => {\n          setStatus(this, false)\n          if (err.status === 499) { /* License key not exists */\n            reject('invalid')\n          } else {\n            reject()\n          }\n        })\n    })\n  }\n```\n\n这部分逻辑就是注册license的逻辑了，逻辑理解没有任何难度，是不是还记得上面有一段哈希的操作我们照着键值原样仿制一个license的json对象即可：\n\n```js\n  register (licenseKey) {\n    return new Promise((resolve, reject) => {\n        var data = {\n            name: \"Teble\",\n            product: \"Teble product\",\n            licenseType: \"PS\",\n            quantity: \"Teble Quantity\",\n            timestamp: \"1575275098\",\n            licenseKey: \"It's Cracked!!\",\n            crackedAuthor: \"Teble\"\n        }\n        var file = path.join(app.getUserPath(), '/license.key')\n        fs.writeFileSync(file, JSON.stringify(data, 2))\n        licenseInfo = data\n        setStatus(this, true)\n        resolve(data)\n    })\n  }\n```\n\n破解到这里可以基本告一段落了，软件是能使用了，但是更新的问题还没解决呢，如果startUML检测到版本有更新，或者手动误操作点击了更新，依旧是会进行后台下载不需要经过你二次同意的。\n\n## 0x2.去除启动更新检测\n\n这部分逻辑比我想象中的难找了一点，我还纳闷了一会，他到底是怎么做到关闭软件时再弹出安装操作的，然后经历了几次卸载，观察发现，当软件开启时就会检测是否有更新，如果有则立马开启后台下载，网速嗖嗖嗖的飚，路径下载到了`AppData\\Roaming\\StarUML`这个路径下，下载完成后，如果关闭软件，则会立马触发安装操作。\n\n这部分逻辑在`app/src/main-process/application.js`文件下注释一句：\n\n```js\nclass Application extends EventEmitter {\n\n  constructor () {\n    super()\n    // ...\n    this.loadExtensions()\n    this.handleCommands()\n    this.handleMessages()\n    this.handleEvents()\n\n    // Check for updates on start\n    // 启动时判断更新，注释就完事了\n    //autoUpdater.checkForUpdatesAndNotify()\n  }\n  // ...\n}\n```\n\n此外engin目录下还有一个`update-manager.js`，注释后，手动检测更新依旧返回已经是最新版无需更新的字样：\n\n```js\n/**\n * Update Manager\n */\nclass UpdateManager extends EventEmitter {\n\n  constructor () {\n    super()\n    this.state = 'no-update'\n    this.updateInfo = null\n    this.progress = null\n    // 注释这一句屏蔽手动更新检测\n    //this.handleMessages()\n  }\n```\n\n## 0x3.破解完成\n\n现在我们已经获得了破解完成，最后我们在根目录使用`asar pack app app.asar`将app文件夹打包成asar文件，最后将文件替换进原路径即可。\n\n# 结语\n\n破解方式至3.1.1依旧有效，不保证未来不会发生变化，仅供参考。\n\n曾经我们上课的时候，使用的startUML的颜值，那真的是一言难尽，可能我校用的还是1.0的上古版本（最主要是教材还对的上），太恐怖了，不过现在startUML 3.x的颜值真的很不错，QAQ虽然这也不是我破解的理由。好了好了，我这条咸鱼又滚回去过我的咸鱼生活惹！告辞~\n","slug":"记录一次startUML破解","published":1,"updated":"2022-09-06T02:47:44.508Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7pmazb30005xxsr5llfhtol","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css\"><h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>之前startUML还在3.1.0的时候其实已经破解过一次了，网上的破解教程其实也有很多。讲道理现在startUML的颜值还是很高的。startUML目前的版本都是通过electron打包生成的软件，纯前端开发的东西，并且代码清晰，该有注释有注释，业务逻辑一点混淆都没做，搞得我破解的怪不好意思的。我没有搞事情！<img src=\"https://i.loli.net/2019/12/02/VeT3DX9QKjMd1rN.jpg\">但是因为最近StartUML 3.1.1版本发布，发现退出时会强制弹出更新，怪难受的，上次没注意选了是，结果瞬间给我装完了。更加增加了我去除更新的决心。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"破解步骤\"><a href=\"#破解步骤\" class=\"headerlink\" title=\"破解步骤\"></a>破解步骤</h1><h2 id=\"0x0-前置工作\"><a href=\"#0x0-前置工作\" class=\"headerlink\" title=\"0x0.前置工作\"></a>0x0.前置工作</h2><p>1.首先电脑应该安装node环境，这我就不介绍了，各位自行下载。<br>2.安装asar包，为后面的解压app.asar做准备<code>npm install asar -g</code>，<code>-g</code>参数是全局安装，node的工作机制我也不介绍了（嘘，其实是我不懂，就是一个弱鸡前端）。<br>3.找到startUML安装目录，找到resources文件夹，里面的app.asar就是我们的目标了。<br>4.打开命令行使用<code>npm extract app.asar app</code>将app.asar的文件解压到app文件夹。</p>\n<h2 id=\"0x1-破解license校验\"><a href=\"#0x1-破解license校验\" class=\"headerlink\" title=\"0x1.破解license校验\"></a>0x1.破解license校验</h2><p>license校验的文件就在<code>app/src/engine/license-manager.js</code>中，打开文件我们可以看到这样一段代码:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Check license validity</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">Promise</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">validate () &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Local check</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> file = <span class=\"variable language_\">this</span>.<span class=\"title function_\">findLicense</span>()</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!file) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">reject</span>(<span class=\"string\">&#x27;License key not found&#x27;</span>)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> data = fs.<span class=\"title function_\">readFileSync</span>(file, <span class=\"string\">&#x27;utf8&#x27;</span>)</span><br><span class=\"line\">        licenseInfo = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(data)</span><br><span class=\"line\">        <span class=\"keyword\">var</span> base = <span class=\"variable constant_\">SK</span> + licenseInfo.<span class=\"property\">name</span> +</span><br><span class=\"line\">          <span class=\"variable constant_\">SK</span> + licenseInfo.<span class=\"property\">product</span> + <span class=\"string\">&#x27;-&#x27;</span> + licenseInfo.<span class=\"property\">licenseType</span> +</span><br><span class=\"line\">          <span class=\"variable constant_\">SK</span> + licenseInfo.<span class=\"property\">quantity</span> +</span><br><span class=\"line\">          <span class=\"variable constant_\">SK</span> + licenseInfo.<span class=\"property\">timestamp</span> + <span class=\"variable constant_\">SK</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> _key = crypto.<span class=\"title function_\">createHash</span>(<span class=\"string\">&#x27;sha1&#x27;</span>).<span class=\"title function_\">update</span>(base).<span class=\"title function_\">digest</span>(<span class=\"string\">&#x27;hex&#x27;</span>).<span class=\"title function_\">toUpperCase</span>()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_key !== licenseInfo.<span class=\"property\">licenseKey</span>) &#123;</span><br><span class=\"line\">          <span class=\"title function_\">reject</span>(<span class=\"string\">&#x27;Invalid license key&#x27;</span>)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">// Server check</span></span><br><span class=\"line\">          $.<span class=\"title function_\">post</span>(app.<span class=\"property\">config</span>.<span class=\"property\">validation_url</span>, &#123;<span class=\"attr\">licenseKey</span>: licenseInfo.<span class=\"property\">licenseKey</span>&#125;)</span><br><span class=\"line\">            .<span class=\"title function_\">done</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"title function_\">resolve</span>(data)</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            .<span class=\"title function_\">fail</span>(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">if</span> (err &amp;&amp; err.<span class=\"property\">status</span> === <span class=\"number\">499</span>) &#123; <span class=\"comment\">/* License key not exists */</span></span><br><span class=\"line\">                <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">              &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// If server is not available, assume that license key is valid</span></span><br><span class=\"line\">                <span class=\"title function_\">resolve</span>(licenseInfo)</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">checkLicenseValidity () &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">validate</span>().<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">setStatus</span>(<span class=\"variable language_\">this</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">  &#125;, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">setStatus</span>(<span class=\"variable language_\">this</span>, <span class=\"literal\">false</span>)</span><br><span class=\"line\">    <span class=\"title class_\">UnregisteredDialog</span>.<span class=\"title function_\">showDialog</span>()</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>很显然这就是我们本次的目标惹！但是网上几乎全部的破解的步骤都是只改了2行代码:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">checkLicenseValidity () &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">validate</span>().<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">setStatus</span>(<span class=\"variable language_\">this</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">  &#125;, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 去除失败部分的逻辑</span></span><br><span class=\"line\">    <span class=\"comment\">// setStatus(this, false)</span></span><br><span class=\"line\">    <span class=\"comment\">// UnregisteredDialog.showDialog()</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 强行将失败部分逻辑的状态设置成与success部分一致</span></span><br><span class=\"line\">    <span class=\"title function_\">setStatus</span>(<span class=\"variable language_\">this</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>虽然这样确实so easy的就将startUML的license校验给干掉了，但是主动输入密钥的话还是会提示秘钥无效，破解的一点都不完整，这才不是我想要的破解！<img src=\"https://i.loli.net/2019/12/02/OsFe1HX45vhkY9t.jpg\">（PS：小声逼逼，真的没见过比这个更容易的破解了）</p>\n<p>我们现在分析一下其余部分的代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">validate () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Local check</span></span><br><span class=\"line\">        <span class=\"comment\">// 注释写着本地判断，如果license文件不存在则直接返回license无效的异常，否则则进入下一段逻辑</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> file = <span class=\"variable language_\">this</span>.<span class=\"title function_\">findLicense</span>()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!file) &#123;</span><br><span class=\"line\">          <span class=\"title function_\">reject</span>(<span class=\"string\">&#x27;License key not found&#x27;</span>)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 读取license文件</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> data = fs.<span class=\"title function_\">readFileSync</span>(file, <span class=\"string\">&#x27;utf8&#x27;</span>)</span><br><span class=\"line\">          licenseInfo = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(data)</span><br><span class=\"line\">          <span class=\"comment\">// 将信息拼接字符串</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> base = <span class=\"variable constant_\">SK</span> + licenseInfo.<span class=\"property\">name</span> +</span><br><span class=\"line\">            <span class=\"variable constant_\">SK</span> + licenseInfo.<span class=\"property\">product</span> + <span class=\"string\">&#x27;-&#x27;</span> + licenseInfo.<span class=\"property\">licenseType</span> +</span><br><span class=\"line\">            <span class=\"variable constant_\">SK</span> + licenseInfo.<span class=\"property\">quantity</span> +</span><br><span class=\"line\">            <span class=\"variable constant_\">SK</span> + licenseInfo.<span class=\"property\">timestamp</span> + <span class=\"variable constant_\">SK</span></span><br><span class=\"line\">          <span class=\"comment\">// 字符串哈希并且转换大写</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> _key = crypto.<span class=\"title function_\">createHash</span>(<span class=\"string\">&#x27;sha1&#x27;</span>).<span class=\"title function_\">update</span>(base).<span class=\"title function_\">digest</span>(<span class=\"string\">&#x27;hex&#x27;</span>).<span class=\"title function_\">toUpperCase</span>()</span><br><span class=\"line\">          <span class=\"comment\">// 如果本地校验失败则不通过，否则进入服务器请求逻辑</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (_key !== licenseInfo.<span class=\"property\">licenseKey</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">reject</span>(<span class=\"string\">&#x27;Invalid license key&#x27;</span>)</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// Server check</span></span><br><span class=\"line\">            <span class=\"comment\">// 服务器判断</span></span><br><span class=\"line\">            $.<span class=\"title function_\">post</span>(app.<span class=\"property\">config</span>.<span class=\"property\">validation_url</span>, &#123;<span class=\"attr\">licenseKey</span>: licenseInfo.<span class=\"property\">licenseKey</span>&#125;)</span><br><span class=\"line\">              .<span class=\"title function_\">done</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"title function_\">resolve</span>(data)</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">              .<span class=\"title function_\">fail</span>(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 注释说的很清楚了，如果status === 499则代表license无效</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (err &amp;&amp; err.<span class=\"property\">status</span> === <span class=\"number\">499</span>) &#123; <span class=\"comment\">/* License key not exists */</span></span><br><span class=\"line\">                  <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                  <span class=\"comment\">// If server is not available, assume that license key is valid</span></span><br><span class=\"line\">                  <span class=\"comment\">// 如果没有返回异常并且返回值 status !== 499，则通过校验</span></span><br><span class=\"line\">                  <span class=\"title function_\">resolve</span>(licenseInfo)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>仔细分析一下代码，我们可以得知到了所有的判断逻辑，那么我们只需要将服务器相关的逻辑干掉即可，只保留读取文件以及回调的逻辑：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">validate () &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Local check</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> file = <span class=\"variable language_\">this</span>.<span class=\"title function_\">findLicense</span>()</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!file) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">reject</span>(<span class=\"string\">&#x27;License key not found&#x27;</span>)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> data = fs.<span class=\"title function_\">readFileSync</span>(file, <span class=\"string\">&#x27;utf8&#x27;</span>)</span><br><span class=\"line\">        licenseInfo = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(data)</span><br><span class=\"line\">        <span class=\"title function_\">resolve</span>(licenseInfo)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后再将licenseKey注册部分逻辑解决即可，这是原逻辑：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Check the license key in server and store it as license.key file in local</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">licenseKey</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">register (licenseKey) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    $.<span class=\"title function_\">post</span>(app.<span class=\"property\">config</span>.<span class=\"property\">validation_url</span>, &#123;<span class=\"attr\">licenseKey</span>: licenseKey&#125;)</span><br><span class=\"line\">      .<span class=\"title function_\">done</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> file = path.<span class=\"title function_\">join</span>(app.<span class=\"title function_\">getUserPath</span>(), <span class=\"string\">&#x27;/license.key&#x27;</span>)</span><br><span class=\"line\">        fs.<span class=\"title function_\">writeFileSync</span>(file, <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(data, <span class=\"number\">2</span>))</span><br><span class=\"line\">        licenseInfo = data</span><br><span class=\"line\">        <span class=\"title function_\">setStatus</span>(<span class=\"variable language_\">this</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">        <span class=\"title function_\">resolve</span>(data)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      .<span class=\"title function_\">fail</span>(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">setStatus</span>(<span class=\"variable language_\">this</span>, <span class=\"literal\">false</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err.<span class=\"property\">status</span> === <span class=\"number\">499</span>) &#123; <span class=\"comment\">/* License key not exists */</span></span><br><span class=\"line\">          <span class=\"title function_\">reject</span>(<span class=\"string\">&#x27;invalid&#x27;</span>)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"title function_\">reject</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这部分逻辑就是注册license的逻辑了，逻辑理解没有任何难度，是不是还记得上面有一段哈希的操作我们照着键值原样仿制一个license的json对象即可：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">register (licenseKey) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> data = &#123;</span><br><span class=\"line\">          <span class=\"attr\">name</span>: <span class=\"string\">&quot;Teble&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">product</span>: <span class=\"string\">&quot;Teble product&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">licenseType</span>: <span class=\"string\">&quot;PS&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">quantity</span>: <span class=\"string\">&quot;Teble Quantity&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">timestamp</span>: <span class=\"string\">&quot;1575275098&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">licenseKey</span>: <span class=\"string\">&quot;It&#x27;s Cracked!!&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">crackedAuthor</span>: <span class=\"string\">&quot;Teble&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> file = path.<span class=\"title function_\">join</span>(app.<span class=\"title function_\">getUserPath</span>(), <span class=\"string\">&#x27;/license.key&#x27;</span>)</span><br><span class=\"line\">      fs.<span class=\"title function_\">writeFileSync</span>(file, <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(data, <span class=\"number\">2</span>))</span><br><span class=\"line\">      licenseInfo = data</span><br><span class=\"line\">      <span class=\"title function_\">setStatus</span>(<span class=\"variable language_\">this</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">      <span class=\"title function_\">resolve</span>(data)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>破解到这里可以基本告一段落了，软件是能使用了，但是更新的问题还没解决呢，如果startUML检测到版本有更新，或者手动误操作点击了更新，依旧是会进行后台下载不需要经过你二次同意的。</p>\n<h2 id=\"0x2-去除启动更新检测\"><a href=\"#0x2-去除启动更新检测\" class=\"headerlink\" title=\"0x2.去除启动更新检测\"></a>0x2.去除启动更新检测</h2><p>这部分逻辑比我想象中的难找了一点，我还纳闷了一会，他到底是怎么做到关闭软件时再弹出安装操作的，然后经历了几次卸载，观察发现，当软件开启时就会检测是否有更新，如果有则立马开启后台下载，网速嗖嗖嗖的飚，路径下载到了<code>AppData\\Roaming\\StarUML</code>这个路径下，下载完成后，如果关闭软件，则会立马触发安装操作。</p>\n<p>这部分逻辑在<code>app/src/main-process/application.js</code>文件下注释一句：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Application</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">EventEmitter</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span> () &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>()</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">loadExtensions</span>()</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">handleCommands</span>()</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">handleMessages</span>()</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">handleEvents</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Check for updates on start</span></span><br><span class=\"line\">    <span class=\"comment\">// 启动时判断更新，注释就完事了</span></span><br><span class=\"line\">    <span class=\"comment\">//autoUpdater.checkForUpdatesAndNotify()</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>此外engin目录下还有一个<code>update-manager.js</code>，注释后，手动检测更新依旧返回已经是最新版无需更新的字样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Update Manager</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UpdateManager</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">EventEmitter</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span> () &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>()</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">state</span> = <span class=\"string\">&#x27;no-update&#x27;</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">updateInfo</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">progress</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"comment\">// 注释这一句屏蔽手动更新检测</span></span><br><span class=\"line\">    <span class=\"comment\">//this.handleMessages()</span></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x3-破解完成\"><a href=\"#0x3-破解完成\" class=\"headerlink\" title=\"0x3.破解完成\"></a>0x3.破解完成</h2><p>现在我们已经获得了破解完成，最后我们在根目录使用<code>asar pack app app.asar</code>将app文件夹打包成asar文件，最后将文件替换进原路径即可。</p>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>破解方式至3.1.1依旧有效，不保证未来不会发生变化，仅供参考。</p>\n<p>曾经我们上课的时候，使用的startUML的颜值，那真的是一言难尽，可能我校用的还是1.0的上古版本（最主要是教材还对的上），太恐怖了，不过现在startUML 3.x的颜值真的很不错，QAQ虽然这也不是我破解的理由。好了好了，我这条咸鱼又滚回去过我的咸鱼生活惹！告辞~</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>之前startUML还在3.1.0的时候其实已经破解过一次了，网上的破解教程其实也有很多。讲道理现在startUML的颜值还是很高的。startUML目前的版本都是通过electron打包生成的软件，纯前端开发的东西，并且代码清晰，该有注释有注释，业务逻辑一点混淆都没做，搞得我破解的怪不好意思的。我没有搞事情！<img src=\"https://i.loli.net/2019/12/02/VeT3DX9QKjMd1rN.jpg\">但是因为最近StartUML 3.1.1版本发布，发现退出时会强制弹出更新，怪难受的，上次没注意选了是，结果瞬间给我装完了。更加增加了我去除更新的决心。</p>","more":"<h1 id=\"破解步骤\"><a href=\"#破解步骤\" class=\"headerlink\" title=\"破解步骤\"></a>破解步骤</h1><h2 id=\"0x0-前置工作\"><a href=\"#0x0-前置工作\" class=\"headerlink\" title=\"0x0.前置工作\"></a>0x0.前置工作</h2><p>1.首先电脑应该安装node环境，这我就不介绍了，各位自行下载。<br>2.安装asar包，为后面的解压app.asar做准备<code>npm install asar -g</code>，<code>-g</code>参数是全局安装，node的工作机制我也不介绍了（嘘，其实是我不懂，就是一个弱鸡前端）。<br>3.找到startUML安装目录，找到resources文件夹，里面的app.asar就是我们的目标了。<br>4.打开命令行使用<code>npm extract app.asar app</code>将app.asar的文件解压到app文件夹。</p>\n<h2 id=\"0x1-破解license校验\"><a href=\"#0x1-破解license校验\" class=\"headerlink\" title=\"0x1.破解license校验\"></a>0x1.破解license校验</h2><p>license校验的文件就在<code>app/src/engine/license-manager.js</code>中，打开文件我们可以看到这样一段代码:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Check license validity</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">Promise</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">validate () &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Local check</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> file = <span class=\"variable language_\">this</span>.<span class=\"title function_\">findLicense</span>()</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!file) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">reject</span>(<span class=\"string\">&#x27;License key not found&#x27;</span>)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> data = fs.<span class=\"title function_\">readFileSync</span>(file, <span class=\"string\">&#x27;utf8&#x27;</span>)</span><br><span class=\"line\">        licenseInfo = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(data)</span><br><span class=\"line\">        <span class=\"keyword\">var</span> base = <span class=\"variable constant_\">SK</span> + licenseInfo.<span class=\"property\">name</span> +</span><br><span class=\"line\">          <span class=\"variable constant_\">SK</span> + licenseInfo.<span class=\"property\">product</span> + <span class=\"string\">&#x27;-&#x27;</span> + licenseInfo.<span class=\"property\">licenseType</span> +</span><br><span class=\"line\">          <span class=\"variable constant_\">SK</span> + licenseInfo.<span class=\"property\">quantity</span> +</span><br><span class=\"line\">          <span class=\"variable constant_\">SK</span> + licenseInfo.<span class=\"property\">timestamp</span> + <span class=\"variable constant_\">SK</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> _key = crypto.<span class=\"title function_\">createHash</span>(<span class=\"string\">&#x27;sha1&#x27;</span>).<span class=\"title function_\">update</span>(base).<span class=\"title function_\">digest</span>(<span class=\"string\">&#x27;hex&#x27;</span>).<span class=\"title function_\">toUpperCase</span>()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_key !== licenseInfo.<span class=\"property\">licenseKey</span>) &#123;</span><br><span class=\"line\">          <span class=\"title function_\">reject</span>(<span class=\"string\">&#x27;Invalid license key&#x27;</span>)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">// Server check</span></span><br><span class=\"line\">          $.<span class=\"title function_\">post</span>(app.<span class=\"property\">config</span>.<span class=\"property\">validation_url</span>, &#123;<span class=\"attr\">licenseKey</span>: licenseInfo.<span class=\"property\">licenseKey</span>&#125;)</span><br><span class=\"line\">            .<span class=\"title function_\">done</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"title function_\">resolve</span>(data)</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            .<span class=\"title function_\">fail</span>(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">if</span> (err &amp;&amp; err.<span class=\"property\">status</span> === <span class=\"number\">499</span>) &#123; <span class=\"comment\">/* License key not exists */</span></span><br><span class=\"line\">                <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">              &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// If server is not available, assume that license key is valid</span></span><br><span class=\"line\">                <span class=\"title function_\">resolve</span>(licenseInfo)</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">checkLicenseValidity () &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">validate</span>().<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">setStatus</span>(<span class=\"variable language_\">this</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">  &#125;, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">setStatus</span>(<span class=\"variable language_\">this</span>, <span class=\"literal\">false</span>)</span><br><span class=\"line\">    <span class=\"title class_\">UnregisteredDialog</span>.<span class=\"title function_\">showDialog</span>()</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>很显然这就是我们本次的目标惹！但是网上几乎全部的破解的步骤都是只改了2行代码:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">checkLicenseValidity () &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">validate</span>().<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">setStatus</span>(<span class=\"variable language_\">this</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">  &#125;, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 去除失败部分的逻辑</span></span><br><span class=\"line\">    <span class=\"comment\">// setStatus(this, false)</span></span><br><span class=\"line\">    <span class=\"comment\">// UnregisteredDialog.showDialog()</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 强行将失败部分逻辑的状态设置成与success部分一致</span></span><br><span class=\"line\">    <span class=\"title function_\">setStatus</span>(<span class=\"variable language_\">this</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>虽然这样确实so easy的就将startUML的license校验给干掉了，但是主动输入密钥的话还是会提示秘钥无效，破解的一点都不完整，这才不是我想要的破解！<img src=\"https://i.loli.net/2019/12/02/OsFe1HX45vhkY9t.jpg\">（PS：小声逼逼，真的没见过比这个更容易的破解了）</p>\n<p>我们现在分析一下其余部分的代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">validate () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Local check</span></span><br><span class=\"line\">        <span class=\"comment\">// 注释写着本地判断，如果license文件不存在则直接返回license无效的异常，否则则进入下一段逻辑</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> file = <span class=\"variable language_\">this</span>.<span class=\"title function_\">findLicense</span>()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!file) &#123;</span><br><span class=\"line\">          <span class=\"title function_\">reject</span>(<span class=\"string\">&#x27;License key not found&#x27;</span>)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 读取license文件</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> data = fs.<span class=\"title function_\">readFileSync</span>(file, <span class=\"string\">&#x27;utf8&#x27;</span>)</span><br><span class=\"line\">          licenseInfo = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(data)</span><br><span class=\"line\">          <span class=\"comment\">// 将信息拼接字符串</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> base = <span class=\"variable constant_\">SK</span> + licenseInfo.<span class=\"property\">name</span> +</span><br><span class=\"line\">            <span class=\"variable constant_\">SK</span> + licenseInfo.<span class=\"property\">product</span> + <span class=\"string\">&#x27;-&#x27;</span> + licenseInfo.<span class=\"property\">licenseType</span> +</span><br><span class=\"line\">            <span class=\"variable constant_\">SK</span> + licenseInfo.<span class=\"property\">quantity</span> +</span><br><span class=\"line\">            <span class=\"variable constant_\">SK</span> + licenseInfo.<span class=\"property\">timestamp</span> + <span class=\"variable constant_\">SK</span></span><br><span class=\"line\">          <span class=\"comment\">// 字符串哈希并且转换大写</span></span><br><span class=\"line\">          <span class=\"keyword\">var</span> _key = crypto.<span class=\"title function_\">createHash</span>(<span class=\"string\">&#x27;sha1&#x27;</span>).<span class=\"title function_\">update</span>(base).<span class=\"title function_\">digest</span>(<span class=\"string\">&#x27;hex&#x27;</span>).<span class=\"title function_\">toUpperCase</span>()</span><br><span class=\"line\">          <span class=\"comment\">// 如果本地校验失败则不通过，否则进入服务器请求逻辑</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (_key !== licenseInfo.<span class=\"property\">licenseKey</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">reject</span>(<span class=\"string\">&#x27;Invalid license key&#x27;</span>)</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// Server check</span></span><br><span class=\"line\">            <span class=\"comment\">// 服务器判断</span></span><br><span class=\"line\">            $.<span class=\"title function_\">post</span>(app.<span class=\"property\">config</span>.<span class=\"property\">validation_url</span>, &#123;<span class=\"attr\">licenseKey</span>: licenseInfo.<span class=\"property\">licenseKey</span>&#125;)</span><br><span class=\"line\">              .<span class=\"title function_\">done</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"title function_\">resolve</span>(data)</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">              .<span class=\"title function_\">fail</span>(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 注释说的很清楚了，如果status === 499则代表license无效</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (err &amp;&amp; err.<span class=\"property\">status</span> === <span class=\"number\">499</span>) &#123; <span class=\"comment\">/* License key not exists */</span></span><br><span class=\"line\">                  <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                  <span class=\"comment\">// If server is not available, assume that license key is valid</span></span><br><span class=\"line\">                  <span class=\"comment\">// 如果没有返回异常并且返回值 status !== 499，则通过校验</span></span><br><span class=\"line\">                  <span class=\"title function_\">resolve</span>(licenseInfo)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>仔细分析一下代码，我们可以得知到了所有的判断逻辑，那么我们只需要将服务器相关的逻辑干掉即可，只保留读取文件以及回调的逻辑：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">validate () &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Local check</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> file = <span class=\"variable language_\">this</span>.<span class=\"title function_\">findLicense</span>()</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!file) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">reject</span>(<span class=\"string\">&#x27;License key not found&#x27;</span>)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> data = fs.<span class=\"title function_\">readFileSync</span>(file, <span class=\"string\">&#x27;utf8&#x27;</span>)</span><br><span class=\"line\">        licenseInfo = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(data)</span><br><span class=\"line\">        <span class=\"title function_\">resolve</span>(licenseInfo)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后再将licenseKey注册部分逻辑解决即可，这是原逻辑：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Check the license key in server and store it as license.key file in local</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">licenseKey</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">register (licenseKey) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    $.<span class=\"title function_\">post</span>(app.<span class=\"property\">config</span>.<span class=\"property\">validation_url</span>, &#123;<span class=\"attr\">licenseKey</span>: licenseKey&#125;)</span><br><span class=\"line\">      .<span class=\"title function_\">done</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> file = path.<span class=\"title function_\">join</span>(app.<span class=\"title function_\">getUserPath</span>(), <span class=\"string\">&#x27;/license.key&#x27;</span>)</span><br><span class=\"line\">        fs.<span class=\"title function_\">writeFileSync</span>(file, <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(data, <span class=\"number\">2</span>))</span><br><span class=\"line\">        licenseInfo = data</span><br><span class=\"line\">        <span class=\"title function_\">setStatus</span>(<span class=\"variable language_\">this</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">        <span class=\"title function_\">resolve</span>(data)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      .<span class=\"title function_\">fail</span>(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">setStatus</span>(<span class=\"variable language_\">this</span>, <span class=\"literal\">false</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err.<span class=\"property\">status</span> === <span class=\"number\">499</span>) &#123; <span class=\"comment\">/* License key not exists */</span></span><br><span class=\"line\">          <span class=\"title function_\">reject</span>(<span class=\"string\">&#x27;invalid&#x27;</span>)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"title function_\">reject</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这部分逻辑就是注册license的逻辑了，逻辑理解没有任何难度，是不是还记得上面有一段哈希的操作我们照着键值原样仿制一个license的json对象即可：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">register (licenseKey) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> data = &#123;</span><br><span class=\"line\">          <span class=\"attr\">name</span>: <span class=\"string\">&quot;Teble&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">product</span>: <span class=\"string\">&quot;Teble product&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">licenseType</span>: <span class=\"string\">&quot;PS&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">quantity</span>: <span class=\"string\">&quot;Teble Quantity&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">timestamp</span>: <span class=\"string\">&quot;1575275098&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">licenseKey</span>: <span class=\"string\">&quot;It&#x27;s Cracked!!&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">crackedAuthor</span>: <span class=\"string\">&quot;Teble&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> file = path.<span class=\"title function_\">join</span>(app.<span class=\"title function_\">getUserPath</span>(), <span class=\"string\">&#x27;/license.key&#x27;</span>)</span><br><span class=\"line\">      fs.<span class=\"title function_\">writeFileSync</span>(file, <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(data, <span class=\"number\">2</span>))</span><br><span class=\"line\">      licenseInfo = data</span><br><span class=\"line\">      <span class=\"title function_\">setStatus</span>(<span class=\"variable language_\">this</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">      <span class=\"title function_\">resolve</span>(data)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>破解到这里可以基本告一段落了，软件是能使用了，但是更新的问题还没解决呢，如果startUML检测到版本有更新，或者手动误操作点击了更新，依旧是会进行后台下载不需要经过你二次同意的。</p>\n<h2 id=\"0x2-去除启动更新检测\"><a href=\"#0x2-去除启动更新检测\" class=\"headerlink\" title=\"0x2.去除启动更新检测\"></a>0x2.去除启动更新检测</h2><p>这部分逻辑比我想象中的难找了一点，我还纳闷了一会，他到底是怎么做到关闭软件时再弹出安装操作的，然后经历了几次卸载，观察发现，当软件开启时就会检测是否有更新，如果有则立马开启后台下载，网速嗖嗖嗖的飚，路径下载到了<code>AppData\\Roaming\\StarUML</code>这个路径下，下载完成后，如果关闭软件，则会立马触发安装操作。</p>\n<p>这部分逻辑在<code>app/src/main-process/application.js</code>文件下注释一句：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Application</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">EventEmitter</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span> () &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>()</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">loadExtensions</span>()</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">handleCommands</span>()</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">handleMessages</span>()</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">handleEvents</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Check for updates on start</span></span><br><span class=\"line\">    <span class=\"comment\">// 启动时判断更新，注释就完事了</span></span><br><span class=\"line\">    <span class=\"comment\">//autoUpdater.checkForUpdatesAndNotify()</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>此外engin目录下还有一个<code>update-manager.js</code>，注释后，手动检测更新依旧返回已经是最新版无需更新的字样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Update Manager</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">UpdateManager</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">EventEmitter</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span> () &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>()</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">state</span> = <span class=\"string\">&#x27;no-update&#x27;</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">updateInfo</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">progress</span> = <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"comment\">// 注释这一句屏蔽手动更新检测</span></span><br><span class=\"line\">    <span class=\"comment\">//this.handleMessages()</span></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"0x3-破解完成\"><a href=\"#0x3-破解完成\" class=\"headerlink\" title=\"0x3.破解完成\"></a>0x3.破解完成</h2><p>现在我们已经获得了破解完成，最后我们在根目录使用<code>asar pack app app.asar</code>将app文件夹打包成asar文件，最后将文件替换进原路径即可。</p>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>破解方式至3.1.1依旧有效，不保证未来不会发生变化，仅供参考。</p>\n<p>曾经我们上课的时候，使用的startUML的颜值，那真的是一言难尽，可能我校用的还是1.0的上古版本（最主要是教材还对的上），太恐怖了，不过现在startUML 3.x的颜值真的很不错，QAQ虽然这也不是我破解的理由。好了好了，我这条咸鱼又滚回去过我的咸鱼生活惹！告辞~</p>"},{"title":"基于Zlib的c++流式解压","comments":1,"toc":true,"only":["home","category","tag"],"urlname":"zlib-stream-uncompress","date":"2022-12-15T07:27:00.000Z","pic":null,"_content":"\n# 前言\n\n因为{% hint '前段时间' '其实已经过去四个月了(' %}开源了一个用 C++ 实现的高性能 dex 运行时解析库[DexKit](https://github.com/LuckyPray/DexKit).\n\n然后里面{% hint '借鉴' '读书人的事，怎么能叫抄呢！' %}了哔哩漫游里面的解压代码，然后在中途也因为有部分APK的格式解析不了，又去学习了zip文件的格式并且修了修bug，不过这都是后话了。\n\n为什么要提起这个东西呢，因为前几天有人反馈说MIUI14的手机管家APK解析不出东西了，然后我第一反应是是不是路径填错了？但是反复确认后发现确实是解压不出来APK里面的dex文件，就开始了漫长的调试之旅。\n\n<!--more-->\n\n# 解惑历程\n\n首先我们先了解一下Zip文件的格式，当然我们只会选择其中几个需要的部分来讲述，如果想要了解完整的格式，请自行查看官方文档[ZIP File Format Specification](https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT)。\n\n## ZIP文件的结构\n\n根据官方文档所述，ZIP文件的整体结构如下所示：\n```text\n[local file header 1]\n[file data 1]\n[data descriptor 1]\n. \n.\n.\n[local file header n]\n[file data n]\n[data descriptor n]\n[archive decryption header] (EFS)\n[archive extra data record] (EFS)\n[central directory]\n[zip64 end of central directory record]\n[zip64 end of central directory locator] \n[end of central directory record]\n```\n\n我们只会选择其中与文件相关的3个结构来分析：\n- `local file header`：代表文件的头部信息，包含文件名、文件大小、文件的压缩方式等信息。\n- `file data`：代表文件的数据，如果文件没有压缩，那么这个数据就是文件的原始数据，如果文件被压缩了，那么这个数据就是压缩后的数据。\n- `data descriptor`（可选）：代表文件的数据描述符，如果文件被压缩了，那么这个数据描述符就会包含文件的原始大小，如果文件没有被压缩，那么这个数据描述符就会和`local file header`中的数据描述符一样。\n\n每个被打包进ZIP的文件都会存在这样顺序存在的数据区域（`data descriptor` 不一定会在所有的zip文件中出现，这个我们后面再提），然后就是下一个文件的数据区域，以此类推。\n\n接下来我们看一下 `local file header` 的结构：\n```text\nlocal file header signature     4 bytes  (0x04034b50)\nversion needed to extract       2 bytes\ngeneral purpose bit flag        2 bytes\ncompression method              2 bytes\nlast mod file time              2 bytes\nlast mod file date              2 bytes\ncrc-32                          4 bytes\ncompressed size                 4 bytes\nuncompressed size               4 bytes\nfile name length                2 bytes\nextra field length              2 bytes\n\nfile name (variable size)\nextra field (variable size)\n```\n首先是LocalFileHeader的签名，这个签名固定为(0x04034b50)，我们一般都会用这个来判断是否存在下一个文件的数据区域。然后里面比较重要的就是 `compressed size` 与 `uncompressed size` ，这两个字段分别代表压缩后的文件大小与原始文件大小，如果文件没有被压缩，那么这两个字段的值就是一样的。但是！！！不是所有的压缩文件都会按照标准来填充这两个字段，这也是我们开头提到问题的罪魁祸首。MIUI 14 的手机管家所有的压缩资源，将这两个字段{% hint '全部填充为0' '小米真有你的' %}，让我一度怀疑这是故意的还是打包工具的问题。\n\n上面我们提到了，下一个文件是紧跟着上一个文件的 `file data` 或者 `data descriptor` 区域，现在我们从 header 中获取到的信息是 `file data` 区域的大小为0，此时开始陷入了僵局，我开始思考应该怎样处理这个问题。因为这个未定义行为，在使用 `010 editor` 打开 apk 进行分析的过程中也会存在解析异常的问题。\n\n根据上面的已知信息，我们已知 `local file header signature` 是固定值，难道我们需要暴力往后遍历搜索下一个文件的签名才能判断数据吗？不，正常的压缩软件以及 JAVA 中的 `ZipInputStream` 都能正常打开并且解压这个非标准格式的APK文件，一定存在一个稳妥的方式解决我们的问题。\n\n## zlib格式\n\n看到这个小节的标题，有的人可能会想：“什么？zlib不是一个库吗，怎么是一个格式？？？”。没错，zlib是一种数据格式，它的算法与格式都是公开的，我们先搞清楚几个相关的概念：\n\n- zlib 是一种数据格式，用于存储压缩后的数据\n- gzip 也是一种数据格式，也用于存储压缩后的数据，不过它只保存单个文件\n- zip 文件是一种归档格式，它用来存储多个经过压缩后的 zlib 文件集合\n- deflate 是压缩算法，zlib 与 gzip 都使用它来压缩文件\n- inflate 是对应 deflate 算法的解压算法\n\n既然 zlib 是一种数据格式，那么它是否能得知自身的文件大小呢？是的，inflate 算法在解压过程中可以做到自终止，当读取到了超出数据本身的区域会停止读取，并且将信息返回，我们可以在这上面做文章解决我们开头的问题。\n\n# 解决方案\n\n通过对于 zlib 格式的相关了解，我们可以重新定制以下我们原本的解压步骤：\n\n- 读取 apk 文件，获取第一个 `local file header`。\n- 判断 header 中的 `compressed size` 是否为0，如果为0，我们假设这是错误的数据，我们获取数据区域的指针，并且将它开始的一部分数据作为本压缩文件的数据传递给 inflate 函数尝试解压，如果读取字节数为0，则表示数据区域确实为0，否则逐步向后读取尝试解压，直到 inflate 算法终止。到这里我们可以获得总共读取了多少字节，以及解压后的字节数。将真实值填充回结构体。\n- 解析完所有的 LocalFile 数据区域，并且将 fileName 以及 data 区域的指针存入 map。\n- 暴力查找 `classes.dex`, `classes2.dex`, `..`, `classesN.dex`, 逐一解压，再将数据交给 `DexKit` 进行后续处理。\n\n\n这里给出我的处理方式作为参考，如果想实现一个类似 JAVA 的 ZipInputStream 可以尝试自己封装一下。\n\n{% collapse zip_helper.h %}\n\n```c++\n#include <zlib.h>\n#include <sstream>\n\n#define UNZIP_BUF_CHUNK 512\n\nstatic void *myalloc([[maybe_unused]] void *q, unsigned n, unsigned m) {\n    return calloc(n, m);\n}\n\nstatic void myfree([[maybe_unused]] void *q, void *p) {\n    (void) q;\n    free(p);\n}\n\nstruct [[gnu::packed]] ZipFileRecord {\n    [[maybe_unused]] uint32_t signature;\n    [[maybe_unused]] uint16_t version;\n    [[maybe_unused]] uint16_t flags;\n    [[maybe_unused]] uint16_t compress;\n    [[maybe_unused]] uint16_t last_modify_time;\n    [[maybe_unused]] uint16_t last_modify_date;\n    [[maybe_unused]] uint32_t crc;\n    [[maybe_unused]] uint32_t compress_size;\n    [[maybe_unused]] uint32_t uncompress_size;\n    [[maybe_unused]] uint16_t file_name_length;\n    [[maybe_unused]] uint16_t extra_length;\n//    [[maybe_unused]] uint8_t file_name[0];\n\n    // fuck apk (compress_size | uncompress_size) == 0\n    std::pair<size_t, size_t> getRealSizeInfo() {\n        if (compress_size && uncompress_size) {\n            return {compress_size, uncompress_size};\n        }\n        z_stream stream{};\n        auto ret = inflateInit2(&stream, -MAX_WBITS);\n        if (ret != Z_OK) {\n            return {0, 0};\n        }\n\n        // 如果需要流式解压，使用 sstream 将解压后的结果写入即可\n        // std::stringstream ss;\n\n        char buf[UNZIP_BUF_CHUNK];\n        size_t total_read = 0;\n        size_t total_write = 0;\n        size_t input_pos = 0;\n\n        stream.zalloc = myalloc;\n        stream.zfree = myfree;\n        stream.opaque = nullptr;\n        stream.next_in = this->data();\n        stream.avail_in = UNZIP_BUF_CHUNK;\n\n        do {\n            if (input_pos == UNZIP_BUF_CHUNK) {\n                stream.next_in = this->data() + total_read;\n                stream.avail_in = UNZIP_BUF_CHUNK;\n                input_pos = 0;\n            }\n            stream.next_out = (u_char *) buf;\n            stream.avail_out = UNZIP_BUF_CHUNK;\n            ret = inflate(&stream, Z_PARTIAL_FLUSH);\n            switch (ret) {\n                case Z_OK: {\n                    // 将解压后的数据接入 sstream\n                    // ss.write(buf, UNZIP_BUF_CHUNK - stream.avail_out);\n                    size_t input_used = (UNZIP_BUF_CHUNK - input_pos) - stream.avail_in;\n                    total_write += UNZIP_BUF_CHUNK - stream.avail_out;\n                    input_pos += input_used;\n                    total_read += input_used;\n                    break;\n                }\n                case Z_BUF_ERROR:\n                    return {0, 0};\n                case Z_DATA_ERROR:\n                case Z_MEM_ERROR: {\n                    inflateEnd(&stream);\n                    return {0, 0};\n                }\n                default:\n                    break;\n            }\n        } while (ret != Z_STREAM_END);\n\n        inflateEnd(&stream);\n        // 压缩后总大小\n        total_read += (UNZIP_BUF_CHUNK - input_pos) - stream.avail_in;\n        // 压缩前总大小\n        total_write += UNZIP_BUF_CHUNK - stream.avail_out;\n        // 最后还需要补充写入最后一次循环的数据\n        // ss.write(buf, UNZIP_BUF_CHUNK - stream.avail_out);\n        \n        // 之后只需要读取 ss.str().data() 即可获取解压后的数据\n\n        return {total_read, total_write};\n    }\n\n    std::string_view file_name() {\n        return {reinterpret_cast<char *>(reinterpret_cast<uint8_t *>(this) + sizeof(ZipFileRecord)), file_name_length};\n    }\n\n    uint8_t *data() {\n        return reinterpret_cast<uint8_t *>(this) + sizeof(ZipFileRecord) + file_name_length + extra_length;\n    }\n};\n```\n\n{% endcollapse %}\n\n# End\n\n至此，问题的定位、分析、追踪以及修复处理总算告一段落，愿世上再无{% hint '未定义' '这种bug真讨厌！' %}\n\n","source":"_posts/基于Zlib的c++流式解压.md","raw":"title: 基于Zlib的c++流式解压\ntags:\n- zlib\n- c++\ncomments: true\ntoc: true\nonly:\n  - home\n  - category\n  - tag\nurlname: zlib-stream-uncompress\ncategories:\n  - 笔记\ndate: 2022-12-15 15:27:00\npic:\n---\n\n# 前言\n\n因为{% hint '前段时间' '其实已经过去四个月了(' %}开源了一个用 C++ 实现的高性能 dex 运行时解析库[DexKit](https://github.com/LuckyPray/DexKit).\n\n然后里面{% hint '借鉴' '读书人的事，怎么能叫抄呢！' %}了哔哩漫游里面的解压代码，然后在中途也因为有部分APK的格式解析不了，又去学习了zip文件的格式并且修了修bug，不过这都是后话了。\n\n为什么要提起这个东西呢，因为前几天有人反馈说MIUI14的手机管家APK解析不出东西了，然后我第一反应是是不是路径填错了？但是反复确认后发现确实是解压不出来APK里面的dex文件，就开始了漫长的调试之旅。\n\n<!--more-->\n\n# 解惑历程\n\n首先我们先了解一下Zip文件的格式，当然我们只会选择其中几个需要的部分来讲述，如果想要了解完整的格式，请自行查看官方文档[ZIP File Format Specification](https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT)。\n\n## ZIP文件的结构\n\n根据官方文档所述，ZIP文件的整体结构如下所示：\n```text\n[local file header 1]\n[file data 1]\n[data descriptor 1]\n. \n.\n.\n[local file header n]\n[file data n]\n[data descriptor n]\n[archive decryption header] (EFS)\n[archive extra data record] (EFS)\n[central directory]\n[zip64 end of central directory record]\n[zip64 end of central directory locator] \n[end of central directory record]\n```\n\n我们只会选择其中与文件相关的3个结构来分析：\n- `local file header`：代表文件的头部信息，包含文件名、文件大小、文件的压缩方式等信息。\n- `file data`：代表文件的数据，如果文件没有压缩，那么这个数据就是文件的原始数据，如果文件被压缩了，那么这个数据就是压缩后的数据。\n- `data descriptor`（可选）：代表文件的数据描述符，如果文件被压缩了，那么这个数据描述符就会包含文件的原始大小，如果文件没有被压缩，那么这个数据描述符就会和`local file header`中的数据描述符一样。\n\n每个被打包进ZIP的文件都会存在这样顺序存在的数据区域（`data descriptor` 不一定会在所有的zip文件中出现，这个我们后面再提），然后就是下一个文件的数据区域，以此类推。\n\n接下来我们看一下 `local file header` 的结构：\n```text\nlocal file header signature     4 bytes  (0x04034b50)\nversion needed to extract       2 bytes\ngeneral purpose bit flag        2 bytes\ncompression method              2 bytes\nlast mod file time              2 bytes\nlast mod file date              2 bytes\ncrc-32                          4 bytes\ncompressed size                 4 bytes\nuncompressed size               4 bytes\nfile name length                2 bytes\nextra field length              2 bytes\n\nfile name (variable size)\nextra field (variable size)\n```\n首先是LocalFileHeader的签名，这个签名固定为(0x04034b50)，我们一般都会用这个来判断是否存在下一个文件的数据区域。然后里面比较重要的就是 `compressed size` 与 `uncompressed size` ，这两个字段分别代表压缩后的文件大小与原始文件大小，如果文件没有被压缩，那么这两个字段的值就是一样的。但是！！！不是所有的压缩文件都会按照标准来填充这两个字段，这也是我们开头提到问题的罪魁祸首。MIUI 14 的手机管家所有的压缩资源，将这两个字段{% hint '全部填充为0' '小米真有你的' %}，让我一度怀疑这是故意的还是打包工具的问题。\n\n上面我们提到了，下一个文件是紧跟着上一个文件的 `file data` 或者 `data descriptor` 区域，现在我们从 header 中获取到的信息是 `file data` 区域的大小为0，此时开始陷入了僵局，我开始思考应该怎样处理这个问题。因为这个未定义行为，在使用 `010 editor` 打开 apk 进行分析的过程中也会存在解析异常的问题。\n\n根据上面的已知信息，我们已知 `local file header signature` 是固定值，难道我们需要暴力往后遍历搜索下一个文件的签名才能判断数据吗？不，正常的压缩软件以及 JAVA 中的 `ZipInputStream` 都能正常打开并且解压这个非标准格式的APK文件，一定存在一个稳妥的方式解决我们的问题。\n\n## zlib格式\n\n看到这个小节的标题，有的人可能会想：“什么？zlib不是一个库吗，怎么是一个格式？？？”。没错，zlib是一种数据格式，它的算法与格式都是公开的，我们先搞清楚几个相关的概念：\n\n- zlib 是一种数据格式，用于存储压缩后的数据\n- gzip 也是一种数据格式，也用于存储压缩后的数据，不过它只保存单个文件\n- zip 文件是一种归档格式，它用来存储多个经过压缩后的 zlib 文件集合\n- deflate 是压缩算法，zlib 与 gzip 都使用它来压缩文件\n- inflate 是对应 deflate 算法的解压算法\n\n既然 zlib 是一种数据格式，那么它是否能得知自身的文件大小呢？是的，inflate 算法在解压过程中可以做到自终止，当读取到了超出数据本身的区域会停止读取，并且将信息返回，我们可以在这上面做文章解决我们开头的问题。\n\n# 解决方案\n\n通过对于 zlib 格式的相关了解，我们可以重新定制以下我们原本的解压步骤：\n\n- 读取 apk 文件，获取第一个 `local file header`。\n- 判断 header 中的 `compressed size` 是否为0，如果为0，我们假设这是错误的数据，我们获取数据区域的指针，并且将它开始的一部分数据作为本压缩文件的数据传递给 inflate 函数尝试解压，如果读取字节数为0，则表示数据区域确实为0，否则逐步向后读取尝试解压，直到 inflate 算法终止。到这里我们可以获得总共读取了多少字节，以及解压后的字节数。将真实值填充回结构体。\n- 解析完所有的 LocalFile 数据区域，并且将 fileName 以及 data 区域的指针存入 map。\n- 暴力查找 `classes.dex`, `classes2.dex`, `..`, `classesN.dex`, 逐一解压，再将数据交给 `DexKit` 进行后续处理。\n\n\n这里给出我的处理方式作为参考，如果想实现一个类似 JAVA 的 ZipInputStream 可以尝试自己封装一下。\n\n{% collapse zip_helper.h %}\n\n```c++\n#include <zlib.h>\n#include <sstream>\n\n#define UNZIP_BUF_CHUNK 512\n\nstatic void *myalloc([[maybe_unused]] void *q, unsigned n, unsigned m) {\n    return calloc(n, m);\n}\n\nstatic void myfree([[maybe_unused]] void *q, void *p) {\n    (void) q;\n    free(p);\n}\n\nstruct [[gnu::packed]] ZipFileRecord {\n    [[maybe_unused]] uint32_t signature;\n    [[maybe_unused]] uint16_t version;\n    [[maybe_unused]] uint16_t flags;\n    [[maybe_unused]] uint16_t compress;\n    [[maybe_unused]] uint16_t last_modify_time;\n    [[maybe_unused]] uint16_t last_modify_date;\n    [[maybe_unused]] uint32_t crc;\n    [[maybe_unused]] uint32_t compress_size;\n    [[maybe_unused]] uint32_t uncompress_size;\n    [[maybe_unused]] uint16_t file_name_length;\n    [[maybe_unused]] uint16_t extra_length;\n//    [[maybe_unused]] uint8_t file_name[0];\n\n    // fuck apk (compress_size | uncompress_size) == 0\n    std::pair<size_t, size_t> getRealSizeInfo() {\n        if (compress_size && uncompress_size) {\n            return {compress_size, uncompress_size};\n        }\n        z_stream stream{};\n        auto ret = inflateInit2(&stream, -MAX_WBITS);\n        if (ret != Z_OK) {\n            return {0, 0};\n        }\n\n        // 如果需要流式解压，使用 sstream 将解压后的结果写入即可\n        // std::stringstream ss;\n\n        char buf[UNZIP_BUF_CHUNK];\n        size_t total_read = 0;\n        size_t total_write = 0;\n        size_t input_pos = 0;\n\n        stream.zalloc = myalloc;\n        stream.zfree = myfree;\n        stream.opaque = nullptr;\n        stream.next_in = this->data();\n        stream.avail_in = UNZIP_BUF_CHUNK;\n\n        do {\n            if (input_pos == UNZIP_BUF_CHUNK) {\n                stream.next_in = this->data() + total_read;\n                stream.avail_in = UNZIP_BUF_CHUNK;\n                input_pos = 0;\n            }\n            stream.next_out = (u_char *) buf;\n            stream.avail_out = UNZIP_BUF_CHUNK;\n            ret = inflate(&stream, Z_PARTIAL_FLUSH);\n            switch (ret) {\n                case Z_OK: {\n                    // 将解压后的数据接入 sstream\n                    // ss.write(buf, UNZIP_BUF_CHUNK - stream.avail_out);\n                    size_t input_used = (UNZIP_BUF_CHUNK - input_pos) - stream.avail_in;\n                    total_write += UNZIP_BUF_CHUNK - stream.avail_out;\n                    input_pos += input_used;\n                    total_read += input_used;\n                    break;\n                }\n                case Z_BUF_ERROR:\n                    return {0, 0};\n                case Z_DATA_ERROR:\n                case Z_MEM_ERROR: {\n                    inflateEnd(&stream);\n                    return {0, 0};\n                }\n                default:\n                    break;\n            }\n        } while (ret != Z_STREAM_END);\n\n        inflateEnd(&stream);\n        // 压缩后总大小\n        total_read += (UNZIP_BUF_CHUNK - input_pos) - stream.avail_in;\n        // 压缩前总大小\n        total_write += UNZIP_BUF_CHUNK - stream.avail_out;\n        // 最后还需要补充写入最后一次循环的数据\n        // ss.write(buf, UNZIP_BUF_CHUNK - stream.avail_out);\n        \n        // 之后只需要读取 ss.str().data() 即可获取解压后的数据\n\n        return {total_read, total_write};\n    }\n\n    std::string_view file_name() {\n        return {reinterpret_cast<char *>(reinterpret_cast<uint8_t *>(this) + sizeof(ZipFileRecord)), file_name_length};\n    }\n\n    uint8_t *data() {\n        return reinterpret_cast<uint8_t *>(this) + sizeof(ZipFileRecord) + file_name_length + extra_length;\n    }\n};\n```\n\n{% endcollapse %}\n\n# End\n\n至此，问题的定位、分析、追踪以及修复处理总算告一段落，愿世上再无{% hint '未定义' '这种bug真讨厌！' %}\n\n","slug":"基于Zlib的c++流式解压","published":1,"updated":"2022-12-15T11:00:20.463Z","_id":"clbosy57u000000m91zoaca4h","layout":"post","photos":[],"link":"","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.3.1/dist/hexo-tag-hint.min.css\"><h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>因为<span class=\"hint--info hint--rounded hint--top\" data-hint=\"其实已经过去四个月了(\" ontouchstart>前段时间</span>开源了一个用 C++ 实现的高性能 dex 运行时解析库<a href=\"https://github.com/LuckyPray/DexKit\">DexKit</a>.</p>\n<p>然后里面<span class=\"hint--info hint--rounded hint--top\" data-hint=\"读书人的事，怎么能叫抄呢！\" ontouchstart>借鉴</span>了哔哩漫游里面的解压代码，然后在中途也因为有部分APK的格式解析不了，又去学习了zip文件的格式并且修了修bug，不过这都是后话了。</p>\n<p>为什么要提起这个东西呢，因为前几天有人反馈说MIUI14的手机管家APK解析不出东西了，然后我第一反应是是不是路径填错了？但是反复确认后发现确实是解压不出来APK里面的dex文件，就开始了漫长的调试之旅。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"解惑历程\"><a href=\"#解惑历程\" class=\"headerlink\" title=\"解惑历程\"></a>解惑历程</h1><p>首先我们先了解一下Zip文件的格式，当然我们只会选择其中几个需要的部分来讲述，如果想要了解完整的格式，请自行查看官方文档<a href=\"https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT\">ZIP File Format Specification</a>。</p>\n<h2 id=\"ZIP文件的结构\"><a href=\"#ZIP文件的结构\" class=\"headerlink\" title=\"ZIP文件的结构\"></a>ZIP文件的结构</h2><p>根据官方文档所述，ZIP文件的整体结构如下所示：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[local file header 1]</span><br><span class=\"line\">[file data 1]</span><br><span class=\"line\">[data descriptor 1]</span><br><span class=\"line\">. </span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">[local file header n]</span><br><span class=\"line\">[file data n]</span><br><span class=\"line\">[data descriptor n]</span><br><span class=\"line\">[archive decryption header] (EFS)</span><br><span class=\"line\">[archive extra data record] (EFS)</span><br><span class=\"line\">[central directory]</span><br><span class=\"line\">[zip64 end of central directory record]</span><br><span class=\"line\">[zip64 end of central directory locator] </span><br><span class=\"line\">[end of central directory record]</span><br></pre></td></tr></table></figure>\n\n<p>我们只会选择其中与文件相关的3个结构来分析：</p>\n<ul>\n<li><code>local file header</code>：代表文件的头部信息，包含文件名、文件大小、文件的压缩方式等信息。</li>\n<li><code>file data</code>：代表文件的数据，如果文件没有压缩，那么这个数据就是文件的原始数据，如果文件被压缩了，那么这个数据就是压缩后的数据。</li>\n<li><code>data descriptor</code>（可选）：代表文件的数据描述符，如果文件被压缩了，那么这个数据描述符就会包含文件的原始大小，如果文件没有被压缩，那么这个数据描述符就会和<code>local file header</code>中的数据描述符一样。</li>\n</ul>\n<p>每个被打包进ZIP的文件都会存在这样顺序存在的数据区域（<code>data descriptor</code> 不一定会在所有的zip文件中出现，这个我们后面再提），然后就是下一个文件的数据区域，以此类推。</p>\n<p>接下来我们看一下 <code>local file header</code> 的结构：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local file header signature     4 bytes  (0x04034b50)</span><br><span class=\"line\">version needed to extract       2 bytes</span><br><span class=\"line\">general purpose bit flag        2 bytes</span><br><span class=\"line\">compression method              2 bytes</span><br><span class=\"line\">last mod file time              2 bytes</span><br><span class=\"line\">last mod file date              2 bytes</span><br><span class=\"line\">crc-32                          4 bytes</span><br><span class=\"line\">compressed size                 4 bytes</span><br><span class=\"line\">uncompressed size               4 bytes</span><br><span class=\"line\">file name length                2 bytes</span><br><span class=\"line\">extra field length              2 bytes</span><br><span class=\"line\"></span><br><span class=\"line\">file name (variable size)</span><br><span class=\"line\">extra field (variable size)</span><br></pre></td></tr></table></figure>\n<p>首先是LocalFileHeader的签名，这个签名固定为(0x04034b50)，我们一般都会用这个来判断是否存在下一个文件的数据区域。然后里面比较重要的就是 <code>compressed size</code> 与 <code>uncompressed size</code> ，这两个字段分别代表压缩后的文件大小与原始文件大小，如果文件没有被压缩，那么这两个字段的值就是一样的。但是！！！不是所有的压缩文件都会按照标准来填充这两个字段，这也是我们开头提到问题的罪魁祸首。MIUI 14 的手机管家所有的压缩资源，将这两个字段<span class=\"hint--info hint--rounded hint--top\" data-hint=\"小米真有你的\" ontouchstart>全部填充为0</span>，让我一度怀疑这是故意的还是打包工具的问题。</p>\n<p>上面我们提到了，下一个文件是紧跟着上一个文件的 <code>file data</code> 或者 <code>data descriptor</code> 区域，现在我们从 header 中获取到的信息是 <code>file data</code> 区域的大小为0，此时开始陷入了僵局，我开始思考应该怎样处理这个问题。因为这个未定义行为，在使用 <code>010 editor</code> 打开 apk 进行分析的过程中也会存在解析异常的问题。</p>\n<p>根据上面的已知信息，我们已知 <code>local file header signature</code> 是固定值，难道我们需要暴力往后遍历搜索下一个文件的签名才能判断数据吗？不，正常的压缩软件以及 JAVA 中的 <code>ZipInputStream</code> 都能正常打开并且解压这个非标准格式的APK文件，一定存在一个稳妥的方式解决我们的问题。</p>\n<h2 id=\"zlib格式\"><a href=\"#zlib格式\" class=\"headerlink\" title=\"zlib格式\"></a>zlib格式</h2><p>看到这个小节的标题，有的人可能会想：“什么？zlib不是一个库吗，怎么是一个格式？？？”。没错，zlib是一种数据格式，它的算法与格式都是公开的，我们先搞清楚几个相关的概念：</p>\n<ul>\n<li>zlib 是一种数据格式，用于存储压缩后的数据</li>\n<li>gzip 也是一种数据格式，也用于存储压缩后的数据，不过它只保存单个文件</li>\n<li>zip 文件是一种归档格式，它用来存储多个经过压缩后的 zlib 文件集合</li>\n<li>deflate 是压缩算法，zlib 与 gzip 都使用它来压缩文件</li>\n<li>inflate 是对应 deflate 算法的解压算法</li>\n</ul>\n<p>既然 zlib 是一种数据格式，那么它是否能得知自身的文件大小呢？是的，inflate 算法在解压过程中可以做到自终止，当读取到了超出数据本身的区域会停止读取，并且将信息返回，我们可以在这上面做文章解决我们开头的问题。</p>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><p>通过对于 zlib 格式的相关了解，我们可以重新定制以下我们原本的解压步骤：</p>\n<ul>\n<li>读取 apk 文件，获取第一个 <code>local file header</code>。</li>\n<li>判断 header 中的 <code>compressed size</code> 是否为0，如果为0，我们假设这是错误的数据，我们获取数据区域的指针，并且将它开始的一部分数据作为本压缩文件的数据传递给 inflate 函数尝试解压，如果读取字节数为0，则表示数据区域确实为0，否则逐步向后读取尝试解压，直到 inflate 算法终止。到这里我们可以获得总共读取了多少字节，以及解压后的字节数。将真实值填充回结构体。</li>\n<li>解析完所有的 LocalFile 数据区域，并且将 fileName 以及 data 区域的指针存入 map。</li>\n<li>暴力查找 <code>classes.dex</code>, <code>classes2.dex</code>, <code>..</code>, <code>classesN.dex</code>, 逐一解压，再将数据交给 <code>DexKit</code> 进行后续处理。</li>\n</ul>\n<p>这里给出我的处理方式作为参考，如果想实现一个类似 JAVA 的 ZipInputStream 可以尝试自己封装一下。</p>\n<div class=\"xControl\">\n    <div class=\"xHeading\"><div class=\"xIcon\"><i class=\"fa fa-plus\"></i></div><span>zip_helper.h</span></div>\n    <div class=\"xContent\"><div class=\"inner\">\n        <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;zlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sstream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> UNZIP_BUF_CHUNK 512</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">void</span> *<span class=\"title\">myalloc</span><span class=\"params\">([[maybe_unused]] <span class=\"type\">void</span> *q, <span class=\"type\">unsigned</span> n, <span class=\"type\">unsigned</span> m)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">calloc</span>(n, m);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title\">myfree</span><span class=\"params\">([[maybe_unused]] <span class=\"type\">void</span> *q, <span class=\"type\">void</span> *p)</span> </span>&#123;</span><br><span class=\"line\">    (<span class=\"type\">void</span>) q;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(p);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> [[gnu::packed]] ZipFileRecord &#123;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint32_t</span> signature;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint16_t</span> version;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint16_t</span> flags;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint16_t</span> compress;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint16_t</span> last_modify_time;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint16_t</span> last_modify_date;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint32_t</span> crc;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint32_t</span> compress_size;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint32_t</span> uncompress_size;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint16_t</span> file_name_length;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint16_t</span> extra_length;</span><br><span class=\"line\"><span class=\"comment\">//    [[maybe_unused]] uint8_t file_name[0];</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// fuck apk (compress_size | uncompress_size) == 0</span></span><br><span class=\"line\">    <span class=\"function\">std::pair&lt;<span class=\"type\">size_t</span>, <span class=\"type\">size_t</span>&gt; <span class=\"title\">getRealSizeInfo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (compress_size &amp;&amp; uncompress_size) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> &#123;compress_size, uncompress_size&#125;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        z_stream stream&#123;&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">auto</span> ret = <span class=\"built_in\">inflateInit2</span>(&amp;stream, -MAX_WBITS);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ret != Z_OK) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 如果需要流式解压，使用 sstream 将解压后的结果写入即可</span></span><br><span class=\"line\">        <span class=\"comment\">// std::stringstream ss;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">char</span> buf[UNZIP_BUF_CHUNK];</span><br><span class=\"line\">        <span class=\"type\">size_t</span> total_read = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">size_t</span> total_write = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">size_t</span> input_pos = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        stream.zalloc = myalloc;</span><br><span class=\"line\">        stream.zfree = myfree;</span><br><span class=\"line\">        stream.opaque = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">        stream.next_in = <span class=\"keyword\">this</span>-&gt;<span class=\"built_in\">data</span>();</span><br><span class=\"line\">        stream.avail_in = UNZIP_BUF_CHUNK;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (input_pos == UNZIP_BUF_CHUNK) &#123;</span><br><span class=\"line\">                stream.next_in = <span class=\"keyword\">this</span>-&gt;<span class=\"built_in\">data</span>() + total_read;</span><br><span class=\"line\">                stream.avail_in = UNZIP_BUF_CHUNK;</span><br><span class=\"line\">                input_pos = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            stream.next_out = (u_char *) buf;</span><br><span class=\"line\">            stream.avail_out = UNZIP_BUF_CHUNK;</span><br><span class=\"line\">            ret = <span class=\"built_in\">inflate</span>(&amp;stream, Z_PARTIAL_FLUSH);</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (ret) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> Z_OK: &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 将解压后的数据接入 sstream</span></span><br><span class=\"line\">                    <span class=\"comment\">// ss.write(buf, UNZIP_BUF_CHUNK - stream.avail_out);</span></span><br><span class=\"line\">                    <span class=\"type\">size_t</span> input_used = (UNZIP_BUF_CHUNK - input_pos) - stream.avail_in;</span><br><span class=\"line\">                    total_write += UNZIP_BUF_CHUNK - stream.avail_out;</span><br><span class=\"line\">                    input_pos += input_used;</span><br><span class=\"line\">                    total_read += input_used;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> Z_BUF_ERROR:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> Z_DATA_ERROR:</span><br><span class=\"line\">                <span class=\"keyword\">case</span> Z_MEM_ERROR: &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">inflateEnd</span>(&amp;stream);</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">while</span> (ret != Z_STREAM_END);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">inflateEnd</span>(&amp;stream);</span><br><span class=\"line\">        <span class=\"comment\">// 压缩后总大小</span></span><br><span class=\"line\">        total_read += (UNZIP_BUF_CHUNK - input_pos) - stream.avail_in;</span><br><span class=\"line\">        <span class=\"comment\">// 压缩前总大小</span></span><br><span class=\"line\">        total_write += UNZIP_BUF_CHUNK - stream.avail_out;</span><br><span class=\"line\">        <span class=\"comment\">// 最后还需要补充写入最后一次循环的数据</span></span><br><span class=\"line\">        <span class=\"comment\">// ss.write(buf, UNZIP_BUF_CHUNK - stream.avail_out);</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 之后只需要读取 ss.str().data() 即可获取解压后的数据</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;total_read, total_write&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">std::string_view <span class=\"title\">file_name</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">uint8_t</span> *&gt;(<span class=\"keyword\">this</span>) + <span class=\"built_in\">sizeof</span>(ZipFileRecord)), file_name_length&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">uint8_t</span> *<span class=\"title\">data</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">uint8_t</span> *&gt;(<span class=\"keyword\">this</span>) + <span class=\"built_in\">sizeof</span>(ZipFileRecord) + file_name_length + extra_length;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n \n    </div></div>\n    </div>\n\n<h1 id=\"End\"><a href=\"#End\" class=\"headerlink\" title=\"End\"></a>End</h1><p>至此，问题的定位、分析、追踪以及修复处理总算告一段落，愿世上再无<span class=\"hint--info hint--rounded hint--top\" data-hint=\"这种bug真讨厌！\" ontouchstart>未定义</span></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>因为<span class=\"hint--info hint--rounded hint--top\" data-hint=\"其实已经过去四个月了(\" ontouchstart>前段时间</span>开源了一个用 C++ 实现的高性能 dex 运行时解析库<a href=\"https://github.com/LuckyPray/DexKit\">DexKit</a>.</p>\n<p>然后里面<span class=\"hint--info hint--rounded hint--top\" data-hint=\"读书人的事，怎么能叫抄呢！\" ontouchstart>借鉴</span>了哔哩漫游里面的解压代码，然后在中途也因为有部分APK的格式解析不了，又去学习了zip文件的格式并且修了修bug，不过这都是后话了。</p>\n<p>为什么要提起这个东西呢，因为前几天有人反馈说MIUI14的手机管家APK解析不出东西了，然后我第一反应是是不是路径填错了？但是反复确认后发现确实是解压不出来APK里面的dex文件，就开始了漫长的调试之旅。</p>","more":"<h1 id=\"解惑历程\"><a href=\"#解惑历程\" class=\"headerlink\" title=\"解惑历程\"></a>解惑历程</h1><p>首先我们先了解一下Zip文件的格式，当然我们只会选择其中几个需要的部分来讲述，如果想要了解完整的格式，请自行查看官方文档<a href=\"https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT\">ZIP File Format Specification</a>。</p>\n<h2 id=\"ZIP文件的结构\"><a href=\"#ZIP文件的结构\" class=\"headerlink\" title=\"ZIP文件的结构\"></a>ZIP文件的结构</h2><p>根据官方文档所述，ZIP文件的整体结构如下所示：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[local file header 1]</span><br><span class=\"line\">[file data 1]</span><br><span class=\"line\">[data descriptor 1]</span><br><span class=\"line\">. </span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">[local file header n]</span><br><span class=\"line\">[file data n]</span><br><span class=\"line\">[data descriptor n]</span><br><span class=\"line\">[archive decryption header] (EFS)</span><br><span class=\"line\">[archive extra data record] (EFS)</span><br><span class=\"line\">[central directory]</span><br><span class=\"line\">[zip64 end of central directory record]</span><br><span class=\"line\">[zip64 end of central directory locator] </span><br><span class=\"line\">[end of central directory record]</span><br></pre></td></tr></table></figure>\n\n<p>我们只会选择其中与文件相关的3个结构来分析：</p>\n<ul>\n<li><code>local file header</code>：代表文件的头部信息，包含文件名、文件大小、文件的压缩方式等信息。</li>\n<li><code>file data</code>：代表文件的数据，如果文件没有压缩，那么这个数据就是文件的原始数据，如果文件被压缩了，那么这个数据就是压缩后的数据。</li>\n<li><code>data descriptor</code>（可选）：代表文件的数据描述符，如果文件被压缩了，那么这个数据描述符就会包含文件的原始大小，如果文件没有被压缩，那么这个数据描述符就会和<code>local file header</code>中的数据描述符一样。</li>\n</ul>\n<p>每个被打包进ZIP的文件都会存在这样顺序存在的数据区域（<code>data descriptor</code> 不一定会在所有的zip文件中出现，这个我们后面再提），然后就是下一个文件的数据区域，以此类推。</p>\n<p>接下来我们看一下 <code>local file header</code> 的结构：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local file header signature     4 bytes  (0x04034b50)</span><br><span class=\"line\">version needed to extract       2 bytes</span><br><span class=\"line\">general purpose bit flag        2 bytes</span><br><span class=\"line\">compression method              2 bytes</span><br><span class=\"line\">last mod file time              2 bytes</span><br><span class=\"line\">last mod file date              2 bytes</span><br><span class=\"line\">crc-32                          4 bytes</span><br><span class=\"line\">compressed size                 4 bytes</span><br><span class=\"line\">uncompressed size               4 bytes</span><br><span class=\"line\">file name length                2 bytes</span><br><span class=\"line\">extra field length              2 bytes</span><br><span class=\"line\"></span><br><span class=\"line\">file name (variable size)</span><br><span class=\"line\">extra field (variable size)</span><br></pre></td></tr></table></figure>\n<p>首先是LocalFileHeader的签名，这个签名固定为(0x04034b50)，我们一般都会用这个来判断是否存在下一个文件的数据区域。然后里面比较重要的就是 <code>compressed size</code> 与 <code>uncompressed size</code> ，这两个字段分别代表压缩后的文件大小与原始文件大小，如果文件没有被压缩，那么这两个字段的值就是一样的。但是！！！不是所有的压缩文件都会按照标准来填充这两个字段，这也是我们开头提到问题的罪魁祸首。MIUI 14 的手机管家所有的压缩资源，将这两个字段<span class=\"hint--info hint--rounded hint--top\" data-hint=\"小米真有你的\" ontouchstart>全部填充为0</span>，让我一度怀疑这是故意的还是打包工具的问题。</p>\n<p>上面我们提到了，下一个文件是紧跟着上一个文件的 <code>file data</code> 或者 <code>data descriptor</code> 区域，现在我们从 header 中获取到的信息是 <code>file data</code> 区域的大小为0，此时开始陷入了僵局，我开始思考应该怎样处理这个问题。因为这个未定义行为，在使用 <code>010 editor</code> 打开 apk 进行分析的过程中也会存在解析异常的问题。</p>\n<p>根据上面的已知信息，我们已知 <code>local file header signature</code> 是固定值，难道我们需要暴力往后遍历搜索下一个文件的签名才能判断数据吗？不，正常的压缩软件以及 JAVA 中的 <code>ZipInputStream</code> 都能正常打开并且解压这个非标准格式的APK文件，一定存在一个稳妥的方式解决我们的问题。</p>\n<h2 id=\"zlib格式\"><a href=\"#zlib格式\" class=\"headerlink\" title=\"zlib格式\"></a>zlib格式</h2><p>看到这个小节的标题，有的人可能会想：“什么？zlib不是一个库吗，怎么是一个格式？？？”。没错，zlib是一种数据格式，它的算法与格式都是公开的，我们先搞清楚几个相关的概念：</p>\n<ul>\n<li>zlib 是一种数据格式，用于存储压缩后的数据</li>\n<li>gzip 也是一种数据格式，也用于存储压缩后的数据，不过它只保存单个文件</li>\n<li>zip 文件是一种归档格式，它用来存储多个经过压缩后的 zlib 文件集合</li>\n<li>deflate 是压缩算法，zlib 与 gzip 都使用它来压缩文件</li>\n<li>inflate 是对应 deflate 算法的解压算法</li>\n</ul>\n<p>既然 zlib 是一种数据格式，那么它是否能得知自身的文件大小呢？是的，inflate 算法在解压过程中可以做到自终止，当读取到了超出数据本身的区域会停止读取，并且将信息返回，我们可以在这上面做文章解决我们开头的问题。</p>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><p>通过对于 zlib 格式的相关了解，我们可以重新定制以下我们原本的解压步骤：</p>\n<ul>\n<li>读取 apk 文件，获取第一个 <code>local file header</code>。</li>\n<li>判断 header 中的 <code>compressed size</code> 是否为0，如果为0，我们假设这是错误的数据，我们获取数据区域的指针，并且将它开始的一部分数据作为本压缩文件的数据传递给 inflate 函数尝试解压，如果读取字节数为0，则表示数据区域确实为0，否则逐步向后读取尝试解压，直到 inflate 算法终止。到这里我们可以获得总共读取了多少字节，以及解压后的字节数。将真实值填充回结构体。</li>\n<li>解析完所有的 LocalFile 数据区域，并且将 fileName 以及 data 区域的指针存入 map。</li>\n<li>暴力查找 <code>classes.dex</code>, <code>classes2.dex</code>, <code>..</code>, <code>classesN.dex</code>, 逐一解压，再将数据交给 <code>DexKit</code> 进行后续处理。</li>\n</ul>\n<p>这里给出我的处理方式作为参考，如果想实现一个类似 JAVA 的 ZipInputStream 可以尝试自己封装一下。</p>\n<div class=\"xControl\">\n    <div class=\"xHeading\"><div class=\"xIcon\"><i class=\"fa fa-plus\"></i></div><span>zip_helper.h</span></div>\n    <div class=\"xContent\"><div class=\"inner\">\n        <figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;zlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sstream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> UNZIP_BUF_CHUNK 512</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">void</span> *<span class=\"title\">myalloc</span><span class=\"params\">([[maybe_unused]] <span class=\"type\">void</span> *q, <span class=\"type\">unsigned</span> n, <span class=\"type\">unsigned</span> m)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">calloc</span>(n, m);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title\">myfree</span><span class=\"params\">([[maybe_unused]] <span class=\"type\">void</span> *q, <span class=\"type\">void</span> *p)</span> </span>&#123;</span><br><span class=\"line\">    (<span class=\"type\">void</span>) q;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(p);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> [[gnu::packed]] ZipFileRecord &#123;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint32_t</span> signature;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint16_t</span> version;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint16_t</span> flags;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint16_t</span> compress;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint16_t</span> last_modify_time;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint16_t</span> last_modify_date;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint32_t</span> crc;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint32_t</span> compress_size;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint32_t</span> uncompress_size;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint16_t</span> file_name_length;</span><br><span class=\"line\">    [[maybe_unused]] <span class=\"type\">uint16_t</span> extra_length;</span><br><span class=\"line\"><span class=\"comment\">//    [[maybe_unused]] uint8_t file_name[0];</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// fuck apk (compress_size | uncompress_size) == 0</span></span><br><span class=\"line\">    <span class=\"function\">std::pair&lt;<span class=\"type\">size_t</span>, <span class=\"type\">size_t</span>&gt; <span class=\"title\">getRealSizeInfo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (compress_size &amp;&amp; uncompress_size) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> &#123;compress_size, uncompress_size&#125;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        z_stream stream&#123;&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">auto</span> ret = <span class=\"built_in\">inflateInit2</span>(&amp;stream, -MAX_WBITS);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ret != Z_OK) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 如果需要流式解压，使用 sstream 将解压后的结果写入即可</span></span><br><span class=\"line\">        <span class=\"comment\">// std::stringstream ss;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">char</span> buf[UNZIP_BUF_CHUNK];</span><br><span class=\"line\">        <span class=\"type\">size_t</span> total_read = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">size_t</span> total_write = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">size_t</span> input_pos = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        stream.zalloc = myalloc;</span><br><span class=\"line\">        stream.zfree = myfree;</span><br><span class=\"line\">        stream.opaque = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">        stream.next_in = <span class=\"keyword\">this</span>-&gt;<span class=\"built_in\">data</span>();</span><br><span class=\"line\">        stream.avail_in = UNZIP_BUF_CHUNK;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (input_pos == UNZIP_BUF_CHUNK) &#123;</span><br><span class=\"line\">                stream.next_in = <span class=\"keyword\">this</span>-&gt;<span class=\"built_in\">data</span>() + total_read;</span><br><span class=\"line\">                stream.avail_in = UNZIP_BUF_CHUNK;</span><br><span class=\"line\">                input_pos = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            stream.next_out = (u_char *) buf;</span><br><span class=\"line\">            stream.avail_out = UNZIP_BUF_CHUNK;</span><br><span class=\"line\">            ret = <span class=\"built_in\">inflate</span>(&amp;stream, Z_PARTIAL_FLUSH);</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (ret) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> Z_OK: &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 将解压后的数据接入 sstream</span></span><br><span class=\"line\">                    <span class=\"comment\">// ss.write(buf, UNZIP_BUF_CHUNK - stream.avail_out);</span></span><br><span class=\"line\">                    <span class=\"type\">size_t</span> input_used = (UNZIP_BUF_CHUNK - input_pos) - stream.avail_in;</span><br><span class=\"line\">                    total_write += UNZIP_BUF_CHUNK - stream.avail_out;</span><br><span class=\"line\">                    input_pos += input_used;</span><br><span class=\"line\">                    total_read += input_used;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> Z_BUF_ERROR:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> Z_DATA_ERROR:</span><br><span class=\"line\">                <span class=\"keyword\">case</span> Z_MEM_ERROR: &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">inflateEnd</span>(&amp;stream);</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">while</span> (ret != Z_STREAM_END);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">inflateEnd</span>(&amp;stream);</span><br><span class=\"line\">        <span class=\"comment\">// 压缩后总大小</span></span><br><span class=\"line\">        total_read += (UNZIP_BUF_CHUNK - input_pos) - stream.avail_in;</span><br><span class=\"line\">        <span class=\"comment\">// 压缩前总大小</span></span><br><span class=\"line\">        total_write += UNZIP_BUF_CHUNK - stream.avail_out;</span><br><span class=\"line\">        <span class=\"comment\">// 最后还需要补充写入最后一次循环的数据</span></span><br><span class=\"line\">        <span class=\"comment\">// ss.write(buf, UNZIP_BUF_CHUNK - stream.avail_out);</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 之后只需要读取 ss.str().data() 即可获取解压后的数据</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;total_read, total_write&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">std::string_view <span class=\"title\">file_name</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">char</span> *&gt;(<span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">uint8_t</span> *&gt;(<span class=\"keyword\">this</span>) + <span class=\"built_in\">sizeof</span>(ZipFileRecord)), file_name_length&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">uint8_t</span> *<span class=\"title\">data</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">reinterpret_cast</span>&lt;<span class=\"type\">uint8_t</span> *&gt;(<span class=\"keyword\">this</span>) + <span class=\"built_in\">sizeof</span>(ZipFileRecord) + file_name_length + extra_length;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n \n    </div></div>\n    </div>\n\n<h1 id=\"End\"><a href=\"#End\" class=\"headerlink\" title=\"End\"></a>End</h1><p>至此，问题的定位、分析、追踪以及修复处理总算告一段落，愿世上再无<span class=\"hint--info hint--rounded hint--top\" data-hint=\"这种bug真讨厌！\" ontouchstart>未定义</span></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cl7pmazay0000xxsrdz2agr0w","category_id":"cl7pmazb20002xxsrhbg4fnwo","_id":"cl7pmazb40009xxsrhyy4crlv"},{"post_id":"cl7pmazb10001xxsr6e083m4z","category_id":"cl7pmazb20002xxsrhbg4fnwo","_id":"cl7pmazb5000bxxsr1oks8ntq"},{"post_id":"cl7pmazb30004xxsr0i3p788g","category_id":"cl7pmazb40008xxsr1hd6am1p","_id":"cl7pmazb5000fxxsrgyjp0bwm"},{"post_id":"cl7pmazb30005xxsr5llfhtol","category_id":"cl7pmazb40008xxsr1hd6am1p","_id":"cl7pmazb5000jxxsr07orei9p"},{"post_id":"clbosy57u000000m91zoaca4h","category_id":"cl7pmazb20002xxsrhbg4fnwo","_id":"clbosy57x000200m94x9w3nif"}],"PostTag":[{"post_id":"cl7pmazay0000xxsrdz2agr0w","tag_id":"cl7pmazb20003xxsr6w4rax61","_id":"cl7pmazb5000exxsr35z44fjh"},{"post_id":"cl7pmazay0000xxsrdz2agr0w","tag_id":"cl7pmazb40007xxsr69zwbskl","_id":"cl7pmazb5000gxxsrcnv25kab"},{"post_id":"cl7pmazay0000xxsrdz2agr0w","tag_id":"cl7pmazb4000axxsr2olg0jnu","_id":"cl7pmazb5000ixxsre56g3bxa"},{"post_id":"cl7pmazb10001xxsr6e083m4z","tag_id":"cl7pmazb5000dxxsr3mn728dn","_id":"cl7pmazb5000nxxsrd6il37gj"},{"post_id":"cl7pmazb10001xxsr6e083m4z","tag_id":"cl7pmazb5000hxxsr46j8gztc","_id":"cl7pmazb5000oxxsrcjsb83pk"},{"post_id":"cl7pmazb10001xxsr6e083m4z","tag_id":"cl7pmazb5000kxxsrbe8w5tzx","_id":"cl7pmazb6000qxxsre07l4q5i"},{"post_id":"cl7pmazb10001xxsr6e083m4z","tag_id":"cl7pmazb5000lxxsr1byze3ir","_id":"cl7pmazb6000rxxsrfb84dhss"},{"post_id":"cl7pmazb30005xxsr5llfhtol","tag_id":"cl7pmazb5000mxxsr7bdb83p8","_id":"cl7pmazb6000sxxsr8usi1qv2"},{"post_id":"cl7pmazb30005xxsr5llfhtol","tag_id":"cl7pmazb6000pxxsr5ns2e263","_id":"cl7pmazb6000txxsrfhrs05mb"},{"post_id":"clbosy57u000000m91zoaca4h","tag_id":"clbosy57w000100m93998g42m","_id":"clbosy57y000400m91xeccos0"},{"post_id":"clbosy57u000000m91zoaca4h","tag_id":"clbosy57x000300m982823p6l","_id":"clbosy57y000500m97j7seyyk"}],"Tag":[{"name":"SpringBoot","_id":"cl7pmazb20003xxsr6w4rax61"},{"name":"Java","_id":"cl7pmazb40007xxsr69zwbskl"},{"name":"后端","_id":"cl7pmazb4000axxsr2olg0jnu"},{"name":"springboot","_id":"cl7pmazb5000dxxsr3mn728dn"},{"name":"spock","_id":"cl7pmazb5000hxxsr46j8gztc"},{"name":"测试","_id":"cl7pmazb5000kxxsrbe8w5tzx"},{"name":"瞎说","_id":"cl7pmazb5000lxxsr1byze3ir"},{"name":"StartUML","_id":"cl7pmazb5000mxxsr7bdb83p8"},{"name":"破解","_id":"cl7pmazb6000pxxsr5ns2e263"},{"name":"zlib","_id":"clbosy57w000100m93998g42m"},{"name":"c++","_id":"clbosy57x000300m982823p6l"}]}}